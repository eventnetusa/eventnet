%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: TY_Franchise_no_contains.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: RRD%%CreationDate: 2/20/07%%BoundingBox: 0 0 298 207%%HiResBoundingBox: 0 0 297.2989 206.2032%%CropBox: 0 0 297.2989 206.2032%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 9300 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFFC3B08DB08DB08DB08DB08DB08DB08DB08DB08DB08DB08DB0%8DA1A1FD65FFBC8DB08D8D8DB08D8D8DB08D8D8DB08D8D8DB08D8D8DB08D%8D9976FD64FFCF8DB08DB08DB08DB08DB08DB08DB08DB08DB08DB08DB08D%B08D937CA8FD63FF9A9A76A176A87DA87DA18D8D8C8D8D8D8C9A7DA87DA8%7DA87DA87DA17DFD63FFA87D7D4B522727F827F8938DB08DB08DB0A1A1F8%27F827F827F827F87DFD63FFA852527E7DFD04FFCF8D8D8DB08D8D8DA84B%A1A1CAC3C9A1CAC3CAA8FD04FFCA9AC29AC2A0A19AC29AC29AC3A1FD08FF%C9A1CAC3C9A1CAC3C9A1CAA1CAFFCAC3C9A1CAC3C9A1FD07FFA7CAC3CAA1%FD08FFCAA0C293BC9AC2A7FD07FFA1C29AC29AC2A0A1FFFFFFCAA7FD0CFF%A1B08DB08DB08D9A7D27C2B08DB08DB08DB0A0A1FD04FF9AB08DB093A8A1%B08DB08DB0A0A17DFD06FFCF8DB08DB08DB08DB08DB08DA1A1FF93B08DB0%8DB08D9AA1FD06FFBC8DB0A0A1A8FD04FFCA9AB58DB08DB08DB08DB093C9%FD05FFC38DB08DB08DA1A17DFFC293BC9AFD0BFFBC8C8D8D8D8C8D9A7D52%FF8D8D8C8D8D8D8C9A76FFFFFFC98D8C8D93A87D6F8D8D8C8D93A84B7DFD%06FFA18D8D8D8C8D8D8D8C8D8D8D7D52A8938C8D8D8D8C8D8DA17DFD05FF%8D8D8DA84B7DFFFFCABC8C8D8D9375A1938D8CFD048DA1FD04FF9A8D8C8D%8D937D527DC993B58DBCFD0BFF8DB08DB08DB08DA852A8FF9A8DB08DB08D%B093A1A8FFCFB58DB093A87D2793B08DB08D9AA127FD07FFC38DB08DB093%A884A8A8A1A0A827FF8DB08DB08DB08DB09A7DFD04FFCAB08D9AA127A8FF%C3B58DB08DA17DA176768DB08DB08DB09AA7FFFFFFBC8DB08DB09AA827FF%C3BC93BC93FD0AFFA18D8DB08D8D8D937D27A8FFA08D8DB08D8D8D937DA8%FFC28D8D93A87D2752B08D8D8DB0A17652FD07FF93B08D8D8D9A7D272752%F8525152C38D8DB08D8D8DB08D9376FD04FFC28D8D7D7C52FFA0B08D8D8D%A17D51277D7D768DB08D8D8D937CFFFFCF8D8D8DB08DA17652FFCA93BC93%CAFD0AFFBC8DB08DB08DB09AA128FFFFCA8DB08DB08DB08DA853C98DB093%A87D2753C38DB08DB093A84BA8FD06FFCAB08DB08DB0A17C7DFD04FFA87D%C38DB08DB08DB08DB08DA17DFFFFFF93B093A827A8C3B08DB08D9A7D5228%FFFFFFC9B08DB08DB08DA87DFFA0B08DB08DB5A852A8FFFFFFCAFD0CFFFD%048D8C8D8DA1527DFFFFFF938D8D8C8D8D8D7D528D8D93A87D277DFF938D%8C8D8D9A7D27FD07FFC38D8D8C8D8DA827A8FD06FF938D8D8D8C8D8D8D8C%8D9976FFFFCA8D8C9A7D27A18D8D8D8C937D7627FD04FFCA8D8D8C8D8D8D%7D52FFBC8C8D8D8D93A127FD10FFCAB08DB08DB08DB58452A8FFFFFF99B0%8DB08DB08DBC93B093A8A1277DFFCFB08DB08DB0A0A152FD07FF9AB08DB0%8D9AA14CFFFFCAFFFFFFCAB08DB593B08DB08DB08DB57CFFFFC38DB0A1A1%52B68DB08DB09AA827A8FD04FFC9B08DB08DB08DA82EFF8DB08DB08DA176%7DFD10FFBC8DB08D8D8DB09AA127FD04FFC38D8D8DB08D8D8DB093A87D27%7DFFFFC38D8D8DB08DA827A8FD06FFCAB08D8D8DB08D936FBC9AA1A8FFFF%C38DB093A18DB08D8D8DB08DA17DFF938D8DA84BA08DB08D8D8DA17652FD%05FFC28D8D8DB08D9A7D52A08D8DB08D937D527DFD10FF93B08DB08DB08D%A1767DFD04FFCAB08DB08DB08DB093A8A1277DFFFFFF99B08DB08D9AA127%FD07FFC38DB08DB08DB08DB08DA1767DFFFF9AB08DA17C938DB08DB08DB0%9A7CCAB08D9A7D2793B08DB08D937D52A8FD05FF99B08DB08DB09AA152BC%8DB08DB09AA827FD10FFA88D8D8D8C8D8D937D52A8FD05FFFD048D8C8D8D%A17D277DFD04FF8D8C8D8D8D767C52FD07FF938D8C8D8D8D8C8D8D8D7D52%7DFFA88D8D8D7D52768D8C8D8D8D8C9376A18C8D9A7D518D8D8D8C8D99A1%27FD06FF8D8C8D8D8D8CA8527DFD048D8CA17652FD10FFC38DB08DB08DB0%93A827FD06FFBC8DB08DB08DBC845252FD04FFC98DB08DB08DA852A8FD07%FFB58DB08DB09AA8A1A19AA8F8FFFFC98DB093A8F8FF8DB08DB08DB08D9A%93B08DA8529A8DB08DB08DA1767DFD05FFC98DB08DB08DBCA127A1B08DB0%8DB0A1767DFD10FF93B08D8D8DB08DA07652FD06FFA0B08D8D8DB09AA127%FD05FF9A8D8DB08D9A7D27FD07FFC98D8D8DB08DA84B2727527652FFFF99%B08D9A7652FF9A8DB08D8D8DB08D8D8D9A7D2793B08D8D8DB07D527DFD05%FF9A8D8DB08D937D7C2EBC8DB08D8D93A820FD10FFCFB08DB08DB08DB0A1%767DFD06FFC28DB08DB08DA8527DFD05FFB58DB08DB0A0A152FD07FF9AB0%8DB08D9AA127A8FFA87D7DFFFFB58DB0A1767DFFC3B08DB08DB08DB08DB0%9AA152B58DB08DB093A827FD05FFCAB08DB08DB09AA827A893B08DB08DA1%7652FD10FFC38D8D8C8D8D8D93A827FD07FF938D8C8D8D937D27A8FD04FF%CA8C8D8D8D8CA84B7DFD07FF938C8D8D8D767D27FD06FFC98D8D93A827FF%FFFF8D8D8C8D8D8D8C8D8DA14B7D8D8D8C8D8D937D52FD05FFC28C8D8D8D%93A84B52A18D8D8D8C8D7D767DFD10FF9AB08DB08DB08DA17D52FD06FFCA%B08DB08DB09AA727FD05FF9AB08DB08DBCA127A8FD06FFCA8DB08DB08DA8%527DFD06FFBCB08DA0A152FFFFFF9A8DB08DB08DB08DBC8452A8B58DB08D%B093A159FD04FFCF8DB08DB093A87C27A8C38DB08DB093A827FD11FFB58D%8D8DB08D8D7D767DFD06FFC38D8D8DB08DA1527DFD05FF938DB08D8D9376%2EFFFFCAA1A17DFF9A8D8DB08D939A27A8FFA1C9A0A1FFB58D8D7D767DFF%FFFFC98D8DB08D8D8DB09AA127FF938D8DB08D8D7C7DFD04FF938D8DB099%A876277DFF93B08D8D8D9A7652FFFFC3C39AA1FD0AFFC98DB08DB08DB093%A827FD07FF93B08DB08DB0A852A8FD04FFCA8DB08DB08DB08DB08DB08DB0%A17D52B68DB08DB08DB08DB08DB08DA17D768DB08DA827A8FD04FF93B08D%B08DB08DA7767DFFC38DB08DB08D9375FFFFCF93B08DB59AA87C277DFFCA%B08DB08DB08DB08DB08DB08DA77653FD09FF998D8C8D8D8D8C9A7D27FD06%FFA18D8CFD048DA827FFFFC9A1A1938D8D8D8C8D8D8D8C8D8D8D93A82793%8C8D8D8D8C8D8D8D8C8D8D937D27698D8C997D2769936F936F938D8D8C8D%8D937D527CA1A79A8D8D8C8D8D8D6FBC8D8D8C9A7DA84B277DFFFFBC8D8D%8C8D8D8D8C8D8D8D8C9A7D27A8FD08FFCFB08DB08DB08DB09AA152FD05FF%CA9A93BC939A939AA14B8D8D8D938DBC939A93BC939A93BC939A93A87651%93BC939A93BC939A93BC939AA0A14B9A93BC9AA14BB08DB08DB08D9A93BC%939A9AA827938D9393A199B58DB08DB08D9A9AA8A17D2752A8FFFFFF999A%93BC939A93BC939A93BCA1A127FD09FFC28D8D8DB08D8D8DA15276759A6F%8D689A7DA17CA17DA17C7D4B8D8DB08D9A7CA17DA17CA17DA17CA17DA17C%4B6FA17CA17DA17CA17DA17CA17DA14BA07DA17CA1764B8DB08D8D8DB076%A17CA17DA152518D8D8DB06F7676A8A1A17DA87DA15127276F68936F9A76%A17DA17CA17DA17CA17DA17CA127A8FD08FFCF93BC939A93BC939AA15293%B08DB08DB08D76274B2751274B27768DB08DB08D4B2751274B2751274B27%51274B4BB06F4B2751274B2751274B2751274B8D52274B27516FB08DB08D%B08DB0274B2751274B6FB08DB08DB08D7527275152F82727516FB08DB08D%B08DB0274B274B274B274B275228522752FD09FFA0A0FD0876278D8D8D8C%8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8CFD048DB58D938DB58D938D938D8D%8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D%8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D8C8D8D8D%8C8D8D8D8C8D8D8D8C8D68936FA0A1FD04FFCA9A8DB06F764B764B764B76%4B768DB08DB08DB08DB08DB593B693BC93BC93BC93BC93B693B693B58DB5%8DB58DB58DB08DB08DB08DB08DB08DB08DB08DB08DB0FD0C8D698D8D8D69%8D8D8D698D8D8D698D8D8D698D8D8D698D8D8D69FD0C8DB08DB08DB08DB0%8DB08DB58D9AFFFF9A8DB08D8D8DB08D8D8DB08D8D8DB0939393BC99BC9A%BC9ABC93BC93938DB58D8D8DB08D8D8DB08D8D8DB08D8D8C8D8D8D688D68%8D6869686968696869686968696869686F6F936F6F6F936F6F6F939A9A76%9A9A9A769A9A9A769A9A9A769A9A9A769A9A9A6F936F6F6F936F6F6F6968%69686968696869688D688D8D8D6FFFFF93B08DB08DB08DB08DB593BC9AC2%9AC39ABC93BC93B58DB08DB08DB08DB08DB0FD048D698D688D6969686969%6968936F936FFD049AA0A1C9A1CAA1CAFD35FFCAA1C9A1A19A9A6F936993%FFFF8D8D8D8CB593BC9AC39ABC93BC93938C8D8D8D8C8D8D8D688D688D68%6968694469686F6F93769A75C9A1A1A8FD1DFFA8FD15FFA8FD0CFFA827FD%11FFCA8DBC9AC3C3C29ABC93B08DB08DB08DB08D8D698D696968696F936F%A09AC9A1FD2AFF27A8FD08FFA8A8FD09FFA84CFD0CFF527DFD11FF75B59A%BC93B08D8D8DB08D8D68696869686F6F9A76A1A1FD32FF7DF8FD08FFA8F8%FD0BFF7DFD0CFF27A8FD11FF938DB0FD048D696968696F9A9AC3A7FD39FF%2752FFFF5252A87D27A82727527D52FF52537D7D52FF52A852537DFF5252%7DA85252A8A827527DFF5252FF52527DFD09FF688D686968696F9AA0CAFD%3EFF522727FF27522752F8275227527D27277D27F827F827A8275327F852%5227277D5227277D2727F87D2727F87DF82727FD09FFCA6F9AA0CAFD42FF%A827527D7D52FFA8F87DF8A827FFA8A8277D52A82EA8277D52277D525327%A87D5227A87D5227A82752277D275252527DFD50FF5227277D277DFF2727%F852527DA827F87D277E277D527D277E27FFF85252FF27592EFF277D2EA8%2752F8275227A8277DFD4FFF7D277D277DF8FFFF277DFFFF27A85252277D%27FF27A8277D27527D7D5227A87D27527E7D5227A8527DF8A8FF7D52A827%FD50FF27A8FF277D275284F85227A8F8A8F827F852527D527D275253277E%527D2752277D2752277D27FF277D272753277D5253FD4FFF7D7DFFFF2EFF%2752FF5227A8A827A827525252A852A852A852A852FF2EFF52277D7D2727%7DA852A852FF2752A852FF7DA8FD70FF277EFD7DFFA827FD7EFF7D52FDFC%FFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFC%FFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFC%FFFD27FF527DFD04FFA8FFFFA8FD75FF52527E7D7D527D2752A85252A87D%FD72FF27FF52275227527D275252277D7DFD72FF52527DA8597D527D2E7D%527D52A8FDFCFFFDBCFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2007-02-20T15:33:27-05:00</xap:CreateDate>
         <xap:ModifyDate>2007-02-20T15:33:27-05:00</xap:ModifyDate>
         <xap:MetadataDate>2007-02-20T15:33:27-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>180</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A75+aXmG80TyZfS6fHJLq&#xA;d0v1WxSFWdxJLsXAXf4Fq3zplWaVCh1dp2Np4ZdTHxCI447ys0KHTfvfKkPkXzdNThpcwr/OAnv+&#xA;2VzFET3F9On29oo88sfhv9yo/wCX3nBEZ301lVQSxLxUAG5/bwmBHRhH2i0JNDIL90v1MeyLul8E&#xA;Ms80cEKl5ZWCRoOpZjQD78WM5iETKWwG5ZB/yrvzn/1bH/4OL/mvJeHLudN/oj0P+qD5S/U7/lXf&#xA;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&#xA;QVFOIW1AkvCPlKVQN4DAr0/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUC+haQ+&#xA;tR649qj6tDAbWG7apdIWbmyLXYVPUjfFUv1DyJ5Q1GHVob7S4Z49daJtWD8qztAAImY1qClBxIpT&#xA;FULd/lf+X15o1hotzoNpJpemOZLG1KUSNnNXIoQTzJq1ftd8VTKfyj5Yn1DTNRl0y3N5oymPSphG&#xA;FNuhXhxjAoAoXoO3bFUltfyf/LK1t5be38uWccc6ypLRTyKzlDIvOvLifTUUrQCoGxNVU3uPJ3li&#xA;4kvJJtOieTULQadeNQgvZqCBBsdk36DFUPL+XvkuVZlk0iBlnW0SZSG4slgKWqkVpxi/ZHTFUTd+&#xA;TvLF4dXa606GZtdjjh1csCTcJCvCNXNf2FO1OnXrirzrzH+XugzeYfK/kHSdFW18pwyTa5ryxxt6&#xA;MvoL6VvFJKal2eV/iDNXiMVZ3Y/l55JsdJtdItNHt4dOs7pL63t1B4i5iNUmYk1dh4sTiqveeSfK&#xA;l5b6tb3WmQzQ66yvq6vU/WGjACFzWvwcRxp07Yqp6V5C8naSdNOm6TBanSPWOnemCPSNyvGZhvu0&#xA;i7Mx3piqY6Noek6LZCx0q1S0tebymKMbGSVi7sSaklmPU4qjsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirBvNPnjU7K91T6g1tb6Z5dSBt&#xA;Zu7mGW5klmuOLx2lrDFJB+8aN1+NmI5Oo49SFUli/wCcgdAeGWQ6PqEfoLdC4LfVysc9qly/oFkl&#xA;cMziyejJVRtUioqqpXf56x2dtPaalpkmn67aR27XkQaC8hR5OcksY9KdHLRwwSHi3Fqqfh8SrKfK&#xA;35k2PmK/hsLfTLy2uylxJeR3AhX6t9Wne2IcrI3MmWMr+65cT9qmBWX4q7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnvm3/lTH6W1T/E31H9I+jF+lvX5&#xA;/Yovo+px+Hnx48f2qe2FVK1/5UX+jm+rfoz6h6M1eH2PT+qw+pxp3+r+l0+Lw+Lliq3/AJAV+l7y&#xA;n6N/SX1sfXeFf96vWNOfH4a+ry9vtduWKp75N/5Vz9fvf8MfVf0hQfXfT5etx26+p8dOVOVP2uu+&#xA;KsswK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:96CE3A8DBF6D11DBB1089887EDC5B0D4</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:96CE3A8EBF6D11DBB1089887EDC5B0D4</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:96CE3A8ABF6D11DBB1089887EDC5B0D4</stRef:instanceID>
            <stRef:documentID>uuid:96CE3A89BF6D11DBB1089887EDC5B0D4</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -206.203 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 206.203 li297.299 206.203 li297.299 0 licpclp[1 0 0 1 0 0 ] concat138.072 200.099 mo137.901 199.896 137.488 199.682 136.94 199.682 cv135.865 199.682 134.478 200.707 133.8 202.498 cv133.126 204.277 133.717 205.303 134.813 205.303 cv135.436 205.303 135.983 205.134 136.385 204.896 cv135.848 205.888 li135.45 206.091 135.02 206.203 134.343 206.203 cv132.86 206.203 131.923 204.874 132.822 202.498 cv133.726 200.11 135.69 198.781 137.152 198.781 cv137.883 198.781 138.318 198.995 138.552 199.197 cv138.072 200.099 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0 0 cmykf140.193 201.731 mo139.538 201.731 138.712 202.464 138.303 203.545 cv137.898 204.615 138.169 205.348 138.825 205.348 cv139.458 205.348 140.284 204.615 140.688 203.545 cv141.099 202.464 140.827 201.731 140.193 201.731 cvcp138.494 206.192 mo137.258 206.192 136.787 205.111 137.378 203.545 cv137.976 201.969 139.266 200.887 140.502 200.887 cv141.738 200.887 142.209 201.969 141.614 203.545 cv141.02 205.111 139.73 206.192 138.494 206.192 cvcpf144.109 206.091 mo145.405 202.667 li145.603 202.148 145.521 201.709 144.908 201.709 cv144.317 201.709 143.846 202.16 143.654 202.667 cv142.359 206.091 li141.445 206.091 li143.376 200.988 li144.182 200.988 li144.034 201.462 li144.439 201.102 144.833 200.887 145.456 200.887 cv146.369 200.887 146.734 201.54 146.352 202.554 cv145.013 206.091 li144.109 206.091 licpf150.159 201.777 mo148.901 201.777 li147.807 204.672 li147.646 205.1 147.807 205.325 148.149 205.325 cv148.321 205.325 148.47 205.303 148.629 205.224 cv148.166 206.079 li148.052 206.125 147.888 206.158 147.685 206.158 cv146.921 206.158 146.542 205.629 146.892 204.705 cv147.999 201.777 li147.235 201.777 li147.534 200.988 li148.297 200.988 li148.681 199.975 li149.759 199.513 li149.2 200.988 li150.575 200.988 li150.159 201.777 licpf152.193 203.726 mo151.469 203.793 li151.002 203.838 150.62 204.221 150.445 204.683 cv150.3 205.065 150.412 205.393 150.725 205.393 cv151.122 205.393 151.732 204.942 151.946 204.379 cv152.193 203.726 licp152.132 206.192 mo151.852 206.136 151.688 205.888 151.701 205.596 cv151.285 206.012 150.809 206.192 150.358 206.192 cv149.552 206.192 149.262 205.539 149.59 204.672 cv149.969 203.669 150.832 203.095 151.635 203.016 cv152.497 202.926 li152.629 202.577 li152.825 202.059 152.721 201.709 152.173 201.709 cv151.774 201.709 151.303 201.878 150.959 202.104 cv151.131 201.281 li151.563 201.022 152.065 200.887 152.559 200.887 cv153.516 200.887 153.942 201.518 153.5 202.689 cv152.706 204.784 li152.528 205.258 152.652 205.494 152.896 205.562 cv152.132 206.192 licpf156.271 200.076 mo156.089 200.076 155.893 199.659 155.969 199.457 cv156.05 199.243 156.562 198.826 156.744 198.826 cv156.928 198.826 157.125 199.243 157.044 199.457 cv156.967 199.659 156.454 200.076 156.271 200.076 cvcp153.534 206.091 mo155.465 200.988 li156.378 200.988 li154.447 206.091 li153.534 206.091 licpf158.252 206.091 mo159.548 202.667 li159.742 202.148 159.662 201.709 159.049 201.709 cv158.459 201.709 157.987 202.16 157.795 202.667 cv156.5 206.091 li155.586 206.091 li157.517 200.988 li158.322 200.988 li158.176 201.462 li158.581 201.102 158.975 200.887 159.598 200.887 cv160.511 200.887 160.876 201.54 160.492 202.554 cv159.154 206.091 li158.252 206.091 licpf161.125 206.192 mo160.642 206.192 160.297 206.023 160.135 205.854 cv160.369 204.807 li160.541 205.122 160.93 205.37 161.403 205.37 cv161.791 205.37 162.143 205.122 162.267 204.796 cv162.398 204.446 162.299 204.198 162.01 203.939 cv161.433 203.422 161.204 202.971 161.469 202.272 cv161.784 201.439 162.573 200.887 163.4 200.887 cv163.863 200.887 164.203 201.067 164.305 201.169 cv163.854 201.991 li163.747 201.845 163.535 201.698 163.127 201.698 cv162.794 201.698 162.487 201.912 162.371 202.216 cv162.248 202.543 162.354 202.746 162.653 203.005 cv163.253 203.522 163.49 203.974 163.2 204.739 cv162.898 205.539 162.124 206.192 161.125 206.192 cvcpf171.399 81.9648 mo171.488 81.2646 171.668 80.3721 171.869 79.4805 cv171.828 79.4805 li171.399 80.3721 170.909 81.2646 170.51 81.9648 cv167.722 86.9033 li170.575 86.9033 li171.399 81.9648 licp169.41 94.4854 mo170.27 89.165 li166.403 89.165 li163.373 94.4854 li161.595 94.4854 li173.417 73.9688 li174.37 73.9688 li171.271 94.4854 li169.41 94.4854 licp0 0 0 1 cmykf182.603 83.1113 mo182.246 82.4424 181.751 82.1563 181.026 82.1563 cv179.642 82.1563 177.733 84.1631 176.598 87.2852 cv175.463 90.4072 175.944 92.3828 177.35 92.3828 cv178.032 92.3828 178.744 92.1279 179.699 91.4912 cv178.48 94.1035 li177.813 94.5176 177.038 94.7725 176.253 94.7725 cv174.061 94.7725 173.117 91.9688 174.82 87.2852 cv176.534 82.5703 179.518 79.7666 181.709 79.7666 cv182.743 79.7666 183.357 80.1807 183.719 80.7217 cv182.603 83.1113 licpf184.683 85.6924 mo188.26 85.6924 li188.327 85.5645 188.42 85.3105 188.466 85.1826 cv189.011 83.6855 189.024 81.9971 188.074 81.9971 cv187.144 81.9971 185.622 83.6211 184.683 85.6924 cv189.665 86.4883 mo188.214 87.9229 li183.79 87.9229 li183.077 89.9932 183.054 92.4463 184.79 92.4463 cv185.741 92.4463 186.66 91.9688 187.603 91.1406 cv186.264 93.9121 li185.561 94.4219 184.73 94.7725 183.676 94.7725 cv181.381 94.7725 180.61 91.7773 182.256 87.2539 cv183.969 82.5391 186.879 79.7666 188.802 79.7666 cv190.974 79.7666 191.166 82.4746 190.171 85.2148 cv190.031 85.5967 189.823 86.1709 189.665 86.4883 cvcpf190.117 93.6025 mo189.909 92.9014 190.003 91.874 190.478 90.5674 cv193.489 82.2832 li192.021 82.2832 li192.833 80.0527 li194.301 80.0527 li195.344 77.1855 li197.557 75.8789 li196.039 80.0527 li198.686 80.0527 li197.646 82.2832 li195.228 82.2832 li192.25 90.4707 li191.81 91.6826 192.054 92.3193 192.715 92.3193 cv193.046 92.3193 193.338 92.2549 193.667 92.0322 cv192.518 94.4541 li192.285 94.5811 191.961 94.6768 191.568 94.6768 cv190.835 94.6768 190.325 94.3027 190.117 93.6025 cvf200.978 87.7949 mo199.563 87.9863 li198.647 88.1143 197.8 89.1973 197.324 90.5029 cv196.931 91.5859 197.049 92.5107 197.649 92.5107 cv198.414 92.5107 199.726 91.2363 200.306 89.6436 cv200.978 87.7949 licp200.114 94.7725 mo199.593 94.6133 199.352 93.9121 199.467 93.084 cv198.542 94.2627 197.571 94.7725 196.701 94.7725 cv195.152 94.7725 194.79 92.9238 195.682 90.4707 cv196.714 87.6367 198.545 86.0107 200.114 85.7881 cv201.799 85.5332 li202.158 84.5459 li202.691 83.0801 202.596 82.0928 201.541 82.0928 cv200.776 82.0928 199.816 82.5703 199.089 83.208 cv199.666 80.8818 li200.572 80.1494 201.58 79.7666 202.531 79.7666 cv204.372 79.7666 205.005 81.5508 203.8 84.8643 cv201.646 90.79 li201.159 92.1279 201.328 92.7979 201.775 92.9883 cv200.114 94.7725 licpf212.334 94.4854 mo216.007 84.3867 li216.516 82.9854 216.271 82.125 215.258 82.125 cv214.266 82.125 213.318 83.0801 212.844 84.3867 cv209.171 94.4854 li207.434 94.4854 li211.106 84.3867 li211.616 82.9854 211.37 82.125 210.336 82.125 cv209.344 82.125 208.417 83.0801 207.942 84.3867 cv204.27 94.4854 li202.513 94.4854 li207.761 80.0527 li209.312 80.0527 li208.888 81.3916 li209.764 80.4043 210.554 79.7666 211.752 79.7666 cv212.766 79.7666 213.292 80.5957 213.281 81.6465 cv214.139 80.5957 215.288 79.7666 216.652 79.7666 cv218.307 79.7666 218.763 81.582 217.847 84.0996 cv214.07 94.4854 li212.334 94.4854 licpf223.359 77.4727 mo223.008 77.4727 222.755 76.2949 222.964 75.7207 cv223.184 75.1152 224.295 73.9365 224.646 73.9365 cv224.997 73.9365 225.25 75.1152 225.03 75.7207 cv224.822 76.2949 223.711 77.4727 223.359 77.4727 cvcp216.283 94.4854 mo221.532 80.0527 li223.29 80.0527 li218.041 94.4854 li216.283 94.4854 licpf225.36 94.4854 mo228.883 84.8008 li229.415 83.335 229.393 82.0928 228.213 82.0928 cv227.075 82.0928 226.033 83.3662 225.512 84.8008 cv221.99 94.4854 li220.232 94.4854 li225.48 80.0527 li227.032 80.0527 li226.607 81.3916 li227.495 80.3721 228.313 79.7666 229.514 79.7666 cv231.271 79.7666 231.778 81.6143 230.735 84.4814 cv227.098 94.4854 li225.36 94.4854 licpf237.225 82.1563 mo235.964 82.1563 234.157 84.2266 233.044 87.2852 cv231.944 90.3125 232.245 92.3828 233.506 92.3828 cv234.728 92.3828 236.533 90.3125 237.635 87.2852 cv238.746 84.2266 238.445 82.1563 237.225 82.1563 cvcp232.617 94.7725 mo230.239 94.7725 229.656 91.7139 231.268 87.2852 cv232.889 82.8252 235.695 79.7666 238.073 79.7666 cv240.451 79.7666 241.034 82.8252 239.412 87.2852 cv237.802 91.7139 234.994 94.7725 232.617 94.7725 cvcpf246.375 82.125 mo245.631 82.125 244.835 82.666 244.208 83.3662 cv241.334 91.2676 li241.487 91.874 241.922 92.3828 242.646 92.3828 cv243.948 92.3828 245.714 90.3125 246.826 87.2539 cv247.928 84.2266 247.678 82.125 246.375 82.125 cvcp241.839 94.7725 mo241.094 94.7725 240.571 94.3906 240.351 93.9756 cv237.72 101.208 li235.983 101.208 li243.677 80.0527 li245.123 80.0527 li244.804 81.1045 li245.526 80.3086 246.53 79.7666 247.585 79.7666 cv249.321 79.7666 250.366 82.4111 248.605 87.2539 cv247.006 91.6504 244.195 94.7725 241.839 94.7725 cvcpf252.735 94.4854 mo256.258 84.8008 li256.79 83.335 256.767 82.0928 255.587 82.0928 cv254.473 82.0928 253.408 83.3662 252.888 84.8008 cv249.365 94.4854 li247.628 94.4854 li255.6 72.5664 li257.337 72.5664 li257.337 72.5664 254.208 81.168 254.231 81.1045 cv255.05 80.2764 255.793 79.7666 256.888 79.7666 cv258.646 79.7666 259.174 81.6143 258.131 84.4814 cv254.493 94.4854 li252.735 94.4854 licpf264.473 81.9971 mo263.542 81.9971 262.021 83.6211 261.081 85.6924 cv264.658 85.6924 li264.726 85.5645 264.818 85.3105 264.864 85.1826 cv265.409 83.6855 265.423 81.9971 264.473 81.9971 cvcp266.063 86.4883 mo264.612 87.9229 li260.188 87.9229 li259.476 89.9932 259.452 92.4463 261.188 92.4463 cv262.14 92.4463 263.059 91.9688 264.001 91.1406 cv262.662 93.9121 li261.959 94.4219 261.129 94.7725 260.074 94.7725 cv257.779 94.7725 257.009 91.7773 258.653 87.2539 cv260.367 82.5391 263.277 79.7666 265.2 79.7666 cv267.371 79.7666 267.564 82.4746 266.569 85.2148 cv266.43 85.5967 266.222 86.1709 266.063 86.4883 cvcpf269.855 94.4854 mo273.378 84.8008 li273.909 83.335 273.886 82.0928 272.708 82.0928 cv271.571 82.0928 270.528 83.3662 270.007 84.8008 cv266.485 94.4854 li264.728 94.4854 li269.977 80.0527 li271.526 80.0527 li271.103 81.3916 li271.989 80.3721 272.808 79.7666 274.009 79.7666 cv275.767 79.7666 276.272 81.6143 275.229 84.4814 cv271.593 94.4854 li269.855 94.4854 licpf138.254 200.013 mo138.084 199.811 137.671 199.596 137.123 199.596 cv136.048 199.596 134.661 200.621 133.984 202.412 cv133.31 204.191 133.901 205.217 134.997 205.217 cv135.62 205.217 136.167 205.048 136.568 204.811 cv136.032 205.802 li135.632 206.005 135.203 206.117 134.525 206.117 cv133.043 206.117 132.107 204.788 133.006 202.412 cv133.909 200.024 135.873 198.695 137.334 198.695 cv138.065 198.695 138.501 198.909 138.736 199.111 cv138.254 200.013 licpf140.376 201.646 mo139.72 201.646 138.896 202.378 138.487 203.459 cv138.082 204.529 138.352 205.262 139.008 205.262 cv139.641 205.262 140.468 204.529 140.873 203.459 cv141.281 202.378 141.009 201.646 140.376 201.646 cvcp138.678 206.106 mo137.441 206.106 136.969 205.025 137.562 203.459 cv138.159 201.883 139.449 200.801 140.686 200.801 cv141.921 200.801 142.392 201.883 141.796 203.459 cv141.204 205.025 139.913 206.106 138.678 206.106 cvcpf144.293 206.005 mo145.589 202.581 li145.784 202.063 145.704 201.623 145.091 201.623 cv144.501 201.623 144.029 202.074 143.837 202.581 cv142.542 206.005 li141.628 206.005 li143.559 200.902 li144.364 200.902 li144.218 201.376 li144.623 201.016 145.017 200.801 145.64 200.801 cv146.553 200.801 146.918 201.454 146.534 202.468 cv145.194 206.005 li144.293 206.005 licpf150.342 201.691 mo149.085 201.691 li147.989 204.586 li147.827 205.014 147.989 205.239 148.333 205.239 cv148.504 205.239 148.654 205.217 148.812 205.138 cv148.349 205.993 li148.234 206.039 148.071 206.072 147.867 206.072 cv147.104 206.072 146.726 205.543 147.073 204.619 cv148.183 201.691 li147.419 201.691 li147.718 200.902 li148.48 200.902 li148.863 199.889 li149.941 199.427 li149.383 200.902 li150.759 200.902 li150.342 201.691 licpf152.376 203.64 mo151.653 203.707 li151.185 203.752 150.803 204.135 150.628 204.597 cv150.483 204.979 150.596 205.307 150.908 205.307 cv151.305 205.307 151.917 204.856 152.129 204.293 cv152.376 203.64 licp152.314 206.106 mo152.034 206.05 151.87 205.802 151.885 205.51 cv151.469 205.926 150.991 206.106 150.541 206.106 cv149.735 206.106 149.445 205.453 149.772 204.586 cv150.152 203.583 151.015 203.009 151.818 202.93 cv152.68 202.84 li152.813 202.491 li153.008 201.973 152.903 201.623 152.355 201.623 cv151.958 201.623 151.485 201.792 151.144 202.018 cv151.313 201.195 li151.745 200.937 152.248 200.801 152.742 200.801 cv153.699 200.801 154.127 201.432 153.683 202.604 cv152.89 204.698 li152.711 205.172 152.836 205.408 153.079 205.476 cv152.314 206.106 licpf156.455 199.99 mo156.272 199.99 156.076 199.573 156.153 199.371 cv156.234 199.157 156.746 198.74 156.929 198.74 cv157.111 198.74 157.308 199.157 157.227 199.371 cv157.149 199.573 156.638 199.99 156.455 199.99 cvcp153.718 206.005 mo155.648 200.902 li156.562 200.902 li154.631 206.005 li153.718 206.005 licpf158.435 206.005 mo159.73 202.581 li159.927 202.063 159.846 201.623 159.232 201.623 cv158.643 201.623 158.171 202.074 157.978 202.581 cv156.683 206.005 li155.769 206.005 li157.699 200.902 li158.506 200.902 li158.359 201.376 li158.765 201.016 159.157 200.801 159.78 200.801 cv160.693 200.801 161.059 201.454 160.675 202.468 cv159.338 206.005 li158.435 206.005 licpf161.308 206.106 mo160.824 206.106 160.479 205.938 160.317 205.769 cv160.554 204.721 li160.725 205.036 161.114 205.284 161.586 205.284 cv161.975 205.284 162.325 205.036 162.45 204.71 cv162.581 204.36 162.481 204.112 162.192 203.854 cv161.615 203.336 161.388 202.885 161.652 202.187 cv161.968 201.354 162.757 200.801 163.585 200.801 cv164.047 200.801 164.387 200.981 164.488 201.083 cv164.037 201.905 li163.932 201.759 163.719 201.612 163.31 201.612 cv162.978 201.612 162.67 201.826 162.555 202.13 cv162.432 202.457 162.537 202.66 162.836 202.919 cv163.437 203.437 163.674 203.888 163.384 204.653 cv163.081 205.453 162.308 206.106 161.308 206.106 cvcpf2.4736 lw0 lc0 lj4 ml[] 0 dshtrue sadj292.969 69.1631 mo292.599 66.2676 li204.042 50.3228 56.4502 51.0127 4.96582 67.3232 cv4.96582 67.3232 1.07275 82.9424 1.24219 82.9004 cv81.7026 63.3369 251.155 63.3369 292.969 69.1631 cvcp0 1 0.81 0.34 cmyk@294.074 71.6973 mo293.708 68.8008 li205.386 52.9009 57.3164 53.624 6.07178 69.8564 cv6.07178 69.8564 2.18213 85.4785 2.35107 85.4355 cv82.8149 65.8691 252.26 65.8691 294.074 71.6973 cvcpf292.969 69.1631 mo292.599 66.2676 li204.282 50.3672 56.209 51.0879 4.96582 67.3232 cv4.96582 67.3232 1.07275 82.9424 1.24219 82.9004 cv81.7026 63.3369 251.155 63.3369 292.969 69.1631 cvcp0 1 0.81 0.04 cmykf130.948 63.3052 mo78.3037 63.7427 34.9849 68.5283 4.96582 75.8545 cv4.96582 75.8545 4.72998 76.7939 4.38184 78.209 cv34.9849 70.7236 77.5264 65.5693 130.24 64.7295 cv130.948 63.3052 licplevel3{gsaveclp[-102.109 -14.3504 -14.3504 102.109 116.22 77.7021 ] concat/0 <</ShadingType 2 /ColorSpace /0 /CSA get_res/Coords [0 0 1 0 ]/Domain [0 1 ]/Extend[ true true]/Function<</Domain[0 1 ] /FunctionType 3/Functions [<</Domain[0 1 ] /Range[0 1 0 1 0 1 0 1 ] /FunctionType 0/Order 1/BitsPerSample 8/Decode [0 1 0 1 0 1 0 1 ]/Size [64]/DataSource <~!<:=O!<(.L!;t%J!;akG!;X_C!;FP@!;=G>!;4><!;"/9!:n&7!:[l4!:R`1!:@Q.!:7H,!:.?*!9q0'!9h'%!9Um"!9L`t!9CWr!91Ho!9(?m!8k0i!8b'g!8Omd!8Faa!8=X_!8+I\!8"@Z!7e1W!7\(U!7RqR!7@bO!77YM!7%JJ!6qAH!6_2E!6V)C!6Lr@!6:c<!61Z:!5tK7!5kB5!5b93!5P*0!5Fs-!54d*!5+[(!4nL%!4eC#!4\:!!4J*s!4@sp!4.dm!4%[k!3qRi!3_Cf!3V:c!3D(_!3:t]!3(eZ!2t\X!2kSV!2YDS~>>><</Domain[0 1 ] /Range[0 1 0 1 0 1 0 1 ] /FunctionType 0/Order 1/BitsPerSample 8/Decode [0 1 0 1 0 1 0 1 ]/Size [64]/DataSource <~!2YDS!2P;Q!2G2O!2>)M!24uK!2+oJ!2"fH!1n]F!1eTD!1\KB!1SEA!1J<?!1A3=!18*;!1/!9!1%m7!0qg5!0h^3!0_U1!0VL/!0MC-!0D=,!0;4*!02+(!0)"&!/tn$!/ke"!/b_!!/YUt!/PLr!/GCp!/>:n!/54m!/,+k!/#"i!.nng!.eee!.\\c!.SVb!.JM`!.AD^!.8;[!./2Y!.&,X!-r#V!-hoT!-_fR!-V]P!-MTN!-DNM!-;EK!-2<I!-)3G!,u*E!,l!C!,bpB!,Yg@!,P^>!,GU<!,>L:!,5F9!,,=7!,#45!+f%2~>>>]/Bounds [0.494382 ]/Encode [0 1 0 1 ]>>>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore}iflevel3 not{gsave[-102.109 -14.3504 -14.3504 102.109 116.22 77.7021 ] concatclp/0 {/0 /CSA get_res setcolorspace<</NumSamples 256 /NumComp 4 /Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]/Samples[0 <~s8Mupr;6?eq=s^Yp@\+NoCMPCnF5o7md9B,lg!a!ki_-kjlGL_io8qThr!;Hh;$c>g=b-2f@JO'eC2mpdF$=ecd'eZbfe/OaiMNC`l5p8_o'@-^qd_!^:h1l]=PP`\@8rU[C!<IZEga>Yck43XfSS(Wi;qqVl$>fV50o^US=KVTqJ'NT:VXFSXc4>S!oe6R@'A.Q^3r&Q'@MsPEM)kOcYZcO,f6[NJrgSMi*CKM26tCLPCP<KnY25K7ec-JUr?%It)orI=6KjH[C'bH$OXZGB\4RF`heJF)uABEH,r:Df9N2D/F**CMR["Bk_6oB4kgg~><~cHXVXbfe2PaiVWFa2c3=`Pf^4_ns7+^qd_"^:h4m]Xtee\[f5[\$rfR[C!<IZa-j@Yct=7Y-"h-XK/D%WMuhpVl-DgV50o^US=HUTV.pLSt2FBS=?":R@0G0Q^=#(Q'@MsPEM)kOH>NaNfK*XN/NUOMM[.FLPLV=KnY25KS+o/JqAQ)J:N0"IsuiqI=6KjI!^3dH?sj^G^+IWGBS.QF`heJFE;MDEcQ/>E,]c7Df0H1D/F**Chmg$C2.HsBP;'lB4bafAS#C_A7K+Y@U`bS?smAL?X@&F?!U]?>[(E9>$>'3=]ed-='&F'<E3$u<)Z^o~><~$47+I$47+I#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RCY?#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tG;"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,#3"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1~>]>>0 0 1 0 []true true []/DeviceCMYKGenStrips} /Gradient add_res /0 /Gradient get_res exec grestore}ifnewpath51.1348 11.3003 mo51.2852 11.3003 51.4448 11.3003 51.6177 11.3032 cv70.96 11.3032 li68.9023 2.20459 li11.2495 2.20459 li6.479 13.2334 li7.32568 13.0464 li10.5415 12.3423 13.0942 11.9795 17.4331 11.6035 cv20.5601 11.3003 21.4663 11.3003 22.2646 11.3003 cv22.2646 11.3003 29.7827 11.3003 30.8027 11.3003 cv30.4497 12.458 17.9917 53.3472 17.9917 53.3472 cv17.9917 53.3584 17.3564 55.377 17.3564 55.377 cv15.8252 59.522 14.4282 62.4946 12.6763 65.3047 cv12.2349 66.0127 li34.5156 66.0127 li34.5156 65.5342 li34.5156 65.3047 34.5205 65.0615 34.5288 64.8262 cv34.6055 62.1655 35.0654 59.4434 36.0615 55.6533 cv36.1831 54.9604 36.3696 54.3018 36.6211 53.644 cv36.6333 53.6084 48.2876 15.1353 49.4521 11.3003 cv49.9097 11.3003 51.1348 11.3003 51.1348 11.3003 cvcp255.784 42.6094 mo250.571 53.0483 240.308 60.5703 228.995 62.2456 cv220.279 63.5464 213.41 61.7231 209.654 57.1035 cv206.401 53.0923 205.641 47.1602 207.52 40.396 cv211.234 26.9966 221.775 17.6543 235.725 15.4067 cv238.23 14.9766 240.711 14.8311 243.115 14.9609 cv250.127 15.3862 255.138 18.0547 257.606 22.6777 cv258.698 24.7197 259.238 27.0947 259.238 29.7241 cv259.238 33.5771 258.075 37.9619 255.784 42.6094 cvcp242.527 23.4092 mo242.045 22.1226 241.125 21.2285 239.864 20.8237 cv237.953 20.2163 235.577 20.8184 233.328 22.4795 cv229.526 25.2432 227.005 29.1855 224.317 36.5313 cv223.182 39.7681 221.654 46.8535 221.579 47.7725 cv221.518 48.7822 221.483 49.6045 221.483 50.2974 cv221.483 51.6079 221.605 52.4541 221.87 53.2612 cv222.351 54.8354 223.412 55.981 224.862 56.5054 cv226.927 57.2422 229.478 56.6704 231.849 54.9248 cv234.923 52.6187 237.426 49.4829 240.418 40.9956 cv242.069 36.3652 242.947 31.7588 243.093 29.2515 cv243.269 26.0225 243.044 24.752 242.527 23.4092 cvcp208.646 25.9316 mo208.658 25.9028 209.492 23.124 209.508 23.0952 cv209.594 22.8828 li209.956 21.8032 210.604 20.2783 211.704 17.9038 cv212.825 15.791 li212.148 15.791 li202.596 15.791 li202.19 15.791 li202.176 16.2212 li202.091 18.2036 201.89 19.8877 201.105 22.6064 cv200.497 24.6641 li200.497 24.6675 200.19 25.7246 200.19 25.73 cv199.878 26.5698 li199.87 26.5908 196.167 38.5962 194.988 42.4121 cv194.241 40.3276 185.437 15.791 185.437 15.791 cv166.789 15.791 li167.21 16.4697 li167.616 17.126 167.73 17.5293 167.237 20.9814 cv167.106 22.0498 166.675 23.7988 166.019 25.9087 cv166.019 25.9102 158.304 50.8901 158.304 50.8901 cv158.304 50.8921 158.018 51.8262 158.018 51.8262 cv158.02 51.8169 157.011 54.8779 157.011 54.8779 cv156.093 57.2549 155.143 59.1968 154.024 60.9624 cv153.604 61.6279 li165.476 61.6279 li165.755 58.1763 li165.967 56.6479 166.172 55.7959 166.349 55.1191 cv166.352 55.1191 166.876 53.4497 166.876 53.4497 cv166.876 53.4482 167.296 52.0767 167.296 52.0767 cv167.313 52.0449 167.531 51.1089 167.531 51.1089 cv167.531 51.1304 171.997 36.7876 173.292 32.6201 cv174.049 34.6768 183.945 61.6279 183.945 61.6279 cv197.592 61.6279 li197.592 61.6279 208.325 26.7852 208.325 26.7793 cv208.646 25.9316 licp151.644 52.3467 mo147.136 53.2715 145.093 53.5249 142.126 53.5249 cv142.126 53.5249 138.773 53.5249 137.919 53.5249 cv138.236 52.5093 141.656 41.8979 141.837 41.3242 cv142.224 41.3242 143.054 41.3242 143.054 41.3242 cv144.747 41.3872 li146.768 41.562 148.598 41.8696 149.885 42.248 cv149.882 42.2451 150.487 42.4272 150.495 42.4272 cv150.495 42.4302 151.157 42.728 151.157 42.728 cv151.567 42.9063 li154.655 32.2617 li152.935 32.8037 li152.933 32.8037 151.971 33.0454 151.971 33.0454 cv151.979 33.0454 151.252 33.1855 151.252 33.1855 cv150.392 33.3569 li147.86 33.8667 146.27 33.9702 145.171 33.9702 cv145.171 33.9702 144.642 33.9702 144.191 33.9702 cv144.497 32.9673 147.446 23.1611 147.62 22.5854 cv148.142 22.5854 151.308 22.5854 151.308 22.5854 cv153.072 22.6475 li156.982 22.8828 158.503 23.2212 160.646 23.9414 cv161.083 24.0923 li162.97 15.791 li162.48 15.791 li134.121 15.791 li134.11 16.2231 li134.058 18.2744 133.752 20.0801 133.022 22.6719 cv133.026 22.6572 132.593 24.1045 132.593 24.1045 cv123.386 53.8877 li123.115 54.7627 li122.058 57.5317 121.228 59.2788 120.171 60.9624 cv119.747 61.6279 li150.435 61.6279 li154.841 51.6738 li151.644 52.3467 licp288.45 51.6714 mo284.713 52.9214 280.822 53.5249 276.561 53.5249 cv276.561 53.5249 272.771 53.5249 271.902 53.5249 cv272.23 52.4507 281.464 23.4507 281.475 23.4233 cv281.482 23.4233 281.54 23.2905 281.54 23.2905 cv281.553 23.252 282.644 20.439 282.644 20.439 cv282.639 20.4546 283.334 18.832 283.334 18.832 cv283.346 18.8076 283.571 18.1875 283.577 18.1875 cv283.938 17.4102 li284.698 15.2944 li284.056 15.2944 li268.082 15.2944 li268.091 16.2505 li268.115 18.0215 267.96 19.2188 266.978 22.7988 cv266.978 22.7915 266.529 24.3574 266.529 24.3574 cv257.742 52.7646 li256.68 56.2593 255.688 58.479 254.096 60.957 cv253.658 61.6279 li284.876 61.6279 li289.361 51.3667 li288.45 51.6714 licp118.823 51.6714 mo115.087 52.9214 111.199 53.5249 106.938 53.5249 cv106.938 53.5249 103.151 53.5249 102.274 53.5249 cv102.607 52.4507 111.842 23.4507 111.853 23.4233 cv111.854 23.4233 111.917 23.2905 111.917 23.2905 cv111.937 23.252 113.021 20.439 113.021 20.439 cv113.013 20.4546 113.95 18.1875 113.95 18.1875 cv113.952 18.1875 114.311 17.4102 114.311 17.4102 cv115.077 15.2944 li114.431 15.2944 li98.4561 15.2944 li98.4604 16.2505 li98.4946 18.0215 98.3354 19.2188 97.3564 22.7988 cv97.3564 22.7915 96.9014 24.3574 96.9014 24.3574 cv88.1138 52.7646 li87.0552 56.2593 86.0679 58.479 84.4683 60.957 cv84.0313 61.6279 li115.251 61.6279 li119.744 51.3667 li118.823 51.6714 licp78.0859 37.3945 mo78.0859 37.3945 76.9272 38.5947 76.4668 39.4922 cv75.9155 40.3838 75.4204 41.4819 74.814 43.1484 cv74.4077 44.4302 li74.4077 44.4302 71.9829 52.2598 71.9829 52.2627 cv71.0405 55.2051 70.6958 57.1489 70.6196 59.9531 cv70.5713 61.6411 li51.9375 61.6411 li52.5195 60.9043 li53.6714 59.4434 54.2686 58.3857 55.2983 55.9565 cv56.0615 54.2817 56.3145 53.5771 56.4946 52.9121 cv56.4946 52.9121 59.3481 43.7192 59.4287 43.4644 cv59.0752 42.1226 54.7754 25.7104 54.77 25.7046 cv54.77 25.7046 53.5537 21.3306 53.5488 21.3228 cv53.5488 21.3228 53.1836 20.0635 53.1836 20.0576 cv53.1836 20.0576 52.6455 18.6357 52.6421 18.6274 cv52.6421 18.6274 52.2886 17.6133 52.2886 17.6123 cv51.5859 15.791 li71.4414 15.791 li71.4414 15.791 73.7124 30.7124 73.9824 32.4805 cv74.4502 33.0005 83.1694 20.0049 83.8462 18.3999 cv83.8462 18.3999 84.2178 17.3101 84.2275 17.2886 cv84.2275 17.2886 84.5356 16.5015 84.5405 16.5015 cv84.5425 16.4971 84.9199 15.292 84.9199 15.292 cv97.4087 15.292 li99.1846 15.292 li98.4604 17.126 li97.3003 17.5127 78.0859 37.3945 78.0859 37.3945 cvcp0 0 0 1 cmykf49.4707 9.1001 mo49.623 9.1001 49.7842 9.10205 49.9575 9.10742 cv69.3008 9.10742 li67.2417 0 li9.58643 0 li4.8208 11.0337 li5.66602 10.8462 li8.87939 10.1411 11.4302 9.77832 15.7729 9.40234 cv18.897 9.1001 19.8013 9.1001 20.6021 9.1001 cv20.6021 9.1001 28.1216 9.1001 29.1431 9.1001 cv28.7896 10.2588 16.3345 51.147 16.3345 51.147 cv16.3306 51.1553 15.6914 53.1753 15.6914 53.1753 cv14.1626 57.3223 12.7671 60.2954 11.0142 63.1035 cv10.5732 63.8115 li32.854 63.8115 li32.854 63.3369 li32.854 63.1035 32.8613 62.8643 32.8682 62.627 cv32.9458 59.9644 33.4014 57.2422 34.3984 53.4497 cv34.5205 52.7588 34.7065 52.0996 34.9619 51.4438 cv34.9712 51.4097 46.625 12.9346 47.7886 9.1001 cv48.2505 9.1001 49.4707 9.1001 49.4707 9.1001 cvcp254.121 40.4072 mo248.906 50.8452 238.646 58.3687 227.33 60.0449 cv218.616 61.3496 211.745 59.522 207.992 54.9023 cv204.739 50.8901 203.98 44.959 205.86 38.1973 cv209.575 24.7983 220.116 15.4541 234.063 13.2065 cv236.569 12.7754 239.054 12.6289 241.456 12.7622 cv248.465 13.1831 253.48 15.853 255.947 20.4795 cv257.038 22.5186 257.577 24.8975 257.577 27.5249 cv257.577 31.374 256.415 35.7617 254.121 40.4072 cvcp240.867 21.2104 mo240.39 19.9189 239.46 19.0264 238.202 18.6226 cv236.295 18.0132 233.914 18.6187 231.663 20.2754 cv227.871 23.0479 225.34 26.9824 222.654 34.3301 cv221.521 37.564 219.994 44.6582 219.919 45.5723 cv219.856 46.5791 219.823 47.4033 219.823 48.0942 cv219.823 49.4082 219.942 50.2559 220.204 51.0625 cv220.69 52.6318 221.751 53.7817 223.196 54.3027 cv225.268 55.0444 227.818 54.4668 230.189 52.7251 cv233.26 50.4209 235.761 47.2837 238.758 38.7974 cv240.401 34.1636 241.284 29.5596 241.426 27.0532 cv241.608 23.8252 241.383 22.5503 240.867 21.2104 cvcp206.984 23.7349 mo206.992 23.7056 207.838 20.9248 207.845 20.8975 cv207.933 20.6836 li208.298 19.6055 208.939 18.0781 210.044 15.707 cv211.169 13.5933 li210.484 13.5933 li200.932 13.5933 li200.532 13.5933 li200.512 14.02 li200.427 16.0034 200.229 17.6865 199.436 20.4087 cv198.841 22.4663 li198.841 22.4683 198.534 23.5239 198.534 23.5317 cv198.532 23.5317 198.213 24.3687 198.213 24.3687 cv198.212 24.3901 194.502 36.3979 193.327 40.2109 cv192.578 38.1294 183.778 13.5933 183.778 13.5933 cv165.128 13.5933 li165.552 14.2715 li165.956 14.9282 166.074 15.3335 165.572 18.7842 cv165.447 19.8491 165.014 21.5977 164.358 23.707 cv164.358 23.709 156.639 48.687 156.639 48.687 cv156.639 48.6914 156.356 49.6284 156.356 49.6284 cv156.358 49.6152 155.352 52.6821 155.352 52.6821 cv154.435 55.0542 153.478 56.9932 152.367 58.7593 cv151.945 59.4302 li163.811 59.4302 li164.095 55.9771 li164.309 54.4478 164.512 53.5957 164.69 52.9185 cv164.694 52.9185 165.222 51.2524 165.222 51.2524 cv165.222 51.2485 165.642 49.8696 165.642 49.8696 cv165.647 49.8438 165.87 48.9058 165.87 48.9058 cv165.867 48.9336 170.335 34.5903 171.626 30.417 cv172.392 32.4785 182.282 59.4302 182.282 59.4302 cv195.932 59.4302 li195.932 59.4302 206.666 24.582 206.668 24.5811 cv206.984 23.7349 licp149.985 50.1484 mo145.476 51.0693 143.427 51.3267 140.462 51.3267 cv140.462 51.3267 137.119 51.3267 136.257 51.3267 cv136.57 50.3105 139.995 39.6987 140.173 39.1211 cv140.563 39.1211 141.398 39.1211 141.398 39.1211 cv143.085 39.187 li145.103 39.3643 146.938 39.6689 148.222 40.0483 cv148.22 40.0449 148.825 40.2295 148.825 40.2295 cv148.828 40.2324 149.497 40.5269 149.497 40.5269 cv149.901 40.708 li152.999 30.063 li151.275 30.6025 li151.272 30.6025 150.313 30.8433 150.313 30.8433 cv150.325 30.8423 149.593 30.9839 149.593 30.9839 cv148.732 31.1592 li146.2 31.6665 144.604 31.77 143.508 31.77 cv143.508 31.77 142.981 31.77 142.531 31.77 cv142.838 30.7651 145.785 20.958 145.96 20.3872 cv146.48 20.3872 149.644 20.3872 149.644 20.3872 cv151.406 20.4463 li155.322 20.6836 156.843 21.0239 158.982 21.7432 cv159.419 21.8892 li161.305 13.5933 li160.818 13.5933 li132.457 13.5933 li132.447 14.0249 li132.398 16.0713 132.092 17.8828 131.362 20.4707 cv131.364 20.4575 130.932 21.9023 130.932 21.9023 cv121.725 51.686 li121.452 52.561 li120.395 55.3345 119.567 57.0776 118.509 58.7593 cv118.088 59.4302 li148.771 59.4302 li153.18 49.4756 li149.985 50.1484 licp286.781 49.4717 mo283.053 50.7183 279.159 51.3267 274.904 51.3267 cv274.904 51.3267 271.109 51.3267 270.236 51.3267 cv270.569 50.249 279.806 21.2476 279.816 21.2227 cv279.885 21.0908 li279.901 21.0547 280.984 18.2402 280.984 18.2402 cv280.979 18.2583 281.679 16.6343 281.679 16.6343 cv281.689 16.6089 281.909 15.9873 281.914 15.9863 cv282.273 15.2085 li283.035 13.0952 li282.396 13.0952 li266.419 13.0952 li266.426 14.0474 li266.453 15.8232 266.3 17.021 265.315 20.5977 cv265.324 20.5898 264.86 22.1616 264.86 22.1616 cv256.073 50.5645 li255.024 54.061 254.03 56.2798 252.429 58.7539 cv251.995 59.4302 li283.215 59.4302 li287.703 49.1636 li286.781 49.4717 licp117.162 49.4717 mo113.424 50.7183 109.536 51.3267 105.278 51.3267 cv105.278 51.3267 101.487 51.3267 100.612 51.3267 cv100.943 50.249 110.18 21.2476 110.19 21.2227 cv110.255 21.0908 li110.274 21.0547 111.358 18.2402 111.358 18.2402 cv111.354 18.2583 112.285 15.9873 112.287 15.9863 cv112.29 15.9863 112.651 15.2085 112.651 15.2085 cv113.412 13.0952 li112.77 13.0952 li96.791 13.0952 li96.8013 14.0474 li96.8301 15.8232 96.6763 17.021 95.6934 20.5977 cv95.6934 20.5898 95.2393 22.1616 95.2393 22.1616 cv86.4531 50.5645 li85.3955 54.061 84.4067 56.2798 82.8081 58.7539 cv82.3716 59.4302 li113.591 59.4302 li118.08 49.1636 li117.162 49.4717 licp76.4224 35.1924 mo76.4224 35.1924 75.2681 36.3979 74.8047 37.29 cv74.2554 38.1831 73.7598 39.2822 73.1538 40.9453 cv72.7427 42.228 li72.7427 42.228 70.3232 50.0605 70.3232 50.0649 cv69.3799 53.0083 69.0352 54.9492 68.9561 57.7539 cv68.9092 59.438 li50.2778 59.438 li50.8569 58.709 li52.0063 57.2461 52.6064 56.1885 53.6377 53.7563 cv54.4009 52.0806 54.6519 51.377 54.8359 50.7104 cv54.8359 50.7104 57.687 41.5186 57.7666 41.2612 cv57.4146 39.9214 53.1147 23.5103 53.1089 23.5015 cv53.1089 23.5015 51.8911 19.1289 51.8867 19.1216 cv51.8867 19.1216 51.5195 17.8657 51.5195 17.8594 cv51.5195 17.8594 50.9844 16.4409 50.9805 16.4297 cv50.6255 15.4141 li49.9248 13.5933 li69.7808 13.5933 li69.7808 13.5933 72.0522 28.5112 72.3223 30.2847 cv72.7886 30.8057 81.5083 17.8057 82.1846 16.2007 cv82.1846 16.2007 82.5557 15.1152 82.5649 15.0854 cv82.5649 15.0854 82.8745 14.3022 82.8789 14.3022 cv82.8789 14.2983 83.2544 13.0894 83.2544 13.0894 cv95.7471 13.0894 li97.5229 13.0894 li96.8013 14.9282 li95.6377 15.3169 76.4224 35.1924 76.4224 35.1924 cvcp0 1 0.81 0.04 cmykf20.6021 9.1001 mo20.6021 9.1001 24.4131 9.1001 26.9771 9.1001 cv27.2617 8.1709 27.4424 7.57813 27.4805 7.44922 cv26.4595 7.44922 18.9409 7.44922 18.9409 7.44922 cv18.145 7.44922 17.2368 7.44922 14.1123 7.75195 cv10.5903 8.05566 8.24463 8.354 5.76904 8.83447 cv4.8208 11.0337 li5.66602 10.8462 li8.87939 10.1411 11.4302 9.77832 15.7729 9.40234 cv18.897 9.1001 19.8013 9.1001 20.6021 9.1001 cvcp67.2417 0 mo65.9536 0 li67.6406 7.45459 li48.2925 7.45459 li48.1235 7.45166 47.9609 7.44922 47.811 7.44922 cv47.811 7.44922 46.5874 7.44922 46.1279 7.44922 cv44.9673 11.2881 33.311 49.7598 33.2959 49.7954 cv33.0483 50.4473 32.8613 51.1123 32.7373 51.8042 cv31.7407 55.5938 31.2842 58.3145 31.2041 60.9775 cv31.1992 61.2148 31.1953 61.4521 31.1953 61.6855 cv31.1924 62.1616 li11.584 62.1616 li11.397 62.4775 11.2104 62.7949 11.0142 63.1035 cv10.5732 63.8115 li32.854 63.8115 li32.854 63.3369 li32.854 63.1035 32.8613 62.8643 32.8682 62.627 cv32.9458 59.9644 33.4014 57.2422 34.3984 53.4497 cv34.5205 52.7588 34.7065 52.0996 34.9619 51.4438 cv34.9712 51.4097 46.625 12.9346 47.7886 9.1001 cv48.2505 9.1001 49.4707 9.1001 49.4707 9.1001 cv49.623 9.1001 49.7842 9.10205 49.9575 9.10742 cv69.3008 9.10742 li67.2417 0 licp255.947 20.4795 mo255.166 19.0073 254.09 17.7524 252.804 16.6875 cv253.357 17.3491 253.875 18.0547 254.286 18.8301 cv255.371 20.8691 255.917 23.249 255.917 25.8711 cv255.917 29.728 254.755 34.1079 252.458 38.7568 cv247.247 49.1973 236.987 56.7188 225.67 58.395 cv218.185 59.5161 212.073 58.3164 208.114 55.0371 cv211.892 59.5571 218.702 61.3364 227.33 60.0449 cv238.646 58.3687 248.906 50.8452 254.121 40.4072 cv256.415 35.7617 257.577 31.374 257.577 27.5249 cv257.577 24.8975 257.038 22.5186 255.947 20.4795 cvcp220.747 52.2568 mo220.524 51.8926 220.34 51.4976 220.204 51.0625 cv219.942 50.2559 219.823 49.4082 219.823 48.0942 cv219.823 47.4033 219.856 46.5791 219.919 45.5723 cv219.994 44.6582 221.521 37.564 222.654 34.3301 cv225.34 26.9824 227.871 23.0479 231.663 20.2754 cv233.914 18.6187 236.295 18.0132 238.202 18.6226 cv238.447 18.7002 238.671 18.8179 238.892 18.9331 cv238.369 17.9873 237.576 17.3052 236.542 16.9707 cv234.636 16.3618 232.255 16.9668 230.001 18.6265 cv226.203 21.3965 223.68 25.333 220.994 32.6782 cv219.858 35.916 218.331 43.0063 218.259 43.9219 cv218.192 44.9346 218.158 45.7544 218.158 46.4448 cv218.158 47.7603 218.282 48.6064 218.546 49.4102 cv218.934 50.6758 219.713 51.646 220.747 52.2568 cvcp210.484 13.5933 mo208.622 13.5933 li208.381 14.0586 li207.28 16.4297 206.633 17.9546 206.271 19.0356 cv206.185 19.2485 li206.177 19.2744 205.335 22.0532 205.327 22.0854 cv205.007 22.9316 li204.997 22.9316 194.267 57.7783 194.267 57.7783 cv181.681 57.7783 li182.062 58.8135 182.282 59.4302 182.282 59.4302 cv195.932 59.4302 li195.932 59.4302 206.666 24.582 206.668 24.5811 cv206.984 23.7349 li206.992 23.7056 207.838 20.9248 207.845 20.8975 cv207.933 20.6836 li208.298 19.6055 208.939 18.0781 210.044 15.707 cv211.169 13.5933 li210.484 13.5933 licp169.97 28.7729 mo168.671 32.938 164.204 47.2798 164.21 47.2563 cv164.21 47.2563 163.983 48.1973 163.979 48.2207 cv163.979 48.2207 163.563 49.6001 163.563 49.6045 cv163.563 49.6045 163.034 51.2676 163.03 51.2676 cv162.855 51.9458 162.644 52.7979 162.432 54.3247 cv162.153 57.7783 li152.946 57.7783 li152.759 58.1113 152.563 58.4453 152.367 58.7593 cv151.945 59.4302 li163.811 59.4302 li164.095 55.9771 li164.309 54.4478 164.512 53.5957 164.69 52.9185 cv164.694 52.9185 165.222 51.2524 165.222 51.2524 cv165.222 51.2485 165.642 49.8696 165.642 49.8696 cv165.647 49.8438 165.87 48.9058 165.87 48.9058 cv165.867 48.9282 169.475 37.3408 171.143 31.9746 cv170.533 30.311 170.105 29.1338 169.97 28.7729 cvcp191.663 38.5605 mo191.801 38.1294 191.967 37.5752 192.163 36.9556 cv189.577 29.752 183.778 13.5933 183.778 13.5933 cv182.711 13.5933 li184.694 19.1274 191.036 36.8047 191.663 38.5605 cvcp147.115 57.7783 mo119.092 57.7783 li118.903 58.1113 118.709 58.4419 118.509 58.7593 cv118.088 59.4302 li148.771 59.4302 li153.18 49.4756 li150.544 50.0288 li147.115 57.7783 licp160.818 13.5933 mo159.266 13.5933 li157.76 20.2368 li157.317 20.0913 li155.178 19.3716 153.663 19.0356 149.745 18.7998 cv147.984 18.7349 li147.984 18.7349 144.815 18.7349 144.298 18.7349 cv144.122 19.3086 141.175 29.1187 140.871 30.1196 cv141.317 30.1196 141.849 30.1196 141.849 30.1196 cv142.19 30.1196 142.591 30.1084 143.04 30.0791 cv143.976 26.9775 145.82 20.835 145.96 20.3872 cv146.48 20.3872 149.644 20.3872 149.644 20.3872 cv151.406 20.4463 li155.322 20.6836 156.843 21.0239 158.982 21.7432 cv159.419 21.8892 li161.305 13.5933 li160.818 13.5933 licp139.737 37.4717 mo139.737 37.4717 138.9 37.4717 138.51 37.4717 cv138.333 38.0474 134.91 48.6582 134.596 49.6753 cv134.993 49.6753 135.909 49.6753 136.783 49.6753 cv137.832 46.4053 140.029 39.5796 140.173 39.1211 cv140.563 39.1211 141.398 39.1211 141.398 39.1211 cv143.085 39.187 li145.103 39.3643 146.938 39.6689 148.222 40.0483 cv148.22 40.0449 148.825 40.2295 148.825 40.2295 cv148.828 40.2324 149.497 40.5269 149.497 40.5269 cv149.901 40.708 li152.999 30.063 li151.275 30.6025 li151.272 30.6025 150.932 30.6885 150.655 30.7593 cv148.245 39.0596 li147.831 38.8804 li147.831 38.8804 147.171 38.5815 147.167 38.5796 cv147.159 38.5786 146.556 38.3926 146.562 38.3936 cv145.276 38.021 143.44 37.7153 141.424 37.5352 cv139.737 37.4717 licp286.781 49.4717 mo286.176 49.6753 285.568 49.8325 284.955 49.998 cv281.55 57.7783 li253.037 57.7783 li252.843 58.1035 252.643 58.4268 252.429 58.7539 cv251.995 59.4302 li283.215 59.4302 li287.703 49.1636 li286.781 49.4717 licp280.614 13.5566 mo280.255 14.3379 li280.251 14.3418 280.022 14.9609 280.014 14.9834 cv280.014 14.9834 279.313 16.6064 279.319 16.5913 cv279.319 16.5913 278.237 19.4019 278.221 19.4409 cv278.221 19.4409 278.154 19.5688 278.152 19.5688 cv278.139 19.5981 268.904 48.5972 268.573 49.6753 cv268.948 49.6753 269.845 49.6753 270.759 49.6753 cv272.771 43.3428 279.806 21.2451 279.816 21.2227 cv279.885 21.0908 li279.901 21.0547 280.984 18.2402 280.984 18.2402 cv280.979 18.2583 281.679 16.6343 281.679 16.6343 cv281.689 16.6089 281.909 15.9873 281.914 15.9863 cv282.273 15.2085 li283.035 13.0952 li282.396 13.0952 li280.779 13.0952 li280.614 13.5566 licp117.162 49.4717 mo116.559 49.6753 115.943 49.8325 115.328 49.998 cv111.929 57.7783 li83.4106 57.7783 li83.2158 58.1035 83.0186 58.4268 82.8081 58.7539 cv82.3716 59.4302 li113.591 59.4302 li118.08 49.1636 li117.162 49.4717 licp110.99 13.5566 mo110.627 14.3379 li110.627 14.3418 109.689 16.6064 109.695 16.5913 cv109.695 16.5913 108.613 19.4019 108.596 19.4409 cv108.596 19.4409 108.53 19.5688 108.525 19.5688 cv108.521 19.5981 99.2837 48.5972 98.9482 49.6753 cv99.3223 49.6753 100.226 49.6753 101.134 49.6753 cv103.144 43.3428 110.183 21.2451 110.19 21.2227 cv110.255 21.0908 li110.274 21.0547 111.358 18.2402 111.358 18.2402 cv111.354 18.2583 112.285 15.9873 112.287 15.9863 cv112.29 15.9863 112.651 15.2085 112.651 15.2085 cv113.412 13.0952 li112.77 13.0952 li111.156 13.0952 li110.99 13.5566 licp95.7471 13.0894 mo95.2119 13.0894 li95.1372 13.2793 li93.9761 13.666 74.7646 33.5493 74.7646 33.5493 cv74.7646 33.5493 73.606 34.7451 73.1416 35.644 cv72.5962 36.5352 72.0981 37.6313 71.4917 39.2988 cv71.0835 40.5801 li71.0835 40.5801 68.6616 48.4087 68.6616 48.416 cv67.7188 51.355 67.375 53.2988 67.2944 56.1045 cv67.249 57.7896 li51.5391 57.7896 li51.3301 58.0884 51.1079 58.3896 50.8569 58.709 cv50.2778 59.438 li68.9092 59.438 li68.9561 57.7539 li69.0352 54.9492 69.3799 53.0083 70.3232 50.0649 cv70.3232 50.0605 72.7427 42.228 72.7427 42.228 cv73.1538 40.9453 li73.7598 39.2822 74.2554 38.1831 74.8047 37.29 cv75.2681 36.3979 76.4224 35.1924 76.4224 35.1924 cv76.4224 35.1924 95.6377 15.3169 96.8013 14.9282 cv97.5229 13.0894 li95.7471 13.0894 licp68.3701 13.5933 mo69.7808 13.5933 li69.7808 13.5933 71.146 22.5581 71.8828 27.4126 cv71.2188 28.2573 70.7583 28.7402 70.6611 28.6328 cv70.4443 27.2256 68.9683 17.5205 68.3701 13.5933 cvcp0 0 0 0.25 cmykf293.01 14.3418 mo294.14 14.3418 295.021 14.748 295.67 15.5713 cv296.306 16.3779 296.519 17.3311 296.312 18.4302 cv296.095 19.5547 295.51 20.5269 294.566 21.335 cv293.613 22.1362 292.566 22.54 291.443 22.54 cv290.314 22.54 289.433 22.1392 288.78 21.3408 cv288.129 20.54 287.914 19.5718 288.138 18.4302 cv288.34 17.3271 288.923 16.3765 289.864 15.5713 cv290.822 14.748 291.871 14.3418 293.01 14.3418 cvcp297.201 18.4141 mo297.463 17.0488 297.196 15.8872 296.408 14.9229 cv295.62 13.9565 294.539 13.4756 293.165 13.4756 cv291.859 13.4756 290.629 13.9268 289.489 14.8154 cv288.271 15.771 287.526 16.9688 287.248 18.4141 cv286.983 19.7998 287.235 20.9751 288.015 21.9185 cv288.794 22.8755 289.881 23.3481 291.283 23.3481 cv292.636 23.3481 293.889 22.8867 295.033 21.9561 cv296.21 20.9976 296.934 19.8154 297.201 18.4141 cvcp293.323 17.395 mo293.262 17.6978 293.121 17.9219 292.902 18.0601 cv292.685 18.1953 292.402 18.2637 292.063 18.2637 cv291.492 18.2637 li291.798 16.6421 li292.158 16.6421 li292.524 16.6421 292.798 16.6772 292.989 16.7593 cv293.266 16.8735 293.381 17.0854 293.323 17.395 cvcp290.928 21.1846 mo291.308 19.2114 li291.613 19.2114 li291.936 19.2319 li292.158 19.2427 292.324 19.2744 292.419 19.3198 cv292.599 19.3979 292.712 19.5352 292.746 19.7285 cv292.771 19.8462 292.761 20.0781 292.715 20.4146 cv292.668 20.749 292.65 21.0068 292.666 21.1846 cv294.039 21.1846 li294.029 21.0278 li294.021 20.9751 294.021 20.9189 294.029 20.8613 cv294.03 20.8086 294.039 20.7549 294.045 20.6968 cv294.146 20.2012 li294.251 19.6333 294.166 19.2188 293.889 18.9644 cv293.734 18.8301 293.494 18.7217 293.157 18.6553 cv293.536 18.6187 293.873 18.499 294.175 18.3008 cv294.466 18.0972 294.658 17.7695 294.747 17.3052 cv294.869 16.6997 294.701 16.2607 294.268 15.9893 cv294.013 15.8286 293.668 15.7393 293.238 15.707 cv293.159 15.7012 292.778 15.6963 292.092 15.6953 cv291.417 15.6929 290.909 15.6929 290.57 15.6929 cv289.519 21.1846 li290.928 21.1846 licp0 1 0.81 0.04 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]][/Gradient [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (RRD) (RRD)%%Title: (TY_Franchise_no_contains.eps)%%CreationDate: 2/20/07 3:33 PM%AI9_DataStream%Gb!!kl]*:%OXBi+q$uqmJ//nm3:EZI=<QU6`_>hj[tL&nV?_a):n<l7C-!S4W*>>Vl'J$1I7?HArKO=/qo;Z:h!EDPUsWk")Sc(,%l'ibYJ+`Kt5<aMe^OGheC3k[^4ldODfCn?b0E1Rps7#QjgGWuZ&N^oFc)DJcI%*U(&%RY.22sYhHhYd?+'q0\rr+k6Ie2OYGMc]?%q=Mq@hu2j!n%S_["Fg19h`cMcoZb-74FR(s_nWk[ipgs1n"7Aoo^VaHDdU9Wrh7*_!"8>k:Hs7*l)VT!iUrg-If$1$\.sPCn"m@?%r,-]NWsAH+_12@X_l"TjqY6Q5kJse*p2ti^*Bn/OQf!;inb_e<']p7L*8]fGrnIHoq;JsS^Nl(S-IDbjc%#bKO+7*(]C3N5o)#W*%q><I+@;Ybfpsm8?)fBRU^8:bs2t+KYp0Sm?iT"!Qr."&tguaC,H2RQsrVH!?5D3>b0#,bqrpJh4T0Ic"rC=\:g?RG`O@I(\ot.W%%=Ac0?q>]1\\+!56Gh^si&$=)``YdEO@Jo/H?[quTi;1@CT>1Eg]0@a]Ie34;`Ur3"huEE9s**J*c;*,M$N5`%5(3A&+$Y8RrPXej%J*:BlpWZb]5>C59Zd58X";Wrl([U=^c]m>em`TPKq!n5Q1Z*TV!>tab6f77*\W/=MroGBG+R0>`rTB66J+q3;OjTK([=X_,S5Mu@%+\Y:_eg=*cP,trIrLkNaCQLI[m24ZP'CWWZL%rnto3["EocLsJr2[1fUnFOQT>(:#X$m=HU/-0#H+`OVYJDk4lC@PAhgbS%.t-S+%c-,"HI^\Y2hu-S_n@LnZCAn(lf:T9XrF*pqk?sl.9mqKbjnE-]l=$K*Hhbo/s4>0;?bQbrDY(W-n@_kM*s:CR(IBK)'#*DTPjiBZ%qW[T-T%9fS7B;9]MXP4Y.pCL"r6.@F5asLTAdI)J-X)L\<qm-]dHYa<X31ZB?7u$6E^?2XB70RR>UuCpI`CQsch`T\=N@K&d5U?g%G`n\so]?O/7k;dihpDdPi_9#$bR!+R"uF,?baY!HB/(c]a'Y2G^8!'pPP0qQiB-1]T7CBGGc,"LhiCg*(VZZho.scZ+,jHEXB8FQ%iO_:Q1Y:%?fQD$,G)Vr,`"r1k>%)mTNh1=rFk6DWXr)V^($<OO<ikMkQlj'&0?d2C+5_5%JD`Lm@=J!SX/K!lGh)QKNMHT6SFj]V%e+"m<d7Wpu]]dR^oGG-!9Acd5F1npas$IaLNg,CRiG"jjIZ!s[4'F(]@t':KI2:_f#.&[J"Y#pf7kpo[;!KA:P?(4k(qEP%dK9.H%f2V:CUJn8[HPLH93ELlTe$5Y_hlaZYoD6#sV^'faWRS"bY.2k#T&i25hmM53R5\Jl\#u8j4>#8gl6b=?qSUd?L:G^a.ML!@*AA[H%&l1/sE3($4hlH_@P9Fc5++>\@%/+%eqT8T5s5g>3YFk[KRkIB2aSMn9[AJGWTDDp`qKMCUGIRSn+8(ij;u_2jd_FC0rU7uIn(oL(%rRCl(^Xp6P:]55's-0-cmI4E5<WD2gqK'q8k"@?'f-NRsrS>g"HLjRTpD=sho=I&1Ge,:Cs*i6h4?Z07oBABprVUSZ1S2V\OkSp%%cQ5>CO5mLqa"Y8SHRE/dhKI:jp<3A=iDYd-2md>gZj6NZhW:XJ@uK`bj(kIhHY'YWBn"4.eO,0>[eKQDZWZ\YrRg^H=7gNY]VIP1%rV;708GbE&9>oHBHl%:)?O9ik]'SHso<eG6(S8BrcY(rO<O9/.KgU3T^MgI9oQ64>2/=$+II_i^MF[JIGfXCIY6",1gEg10NBAYr%)35+Bl*9:)f51X\p&<)AY+J3f[&3;VhCIh"4mfNK<,R%$',*.i!Xc^1Iu`KUGaL(SUfXH1SRIB55R0o]L7Ma)'<%gT48bYA0ZU^;%.r`+Hh>]nCO.`d/\7)98kDO@7>0N.>SCCmmPpAHq%,a-T?@.huQLKq.%RNRfF4$E4@(TngqW**dc$9<(F-RHG3mZGJ>#au.U/B:S%n!JM"Z1g@^I]iWS-1$i58cuh5]@GN.dWshU!ZTeDX^44Rku.L*k7O)o8"RH9\u+0\,Os*.#b:+**k,?5\-&Zrs45kh\2Y9o;PMH<%YokW00;.ES)I+DL#]*c;]\.eBq*nZgG+!d';6Uf/fNbV:"n3_]fZ#6nDpM?u/>.BYl^[^Ec?J6cn1m]DV4PT9-dXPK%'u>.Z<Kgq%T'W](<?a)4(TngN"4#59Yu7^`$G?K/QQ>aL3htV<pXAg!n?cXp^'a+(kG!>qp/kXJ#Lq%ChX7fMWhL53b[#6lCUbeGH^$68#->l$%5'AqufMspfTC<j3WbPO[cIU"-LEs_D0"urYLULX'`]%Meo:#UpM^us%Kc#7I3k)Y4Y;i[`mGm3*TT"7QC`6@I?/o*--q8WAEY,h"%POD&uH-V7b<\_>GmsS"ak,i^;ef1-KA7'ufVm^X:o^d3`r@7%Oeul("i:+n2PWMuciHfu'[H\Y<h/>C.D>Se1>2fJ:e*u?BjL@7c%CHTc=Y1Hos0<<[hEK0]t<odApQ=G9Cl>sPNfUpdLbHu\p.R6aU_o7g3,*b3![siSn>j9G+2<1tt]?0)Wqr,+&PtCh/nhli'b^?lM%X7/C7Vrn[jf:24Am+*\4S=o\g`88Vi0gM^);0DoiIK:hDdE#\']!CX>Z'KLG9C(Mr_g[iTB@R-&V!4B_ptF.fJ2us:r-[q^+*??/%p[sE(8%b>im3T*f:q;&Ddm`>1f]u4I]4fTkI5=GqpC`:/O?/Th'(6U\(^5rucHB!5qc"JbIS;tU<!^Nn-#7]=W,V/C3+oGO$iYF.%mh_m`("mE2T(b4^Hmc=$f.Q+VWXrr]9l;uO?IL_O60n[#1s-<'VtLbsR-^0Ik+nSh^#-pdf,iG(n#:9RX7pYB93dMi$AA'/e$nV7%p;G[%mmtX5L=Yt&9&OL<VL/pQh!T0O:L%p622+Wr]A;)qm:bsGf85e,afY<G!VAG4C\Q&l<l:N]Y::e0fDFg,PV$[N4S2,'d9ZY%%\O+edb?-[W>.I4KU9E@TAdD!<Wh1eAEjda?]jqJ.m`:Mj(S%#[^"HM"NU3Wn4<"0P.D3S?_]/P;[UQh*#75-CbXU``)PQ0Un'F[+%ipCocmGVb6-F:-%Dn(bjMMiO"]8rI8+*Gj,0%'?AWoku'.<XO]?D2:@eFM8%'6d]&>",G=gUIT6)V.bh?I@KO>A%jXp4E(6Y2fsN%?Nn`/_J+#3h>r(YY91-hrU'j?DElhCj!sMf\to66X[U"WDJ.5=h=0(:PpTX&2K?+HPDs@G"?sQS1t?JMJK%@aS;_V>XD>4!n5Ju!%-dJm0,Q.6_BWM?!A#CnDfD3PfQ9MJu+Q.J_hAsS/m#8J^ViFZX>)I,rCMi=W-:8=4`bNVQNb_oq3?BGKRrhTJriTN\)Luu/#qs\$%.Q[M$kF4-q;ggk,7"7P@oY2pQge#C5]>RmiU?!]p)7Hba'(fVK@[r("SmqrK4PJ8^UN0,`D3nM2aF"dPFh\FE';-_c7HeKqDte5M%S/b[\_eRccZPNDD_tLFOX&C+t]l.&WBG7BM5+0pRos]9Dn%W7CidF/B"$4cg"tX/*g_'1fSF=q7mm2:ep\%O0l+R&oo7#E*s.)<C%^K]r2q;ec<8OHFZq\LZgST//lJT\I]`P8F$@1O.$R>QFKiNDJS<r3l)BomHKk6l>!V`oAV9/oi9`P'4In*-Bj9_^R00YhZT[ES*0%'j(&*aX_8`nYP$7Nh?)m<\Ak";gm3C(%o&.rd!i24hpgPp0B^/Pm-fiS?/U_I.;*qG@/\FPuCikrh]?tD]8Ii8gq&E:;6<g^Iq#g%)O$,M`u&NgBhj'PR*sMGgs@fh\)s7Q_CmUnMS9Ce/VpeoIhqth09PNMDn^ba-CTe(F8h*khOE3Q]K'Vml/\gB.]R,E:0LkL'Rig;%.Qq/2NTL>1mqW)1LsT>:VPbA*OU)/;:K%Lf:ODPd3iLq:1q="O*<L@UY*G(B;;qe$c=oOm$f?<NW$!0^m[M`R*iKC#SRoQ/,U5U)%5^SKWk`^6`4`"U)b'+^:@]"Q4UM%pV.,iDekrm`l<979XE)Y&a^T$Bq1b=Q`a?(#`a1M"9nIo(fNOePVaoIXeO6aJ>9$G/lX"si)%nV$1EoE/Q/nNC:V(4=1"eKYFBqPg5j4bIf/)s9`+,(;IHE,;O#lFYngn,+1F61Hr3)mBOBO8"^k<m9EuA".Oc"pOdK7*hQuLK<UH%IuDY5REmGnkY1(+p\\7X!;_+%9Si(s3N;tn*dW;'qLl6D\ir_NL6%!jWBI]1PHF7/=&7NVN]A>R_>?[#qPHb\6WE?_rmE1$J*iYg%C7dE`VH-9P3OSV-n'ms4WgS?"X"F0!EGk^PpO3(&GT'\Y?V79i=ZI=8)TEO/^:>VrhQr3c=RiY>(+B<52W(_0a^P.\a4%VWGa"0N%l(Xct0A_3X$J@oFgZ=o+jFr$&4J^k^qou$WrhuIbn++S=5CWXMT/EN=rr2lRIkt;Yr>B<EDuO',l+d8CV]Y%ks689VIe`NlIf@5D%DuSnhX)J"5j25fLr;KJ&:S0h"rp%+&4;^clI*a5fo]>B\5:Z$eQXBdg(I-U1n%M6eg)hDcrQkN8j+m*d_Zj5XrUu#M^]4)\48S=L%A8ZhmnFZ)Yhu2fuGMdf>aiAW(OUopV!_*"d4l5]JH/S:t5:`UlDmBSVDgM?Tqu?'?10`Xc_u0"RkM@k!Ier^0+2@dFc[Yff_q>Dm%55.##BE*^Q4b*>!gQ1ZGq3+$m#$Lreoq0"po_!F3M]-f$hgG7epKrFFo^TD?q<n-@YCF6pG9?kSc*sl<ZjHC'k8up;qW?,95s")M%cX/j5f.Xo;o1sLgAbs<rT>-gV7/$4=j#=/k7b[CMDu]IkT0LJ;^]2ch[/B=;+QH7)IfAom#D%5g?pBj(-U54T8IG&abO6fggp=_%%rpid.Gl#'_N;r.s0>I@0o$h#0r67HTrqtmDa0-Q`BV:.UM`5:aL[?6J4FQnb^VAIYr1@mKlXP4aO6JACc9@i?qseQ/#(.n1o[0O&%=@SlCFW=fsmJ!>R5>AsTHLIuf?@)%=`ub*.Su;48Zb8N0a#7+>E3PUn>FMiTZtVGLp[qh*e>N-kC0mt6c2TXk+oSL6X=rgQFggaV%hr3j@F]uudQYWV+LA>a<cfKS#="a+%;gBnrD_#Z_.OCE\P)Njcp94H7s-<2*Dsi$-s5gS:EtmTlMr-aI.n_ZEk^*o?:X>*J@k)82%lM0I$5H!]>*1jY6cgTc+J+rs5rosCAqshD8D\ErKI=@gFa7nQk2C8(oGOOBohEAQ!HoKpT2cGOaGNE+ZQeo\qj@hAfo)A4JEk+;<%VH%[$'A7M;.)W'qKZc1gT&)\+=oS'co_:87qGVa@:ZX#iV5O)&VX=<Vr:p9]h;dVel1#@WJ]IJ_lZq%Pl?i3<msi#Z]jpf&VsX$M%NP/u<8`"$S]81Znmip[Q#u;`d)p%g!Nfos!PmAF\`kV'8s1P[EqS2i549,';'^1c;\+RZ42WI1j`:kiSc?adBgP-KYIIkGHJ"jp2%GOg,5o37(BA!="gZ9@:=2U;iDn)YqO8RM?N#kI4t'ITNtB:ds?o-8VZCT=%T,1=]BJiA2NpE0Fc<J1p40h:do^]*J)hu)tUSJM!u%^W\qAn+k0,S=k@[a:EdpnDF8dp@&f#rkk44[bgTX35sXo9?P0<KX<Ligf)pX?Z*[<mAQihfUb;or6`hGSmTgI5MgLGk!Q9*9>fLd%'\FdJm?QXIW]2gh)<]a.;Eg&X\p/Ml#PfLVKd.?T`4'SV_>6p5n'Mm*o;L6br*qRt[$LK[D:@Ro$7md+#Aol`:+O)=F"][]XFkBD%"ZF$Cg4N+1ki7l!#6W5Q)&/J7I/h/t=7^%^S0j5!T3JT2qOBA!hq5d#lcJ$+6dF9!An);AYte[F`IKfLS(1PS>ogj\$t$=G+$m6A%C!4bOFnVKD:il+9D@k*YR#e[l\8<C5?\pd=RpAT14E,Qq?W_@nYVpi:S-GFqE41Q[>$J)"!c*\E5n/Ykgl11N6Yf.#L1)+V>f&K/%Y$>?^F,i08N:Sb.*3!lc)j*-P,>ZMj2/G8`UU%f'LnaGuLWTYCa))e0gk2_9Zh5ti9D7`b@PM6o@oHd(=M<AY,uk&.4F:P8KnGcX%^r,C:LnXZ'VQK2g^D_?tc$$qahSD8;Q'=.^Tt<[mgT[[MQm:@?ei:.UnWL&*KX*Z&;kL=KhMU>:Dt^Ijq1SjIqID1UL=CU1H7/NA%;K]ABmG+8#jO9h(95h90.83(f#e!usi$Ul9/"'n7)NTFsenkie<uY8DI6=%Zp@?hV+\d8:E1-TdZR\ES:(Sm/N"L8!Nd,I3m%^e^%W=3erm#@V_#G?Z1WM_?CL7'TRK1MES3PWh$qe/l:E:?RLg]hVEi;3W#n^YG.OV^Y6neS>9LQrG<ICWt\ju+$5UWXnGU<ZLQpVmu.%ef'WYCH&Zie\RV^hh4Io&F>Ts2X<8_eMNd*1n[P)FC%@J#>_W!75103Jk%M$S<?UL:L'/n^_R!&>qm>nr+CUk9EqXX[+T4pnj0JL%iH,&XZ5WWC@@fM6S2dX])3=N7SmX0IF?Te7:.1.7`!KZg0S[h1o*!BV`@X,N=DPP!C1HRs)[8F]Q:fZN73Q5<-#@WpbMGPYAK+"G%#$t<)Xo"@8aZJ]j0leb5XkT6@@b@o^\X!\9UF09$0j0j<49oU4U,J*(aQN76PJnfW5X=Q![V>%F(:%q?iIX4M%,c)7Y;WdDZ-2;<%JU+tq'J_FXBr&=$E':.]r.hbPR_ps"%:M+CC8Y[q."*IoAE/nQ8MKZtJMC$1CfQ2<JWpq,oo6mhldRn##rYe"c=3irBP`9!G5\3i%k]Iue8h)eX<M-Qo[B+GTK1pctZLMa]6_iEb._-mFEXf;pS)At=A/!0q^@,OWkK/!m,"@-g:jLbQh8K@hZ"$0bm=4St`m)<5!TmKf%0\/ARSn,W73euE%3ri'9g_\TMf%0WTHs(1:J-,mTK%L,dQkCPhdKr`_^^rOUb!:k+o2nf_X:9ff.32?Hh0+\F!W].J9YjhpC^lDS%"L8RP9be:%mr`d=ZuT*_g9p*V\#oO6(IG@WRA)bZ@f]Li_bMs.9iTrq$`S5GGN:4h-W4.pj#<BAS(rfJW^27m!l_5<`q<)oO>`XZ%V@sBY<JTQ!pAGu_PiYi)1PA3Gb5g?r+<"`DPQtQNM2q.*lVLQO;ngVhAE;$U%JKMo*7nH&6t)Q-KK-3Xr:W55jiqr"Ad#dAC9i!8%S=I1Vq]ail?YADL):k6r#2->d"IjgIAdj2d=.A0CRA,["QPt(<>7`(6-8g6,q5dZ\o#!;C$!ccLg8V+D<3ekk"jsbT-)1<hJJiO%%ITX`2J^ZHd[$VpLCUr-&0UkBYF]/g_a^q#Fk18++_eHUc!^e]"lnEdo!set[Ak,dI:!k#n[8##!-ErKChWm.gi3dtAhlSEoD,e%_%E!mA:RCf@kolO$VX&T=7M_NqgBhF9"2PkiDlkBYT;Yc^KU.MR`jkn-sm*(5q7`bdf=M:hog'Qh(_m]!iD(9GY-WM?;:ioHL\u@<:%2cZl73Db^'i6<"U@IeWBR;T3(CJG*l[F\CE9guO`JkI4g,a&3F)]lh?6?BjTe^S%5P<Z;/9hgR-e`suQeBJ@TJS@*_ia_P?3o"fu%`YbcRDO*kIQC/FK"]Fk#MJIX9/Td*<>8UQj0\9&7B$ceu_/n`)A[-+5G#PrJp5jSE0UG7k[k/lRkn/&B)\plfH=o%n&nP-W0T",S%'07c56:$qL<sr2H_kah\YQiXFoXTt.%6+gG7&eqNBs?3fEHTghgRd:uAMtKH1W5ZD_d*qr8>Llt*UK*3<;0GCZ_VMkWPK&_hQ-5O%(Y+@BGLm#[3tih9:9bf[fXBmLi`<4"E>]KndnJLIWZF61@uD&TE/WuPH\r?'W]62Xm!Mr)pS%)C88SLl\oodDhR6s5>PgmtZAiJ3%A`^]Ei:FW/apoBVKP_YE@.h&]_Z1L'Zbf$M/OX-b0IV9WXTWNm&oH!o7l?aP%?lZ1695OTDS:pk6%Ln5+!^I5\G6=Q,NFMFpgQo\%/7o1@U;40mU1UBhaNjKG#\f,5hfCZR(JWCHg)\,u"<u$C"AcXXJnl`R-W<M2Ef._k%?sesp:=gZEfS:'Iab]emH_,fliAnaB@7RZ%,!t&H#$(#SZt&cD<n:.&TGhi4Z<)ZVX@;7G-<1]gT.PdaI$n4u^Ud(rRcnW2SCu?S[\W$ehO8.\L_7Ll"a<j]k1U$dQk='SV)t(C%C[+n1`0e*/`F2Q^Q)LpS(LMa_oNnU$qKgE6DSYW)?kVfYb,%36<Va(7o2.dgEG(Li;?Kr\.;CNkI:l0qgaAS<;lf=X^g'_oZNY\/%<2s$(0.uG*HL^O&9I">rabLgi9-K[Rb!X1AdOe\r-Q1\0(Ps*KJF5''_DiJ7&XcoN`""FgjKtmYl!,FuA%#)77]LR`>mDJnC,l_u%<jiI7ImRg;^23(=hWsh?f!\bO;!@Z(<9)*nN$a4G^//<_>XjORQh*sg77Q.u2PTG.mj#Ai,cgI=5l-Zk6(6Lg+A1i=(\T?m+2N@n%=h0p.SQ[1B@SK!?ZXlanWm_6Ph>sHYQ5qIH(uf8qeue`SH?UWIGFE]Rdj3l\H<&+*c?WfWWerff/Ml\?_WDk,%nWV&3Y;6]_58AN%?nGn:V&H7c(-p!!Z$?RcCaOe?L;.?LClSjIe;X9*n'keTqL%rq$nsak_knX+3O*#hE1\V@48u'4jX-bObSJs&ltEcND9b,n6(jN=%SR]*u?h>ncK[pV[=`8D2D(3ph>gA@A>2'04^K8PCq-<-cC$$8$5W5^PLZ_@?m_O_Gj'Pu9<-;Cemu9G81gm&XqWk,Q!T,M/`;Crk%G>a[T<B[tpT46l5pPnIJLeIHb=A`&89W<QI%(sf#d&&p-?e%YK'N=5b&^L>ai2)Go-2-01Wk%jN0P&Ud`.,/OY',l6m@8,cbcat8%Z%-.&i-"Zg<=Ka=?l=&@Ch48,4niVI?_4eC0AO-6$$<;BXUF<(hS]_:bAi>l?jA-C(:U;9_Z[tI+'g$WJ;9U7'W;faRmM2L.V=GF%b:O"BNnJH_POiMr,n.7uoOX4`D3=aSmc=`h`br@09u[KO^[NL[@u>9dim>;"U72-[h2V8YoFuhS&Zcf/escnsS?F,Y45,]5'tBKY%/Q&boC$-u^l,A*e+MXd[4CIMr^3"f4`-r/$YcKH(>IHdlQRr&\(H@!I`M@&Mds>E[e%Br>\CQC3]R^&/=0\[_caO`.3&?$e,i/mJ%EtRTuC"k`)HiPZ>];Z/IK/L!k,2T5<PiB=Bm.oEU`V81O]aT>B):h6SH`i=W+&;^@(QPO-ij=;2U-nD^D,def0KFKMHo`*`nkHFV%7/f65V7E*`U[:CR+r@A6N@f>pbRl\7VMnW(SQ[Z+p87:R?l:"kG>Ic40-&H6)N0Fu=7ZFa0XfU=m%E_S:mJ_(C7g>Vf1.N<+eRj*%6jN-*N9XW8jtAP#diQF4TcL3gYq2ktJ:8@nZ:#Sp^g(<9ee!AT>@;Gb"$7/QD`iOndXEe1>+)Q4*gCd6@mZZs,>B>H:5@T==lPbJ%ddm`!CV'J/p6l99h9cQP(8%ob+Y++!Jk@&(D!W9j1cf[m!G%]E.gJooXh:a*L)nX#1"Erh#B*h*]Hrf:@iZWcDS[\sRqH'++M0G1%J2jg?%hkE4e*3.J&bTT`_gp[866U>$NLAqeW1J!j2>5/Z0t/I@NQeYpi2tH75KLjF\k5XR<36N+)T,?45N`/Brf(cB-CITt8lgdI%!a-<P2q>@:e];^ce*F14$!uSLX`FV<lB)LU;nP+Np$o=dMTjs4@BEGV@Us<WPM:7@34>i"\ubZY`oMDJbkD-rEaR6e6T_SF>!tdc%:a^h`ii@X2bG+4JD%&)G="!_3bBYJ9GP]K076p<Oml^fK$+e.G9!`[sSJ6TsHK.NQG,sRA@##4h;O"@ENc3dX@KTTC\`=Xt+MDg)%G`nICoe-O38jf?n40XVF#r^Gm>/%KZ_o(a)3"?eGbm#a6WoL=c,%/Nr;7883'`tgVap+B)PO0TU(P"dcB<ij3co1_a1(Tdp5`#\D%9HT$2kf^/$3!,%VNG9dDJ5c)N^8UW$H)I?lq4p:7iO7p/mD'8XIg[r@fYPkU*U2MuAiABM#)V%<%lMm*?fCE]d'VG>GPZGb%:G+L%17fHiYUD3F#n!;K@rg=u_3Xt"oQNLEE*cc^D>%*phOqknhhLF:h$ld>@"Pl3pl=cgFKg_!6%RHAX$]BR;Y(BQ7@<!ahO;-ZXDhFn%Bn^8h<+7P'b:isAM-::ac0[X&,W-P"&IR;uZ`059LRf+7>hB%ZU`s5,!3T^WA0.:mX'=XRF>J$Sm%#Ge"\9fq`cDZ33eN<LL%>9Y%_4]kk?<.'F);a2#_@D=4Fp^a$G4W#@#QR;KeX"s9^:KAICn!?%Y4aiS]%$gd_'RK*ZiaiH0QJgmVJr=b2o@E(WhHl"19\%7FP<]'%mLfgb)N=`8VFn]l26f9oK"6t%.@!&<eH]n!L@MO,HNj".!D88cQ^lkV9]+cR;7^`KFQDj*U7l"l7A\gPQs_B[+HVRMkaoj91k?@E%.ZL7V@^l/.E*p2Lm3_)5(!K7nej7M$,?$e$i"_h:SaWSJqtRH]5AG.4CGr=(^f+[[BaN_I\H4RM/S,1&V4ibK6p$4-T-`SC0*\9q%a,SanD8.PT-)H9>8tjY6",!TVLrn7!.mm,U%0EjC[=b,1W4$P$0q=B!i86l)[bsi+aI9`<CYL]^V@uTg2sFl<L#O_bY9#quR4OX#%@RTMl_@iqYE^0$BSHaYBS%4QP4$bFXm`,sAb=9['F9`07f^$`M%b:td2*h7RCtp;3!BW;;Co0&3?;*0rbhA;i>Iu'H:u,>57fZ9F%@bdX.c#n-OdM4rGdU"/":)PuG3m3a"$0&P.=OAaQgtn8/"YURlL"%tRL29,8+!/dfqn?&M>$qRS"]O6f+%-Kc0efBW3ubE&O`n,D%BGn:(Mat-KFO#ZKYldHLTO2rI9^I<``bi5k90a(mH80BlQH@h47IVk&*cdt6dN]QfaXX%H"[</U]qOe7&T`uUBS.DoLi+80@W3Z3%\b6$3NF$-J09i/YT%DCZRTgmR>HZV[W8)$s'QpMBG(3OFo1H5U%5QtUZ9!\/0:CP--*&Y%168>(YEgN$?"tHO?pd#[[9&"/k<,I!%BoN]798imjL%IKoG[bp_?Hb%%.=9h1\QC2":RLDhW7G9j]@?RF&$A?>Xr/m#1-```;PNl+e!@$(^=PZ0?gHHFKd?GPDQ/to..!In%3*n[`A598g.kgIOJJ[PX,C_`@j2G%4I+.a/_jUS[5/ZB6@(-V5W%*79WdoiL-D@,#V`'U#h9LnHD?"A/AqrE(9B:e'ce$/cbm+DI%R82AGOmfPZHXBnfeg.,Q]^G([LE.B#EnZ1]HDqOMlD<qH=e>R8i$F[Ij/+eAiQ30boW7'i6S"r=PO#P$c%iC?,eNGZ(ZN-p2_;dW%)DQtS)3K!#[;cZbrFY`>?>R>L>aX0u<3cT`b9s,p4octb,cql@'Madf%O2YTP()*[*\sFP4fgjq'utX/Ca=+D.0:>*o,d!1&:bCW%n3^6"/d#K$jT`6Ac/&hE,+=CgX5GG]hY5&ubLDC32Mo`7,TI(4;hSf<Y%i1KSoBVdB<G![an@MX]fe<>.p!*?J_a4go36s,!M)!+%aUOF&cu\`QK"3q96j#?V^-$\KkEW6?/[\6?*ZPYMqhm#4^um!lGP1l:T@pR+ZPn^KI%nJY5O4FC!;CcjC=hW!2bKi>QsiUu)H[Gu%8],X>!bs7K['T+Q=L8/lOCMIVCAf"V;KUEW],a/jb#u234.(t@IsMI;TSHR,WZAT,RU_oaN;ubZb.taU=qaFBBkcT-m8Ah*P9>8B%leJAcn-#&GacKMj86=AIZ\18f73ONW/bn?g^!JY&#7[0g4ZQ^,=PiMt8Me+H?I@/r'#Q&2M)^fe`"&O)$H/U34<Ys&I>qi=VnU%K%1]A`#GtM+X>:f0D'8@']3-UlHRm0+d^t)-4e_O*@@^^)V8X-*[l-n12X'$(@<5+T&&!j:?6H<!r1K/%7OtkGc)<gK[H$@It@]K\Q%h!C>]-loB_#on<`%Q5NX'$tu_]BoH'cUW1J-;As9kMsik5k.E[)g7gD@9Yg1];-R+<G2WdS.='A/JKSJi^2+;RfM,>NbW85drK=I%F4S6%!\D(<B!%l-VL?3Omm10L9hT5FfZPa-T=Y[d[u+^(E!iS.10+r4id++Han-sBU'+VgMVHdG'13-\E+X*gmmbnKHE-\nV@?C@%bg]a"--^<t`Oni6o!BKhkmQN;)SipgEY<%@i*[>[MVH+Uf;qqMO7:I+:LR=*'_b`pSiQ9RRb^"r:nl48m@:AGP76@n]$Xf7D]8&L%2,fE+YXN_'BANb$5G9\*4Zf#jUe!F'k6*Ca:T&jGRHrhPUTonCc=D4Z0A\?\,s'j>h)uD[0EDqVA^X7c4$rG#\$V,=_QTOE5n`))%ae9`>\iT$bmKe]56G(^%A;2%cqhDK-DWs*""J.C[E,"aZ[QjgNH?<5SNAa(KO_-)D&'3W!o5AZf<e8IXntHEB]IR*S(rZ\=7aLMR%1huNkR,$`I.4!dZ;30%:#ALZ:/6W4[aD)0m]F)lN$.kl(ll:*sq"/E)@pnWh<mjrs!e&s&XsG(D>"8SC>7>Si1I`tJldWqYDHGOV%'>XiWfnEF\&>3[ng0$96qL5S1Y(>QG5m*U7CBCj*o5D%@K9d>t>lIrX4\+Bbp&HXTirM&4lI&uhEt3IB"@@0@a3f3/37br0-AQ#/%3&B\+M:7d7?=js1j=/rpl4.(LqF!=L<3CIP(JU72a7?n(q<4B<d['`I<3kHK@$eR^NBDu:-cMc6\d;WUMrZF'K"$kjbuJbK[QItj%mj/[Tb#Mu(!0fK.%7^h%9hKd@-Jk"C190-2LmAu$<uu2<lN1Uc8IquI:%?L[+BCIQ2Ab1XAL1L[bekZe[V)8VRL^HDR4/aKLToZ.%0;_O#k%C!TC&]$1Vg)s&+uFTm8_L?]RKT[7N!/0JBW3i.pm[D$Qo^J!ajdCs<N>e/b</ijOdgUZ$22uX5A37E0g,P`(fcUAYlji6%P,9KS:epZHBSYj0<=_M9UL[9Cm!$uGTk+Q=E1KTJ,r?X9#tI'&/k2f*J'Cs[N1;>X(H-D&:#OgYma5`Jp4qg$HEe);Qij>-nk9'X%NN#48^^DhrT4Qal>TfSUmBrYI6snKR21f^_<ur!un1@R)0N&nUo^16ob-G`-X!qtuaX;&ld+r/J.*U_?ioUGT$2a!4/oooC.,?mh%U+`62[nb,>1ZR2/A.GHHke#h<fR0k,VNV+5hddMB">^W-L2@n?T"5#XQH?$509<$YD!I'A^2AqjVIpu@@8:>YV*j;'.]8g5:Jie=%cd`n+ld^9`SM-*;GlE%^C\o)`r!.:PEV3%F][GmV]G?U.+K.F9rGWL<^[6W+H24n;Rh\%MY+>DD9+*Kr#='A>gEgK4pD[TRM*"HL%(S,PUL!H%gFjc,k]7I.@h#mlnV"5Api3kniU%)T"As?k-W0dq#qOFppAG$!>4#`NCVuX=B3jjVL!R-uS-pTkF!?_nL'\*XG2Ls&c%Q,COem@I`DPnMns[CUgNG?RXF\R8PNXie<A.]jpaDkmV#\![?BWr$lee3F8o[%ki=Xi]1tW-d[G^lr_qJq_hWgh-doH>8e0(WGm_%XBpH93]5(F2Y]khm!8neVESVDh,)EB1M^Soh22jn*(&mon:!<?G9kWa:u%m&m[LT="FuHSAL1aOG>f/G.D`<SlF&e2@b$eF>TUZF%d7#K;_am2)Q/"JRcqk3m*hK$geY(F:2VafiP!no=N*4d^@0-3qQQHEc>rp`oM1#ALBWKJnM*aQY;-#M7$[/A$&>@q$/QO>QPpE_Y%?,TP!ia$=uF(oj[Auqk\c62sa'&k2ABObZ9dOtf:SoJaG(pN*,!j%WH/o;mH0SrV,_>@g9?;O:ElpdC+?fe3K(2?,>M)l,PoQ;1_%c915=eEQ39P3V-slN+N>b$7:-Ic?k8]i&afh2t!U%s-dQb`r?X('eSoAG4c0HG@inoVu/Bc9P^tl!KTp`IY-YbZpaN%YLKbKUQRs%\\k]_M^(cL'M__VNLl)tRJ[R<D-qBm7p5q"BOh88SBo-Ecc>AN!8L&QI5fc_3rb'fs0t0&6ipp.WMWt[Jf<u4O)RP6^`I*ehs4\?%LoK]^mpMEV&:]E)lBQt@r9%7-WJHZh1=S93PYAH;-Eqb^B.(M<Pe>LdVLYED5D\1@jb$G4<`^^8D[(<%>k/:DP\G+0O4i*lCQeIX%Zrr]bd==F<<QZb_g[&l%>-eE;Fr[m6b6B*(7%)X@n&qc"Ges_o\eW-kB];0g%5O.$)@/fhK.njh[@+kYU)uhM9(OC$NV-Iq$C$H6%8]@@u6/sX^#:E&$3l-MG^)FKck/N=;mY.dfCR/*_VPEWHij@pI7#;$S>*WCCW3(\/(4J)G`7n/m!Z54S&'!G%X\-UMj%KM*ge!]V%QA<qWfp)BrB*O9+&^-DcnDaM&B+Y;\r3%O72dg(;<(XP.V,/SGP&2rg:tW@%5f:=<-t,s`^NRsdl+F7[*Ip9.SQR>5\)kTR]:`hA%k<-r5Z9T"Y5eU'V\BF_NE4pL.=t=JOk+-Q2i9#?bfq'U#@GIn3K@Mn4AS,tVk2Y1(h@GK\F\cMuND=F2^3s/+8.a1ZWL-\==r-6#%/=puC>7O.jfO9!O_iCPimXT:3Wt^?$I8B]uV*$KAms`r2Agk8pW[84-VsHH=Gk`rCPkj7*AT.[?kjpc]i4C>@:h=eW_1?i(QS5GX%+<:UI%FjISV,X9Wf4s3U4BpA]TE%GW2D%NM$=$34T=kJseQW@k??bpOB&com:pGqp9$0pNl(FTD0/J)S[u>1!cu,DW";sG$WSLH0%DAJ+^(?.nWebjn[mG]djoHkn@blatAikVNO!NYp8?#c9rkHX\P`4>eSR-Mb!aEN6&dj\1GM/7rbBp=f]`uR-u.=O]Q$MW3`]%tF>%D'Mgnb9n$K2t`H^>':4WLLJ"grPpkWiGX28n5'(,r[*o9hgbXjW_W96.\E98b%HKba$63Jd%3kYBbg"`,s[7Fqt1kjUDW^*2YI0u%X+u"%0<CZq6i".>/>"a]c)h5H)aF8DRlJG&TKK*,Il3"j=^B!7rMt4+NCb:+7(G'P0?q.mg^s/:<:C^_I=2$H)<FFGQ:gYT+IsYr%YcZ?N!T=jL(h-V*Z9)>DN'iS>Gd*'OAY9U6iZM6p)caJ:fn#sbHn_UK/&LXMa4cObekDo<MH`U)lFDa,:r!d&4hi_BEDB1YSR76f%fSU<W#A4qm*:[eK8<rsX+USTiTZFJ$0Hm<q%&,:k<Ld1Br-]gsi?Wqq0Yt<(he!@K#n6*$!7:9dU6h5n%PMb'^r3`PDrPZVX^h\=%5XDGm@Ccl+*GFTQgf'lRWM-#'rT($ZE_SuA"#+@cYU)pBe(jfDR8$O#Q!XLY09Yn4M?#2_NG5W$*n6nV.ZSri&`7[t>Lh".;$'r/%+`)gF3clNn_cD_6L_4<_J.FJm%@k+KL5T)F)cpdmi"D]Q,bjn+%BG>o)Z^QZI'c&FS#,3\DO-S%^00/1`n/YU#%bmHG/^tsf3IB[%$=<1J5M\__pC8jq([MKa&d[Fp,WMsG>q;,033H;eQ$BpL0O<8`G,Mn=X"a@(0e&K)L=tCml>C=9Q`do;CW.-embC:)V/ls)7,&7]%9+'ch*ot5<_Zj-$(uPZ`0*?[-]gTfA[Ym%OPBj0[/IX@Q9,`[?V2RiJ`QtUOaDdjM\DAKj3?)4*!?sNI%DgRHBrmkE\nCHtYLC10%\nd?gr4)8;#H-'o8r%V(p6<;;2Sp=An)F4\AIaWC>hVX<Vi9Z+`LO0-;hi#"PI./:lZ>hiJ`=;5^cUEnp\*#!N]Z'fB05p2cQDu#%/_^OLPIj[N>4<fiRf-f'gT"Rfaq6HS[,eYST*>?([_]"_g8PW@<G@SIWIlMdL,='jTe0C$kcA1$mDCQVGiT&f[':Igi\7uE4Kc24%qbcO#LkSfHWIlbeL,sLJl]`Lj*7ehWF@pRdK=s4KT>ruWr,lQK("Re'I.#QImWmlfNTc&.LhJaH*Pi3@aLW$#E=PGgG#TGW=CdWm%=:Y5$C<"Zg4t%IXY?irWXTUbN,.FhSS]Wj8J>$Q;O9g(MD-(GO>][U9+.&L%d0!InV:350;[s1;G6q20Yg/M;&XOWN38&/Y[/e7d%\h!Z<qtP>?f02B.%X7]h.F1$9:.J'&]<F@2S5R?E$/M;`;p%5!iA22)6hfi^*7jV&AbUTLPXD&5dPJUa0)G:+\JFmrLj`_+jR*Xi%^G?X\^Y2-,L:UTUWj1I9]p[So`stNR'jbdG^8.YC[@2GsbIt8!\0,(T.C?'ucN@>,1fJ\`%dZ8g/X7@/W$isqC`>KhC:Ak+Il;2Z%PuDJ-Q4+b?L=n*Ni!Xm6YFcA2[p8++[*;=5,9o;5H)L$!P`[#TmZA;I##7bMP_e`=gaR67P49Csn"KW#@1I't>hLE5:)WmGk<G(@%pMA>K-[ojCkRYsh31-`='uBM7=*l1&_S4bp2M9a)`t#7qkD><.:M/gTZGj;nk)O1i&iQoOmolkR\2R^9Fu&L"M@\cJ9fbAT/JMAl%g'<sM?DH(XKuE&p$TiV00h&hq/uZNh>uUWIA[\,a2)TV1%%Roe"phjfNNk9;pM>JZ<;&1SfKQJ4:W[=/,(_sXpJ#3?HBH!7[R5PW%_#d8;k?a9NU!Xmn$O6j#1]gT)6(Cq2#'Zjt:=sjLc3<lC7CKD!M[AOM6B+*cUUCRYjJmYL13=b/3F9^6:3XPm(@P]pm79,>>OhYA%VQCq&&898H]%<u%qOepF"A+M:d:,K'ER"K_X@D+l\fnAf6?0\J[qW.kUoXI%;m,kAOV[W_Y.`Zbf\hn&d6$j.oDWoGaJ1ENojp:?%TEd)u.H_aQ>KYU^pF7SMMjJiWeoI`R'#nkK^_ptNIpHk/(V.NU@Q:9el(![&1;$Q:G\!SY=AJ/`:^N6'81m4Z$43XLd1(PF"J2R9%l<;lMFr@pi"<PcOV5Z6rhEuN;Sj=&nn-'%e!`'u\+[+PQbT--[Ddo5KSoCUfHUgJi3ISLAK9i1iTq"q'\Ts7(r>(A1"qO;$kbjdV%86p.Ob^S@``itfZBR1-,RGbWbK.VD%1V:7.Cb(U*-6c`X<c6]B]22M\3tQfDo.kM*C$"DtZ&;4ceT>_#$i/r(._Y6O>Bs%<\Vbp*%cs"7@CI`5N`RQBn<r?gTCd%3lIs`',ffU!g(X2,MaQP,CZP"7%@%/Z,NqH'7(!"FA75LIq&9u*6G&;4If2c[$T81t2cZ9RU\.)Ll%FIhC`Hj.gHl>01UbC?=F'i6t$GFf".mfZK`"0Q:!fs?4a2._HA;f.:Dh_?C$N"dmb5:*IR1-AJ$*E@MH=%a3P]iJigolRtE!\RsP%6PYkiNu\'.(@KFef.HBt/&J[cq(!@9)u%pTgo]\$`#r8gQ)d'T%V&ebo8P::[@G)(m_mKfCLS!,cbl9'%bSB8S@P3SlX@!N6r.fH%#L@$U;S8IFDXFHNB%BM&.1Z:B8E$YqVLQP6m2"LK0I/:d3NnR/a3&1/`>WhQ>iq6sb0E5*4$7S&.U:$t:W:Ze&%fmM:)W(T-@3[N%:Kd:ON?>_.,-=cn4sTfcNH$W&Df,a#<a\BiNm+*Po=KuN#f2n053AD`MsJk$/Xg^N`%`+5gZ<e3OIWOu\KP-#s!EZ"C?GA8`^r<K%G?f[2\&U&0<3l,H\o;%)FFLcE(>p*DB?nKPB'f8,)Z^2N^cg1D//sc-4Z:7fWnIYH29\VOFkTnB^fT>g"t/bX^C<sb@4KD`kG6J/%5KciRmklV1m6Y7FLJb,=Tr:_ZKm,m;59]Y0WAH,fj>QDf1dU;R0$f(W:C6`2YkR:&SGl;,lB(XZSfW!:8p&D@e[\t*o/`6s?!^Qo%*>b(.oqpa>dL-G&NAjYL1agn\dnukbTXnoP[g*[f[pRkWJEID)e,X%!ou]t%gfXA8h06k=.aUZ\]ZV4.^/uo#Lp+BfS'&6aC+os+%>C(JJ[699$$,#(^2I4=(\IY/K_0WcMEh%<bqe!\4MseJ&DXscM_`c&a.2#GHIC:iM28%26fI%]1An7IpDOm\NSS*VHjc5lW/R:$s%0#-X%'C(rBFh>#-P!,Y%F#l@U\Nd_ejld+4*4c*KS@BeB:?Bg$UcM,UgKhCgk0o<=aqE"1a!mcDAP$OHiU4uOgLJ;&Ge98g.=Na!%cNWWk&H7a5,;0!\o8$6X9/UA(o%(J>]S#R6L5R+qHeCQ+#$Xn&)tSomh]a_NB\:;PoH\.jNKoW=Coo`imdACf9M(9gje7t.0#gVC%(?UunH%`unV4Hl=:][XiGKDt?%hW]Wn*mlZ![s2Vj'QOa!j)j8PIK3uY1lN[<&rF=S6&T.:-FS^BKE;YG1.WX]51a!]3^nEQ&WDk%=3^nfPS*7KYd0qPcCdC2r/QLA]3Mu'BB'c2jg*p&Eo:0BgASfPh>B]'2N<6B*dB*hX3B,<&fb<N('pqb[;JD*FpIU)mZD6S1LEg?%[\M9lT<eU9i*^m+TVduE&rAor?=V,Gp:Is_e#d^r=Z[#.9>[lui$qrM#N!Y3[5.XOAR?;e2HF,T(?'JF[]:kD"@?](U:MfU6V(u5%cFPXE6!g(Qm_WL[qkp5bl*Us[oX?Q5*d'<?=LC+4fX-GI(o*\eOlRhC24;(25aqRn>("qFiHD%h/KA)ngKe7Cj*\JX6->rHEOUn[%8b%V?]1UP73f)K'8ii`X,CNnTS78"!HX*-5FZc)0^%n70jq`eDe?4J>F2C/r,%oZpS=_cX>U>#g_Y]_oae2'?YlKD_`""Q03uTGb%>prPWl^/e@-h,JUnQJn/3>`?seMDoB^1/fhUeUu00Y;+iZaYpPOr)[:F/Y,;I"U-ApM5EJO`3S<I?XE8nVGta9mXCA%pT))jqQu3%DsjdSkt7O@inf?<*_6"pf9,i0379smRW`JYg\TQ?+md"uX^(uV^eCD$HkKglQ$TO=0[a.;cjhPFBKZK/k+E8;J>`f$CnfV=6.\*K%-iE>H],\L)Ks#7%*A-aBE1$*BY'ASCjGG>>l#br+2X0>J.E8lA:U#2W%OZ>-2rA]#g`l8([JN)&oA+o9-dHtZH/s"MDF1DhP^52M%dn5)KC1`uG,gC.&[ho/l2Cm@Yhn2/<DZ'AW\LU#;'X=0Q-P6X38c_MGU1RP,Oi;\YK>$('8-c/E4eM2C!d/bDl+h3"E1GTR&j+uG%B,g;!grnMYm,g=$6VBQsDk5L1i3!g,/eh\/A]/b"[C0&B:r2::`=WE]o!8Pu?rQ"6BtLgS+9Gf9iJ()!YVX_2BON>cW%juk!1US^%Eq*%=Rl^b5e%OP]OucG,lT)h<R?P+^E<WPnZCBNj/n"Fa:KKV%k0!O*LRiK'mH)V7h7OS4?2d\_+^Nn8hVE/67;p,Oo6[<9Yma&1%LZN=(Ti@!QH#AXJo6gN%Qi!a>#MN[6g.eKH9IOQ(2$_(FQ<asL1:+,2"lKjH8SBbhg9S;,nB,#!jEl[3mqdogrGsdN4"H(9B3AtQ%mINXi4'`,1(Q_!Z]\X.-$f+B?Kjo&E-!m%<]O`VPoh2>?&1i"Vb\)KS0Kiu"i@l%l7/C-uQ<,1F>1#K1oic>L3*`Gk7EQeuWh1_\%bd?6)-1&kS*Vu(3?j5GkS-WR\h"hf[;:4`QZ$50E[BBCC%:@_fTOdc^]68$aFO]aLMJq,4-aLj3ESukP>ATj=osb"5/dH;-fB)4A%3qZ@@Guq/8-LB&4TD344rgfh=7oo!-mB^$Q;`Zn$bT66)>fjNKX_<i^i3E/;9m(=@Z9SFg3Yr!938i;Ohe30l<,6ZOD.1CC;[\_4%'`t_?mInZfS:RD'X=V+/YWh7p/LD\.WR,]BXpC=FpQY(#H+s^iGe%G^2gH8=OIKZr/*)K%D8k!+],_[i+a`aRX4]-=4i./H[JYQS%=7`\>a0]+d&+j)>V?u<`&9jEIop/PpOt/MnL.^$=>6.btCDLL'2lu1T[*I)]3I(dlNHK#Xo"oQ5Z-k:_i)W'_+*eSf7\-oT4[mMN%C][rP4a#Z)X:VfZ(%V1#;%T\V=O'P;4-KgqD!2q\3ot5Qpu!UI4QW^N:4-U!f1O&FN6g_dHtSu9U!q80[P:ppoOj*8P;TkZ>fVO]%-%I5F-k.1b0/qlf9V2^b42V"k;>@\4,j7;W\lY'XJXN+9h%LQDQ^sX$Sg0G.4RZl@En_UYmb&Aj`skd(`u0puj%&9iSQ?Q>8foON%pW1Vah=<"6"B*EB,,f"<,9]=J'cmr0MY)For1'>l/lmd7'nFFNct.DDFg1Er`aF,jE^F&ChahnVA0F[XD,I.=h$:Iu-gotXjj]/t%4DNOc.s0j/qHBq7=7PBY3%D7loI^/Uh9[Em.d#PK@/MCbOb_j4=6CE63t9:P_fm0P]3[=oB?(0>-&&ZsgmddnC@7ke(]caW'qWAZ%n+e11\[;RL4i]Fbp7hc-$WDYZUh)9-8K#[JS8'-OLE@6G#Sh*2p(Nf,"8oejZ>H\D#9[WTMHjZabL1U2j(bFr=n4nbQQ&q';[u&M%Q<[^X_3J*-Jr%[TUKlbIae$!OPY%Uf;9>-"MSLXhC3pAC&9th-RW^qBS(k;%-+iP2St:=L=L%b'gL1RNiRRmScS0F#`,g<uY0:;h%\[XRq="`o4K_@6gHQ)T@N=_`&P)iJela:"!e+:rO+Ui_0[YEER"):UQB7t@rFFUe1AR&m2S4SK73HC?EQT(hSn)_eim*sKIIBrfI%3Q3FC3MY_`P^gD;%f>L6.E]'QmR.tbaiuUZ]2,U*iJq>^=%o_1Q<1EgMq<;\R4[nqY:IJk13N3\@[)/_mNf*(D,^+`g6e-T78e+U%XC#`!/>PHE07[dB7c?q[D+Qh$^(B:EcI`fl\pDK6%B(Uc?>3A?'l0Vp-.^2#gfCFbG39;!&._hkm4r(6&MB&P39Y4M[HYJOrl)$q%6,a)@P7HOb]@f!5=Lh%s"3U)rF%EUgld4]$[;ePR8_5J\&R2Dde[1A\)jpHR&q-'dg#,kR";E#(]pu.ch9o8%&QNdkKbb8H<A%Z'%$nj3?MU:&[FL^'3c(GEnVP0ZV,cY^`$aAEt%M`6npMR?($>XE;)k4^FJU?O$PAN8nb0n_S(%K[H?o9u%S*=D5R9eJLiWr6@`c5D"%R(<G3r(fZ>Pm,"Ice!6^TX&U?#L"=8\`FdkqL)AqbA]8p]/'#g\tkcn8iWZ8)u=$H`XTpILK!Q2Y/=ZX5;D%/bT*k.J_f7S"$<43%;]7mR&*NXd;aj!ik$uS`'o?M62m_"6N,O9VBX(AsmLQ`6M=r_b;@Tf63>0s^,p'&ZE^&9F]39@I;rO5&;Yk.NFq9c-#ijVJ^Z(SI%+\"l3h@^uU(T2(+I'71P]Q!GlC_Ii;;X%7Y#)al;(@7j-E?+?$f\=(S47p;oqoRSfa*!aOZYj[3Q\ck5ZuAVpL[j5Z^3/#G7k"OH%LCKGa:u&uEBQ9lk.pmn+g=\["*^:.lD[/HPf-Bl6L1SdPYLYbaO`m6!];,f3i8$T+K=rA548-Gq`lZu\LNPBT:@*]L3O)eW4XKL5%2Ro9<p$VfGFBu*0J`k-.1!8&8OpJ+k#im96O`HYh!mOqk2(pB>-\=e"Lcf5j9Zt:Q@S(A7#;6LG@sFIug:9bf2t-KQ]J"KHgP6h@%MC3=p<lo-7HsDq'k^%"2G/g%Ul)^=KC-Es@>GAa"O7q\=L:?o'1"O2/A%NXZg"kg9pO=]TGIL!oGn(X^<INbJ-fg;kqoQAA9c"f'%am8Ns2B!&Vq5qY<(b^><p!qitm^R%Y4Jgg8eQgD?HO&`\O`^lYI&=+0S@7D-c*%`JIaoFH]W'X(d'o4a9/QrV0+*jb>@A)SBq<1Y%[neDKr)`1-pNr<)h:.(RiZ[o.(jZ]7mel?blD&3mMG^bk7.Y8AD%,C5V1PlZ-Z81>M:JO8?*+qn"LZTp=):rR*sF'M=7Ffi!>6An%k;<u5(r,OS4AOo/c+Wr06d.D#M;&t2O17?\#u@YC4-o#)>GZ]-*c,*lliuW+DsjdS:TrgtfH'bf]!E5>=6#Ess0LR#+HDbI72>0`%EOfj]'<JfQHk"+r$4Iei][a]5IW:=r<)Bn\qH\SdO,+ia/\EH";J>DP(6,sCebSCHQp:kKH<VL$iC)-)P$Wkq$s.Cd]fO%P][.et%g0E%8LQeoUHllqF]OVOS:T1r9a%9]Z(4c(P/qeLS0>8T_Qlo<K:06DWQ*isqC-o2tkX98@[%2G)$e?Y\e:[A<,1$!"N'@7-hEtf`%.4)i2T*>O9jqP7fDI&a3hIE"@>P-eMDfEZ$i=-0BH1M^9ns$E9@DYNh%G%\.FPZjQ/l977@tn2c&e2FV3.CF/gZI,a*8)OHjUHd'%3%W@+#'G1*gG&#Gf6%#qM<k+8Lk;KjPT.>UX&O4bHUBY4r8*L(.D+Y&6]YN3qm.PT$I$-hjscPkBn@D:k"RGf1J(tB@WfArhV%m,%o&UeSNh#,2SM'$GZN&m]p=^sM:Y4SR=OVh\SMIi>bjgp[hI3s=G5E_$38l$YP]NQd_*U_p=!RYt;9:G6JWCi6KaKV3#=)O'0L06%%'@k!A+jfpX2$^ZQDihQa/D$G:[^C6Zd&-ZR^1gm(\.c0)=ZP)#2YoSN=+8Vs=6o9;XI7K3CN"%OrY<arV<?EM@)^10OS9c>E)Sh0%*j"(?hjEUZlH_Eh^_,Q"e%^shldt_cF.`0ZlV7\.D\?^^mlR-3X+B)L]f$0^=]@hmZr[4dMAD]JHnd=gim$r$`9hu!)@X#bWnfP]%PS;hup\O=OY+9cT:fQmsC]SN>bLe,^=g]roKTq]/HI[GHj_5POZ:mbKK5L@)*@?0ch#p2X-b$_Eo_3[sa(P7eM$s6AZ[=i3:lcH'%^Sf_lR"JY7W,1i\>i,7"f^6o%3T1BZ/EFT`0'B%Ji8"^jn#Xjg>+Vno3JAHOM$(@u:?4`37X!)J:>"TVd)ktuY>2Nu*bl4`8(s0a%!fM(,E9+(T/3Cq26TV8cXLhsQOS+j0BU?X'%i>q--H<IVDc2li*>=X57$5ShY/$4&ZJH<X3sD>(Sb*^Jd&O>>?(]Dhra^$2U1Fil%AN:P#a@dkO-5#]]'6RBDOW4$2C):aY4Ma&':T#5f$PtSZ_MuDmDS.?#mUbnqVKS.EOof%*rPc.T5.^"RiXbj,hXd22?$5#*NYEjT%=$!_PGBV0[WQB[3.h/+]M%$\G#Punpch>Ki2lL'>97NOI3.O\e>5;GeK/(t)FaoP/-"j,Ok$J".kjQuMeCLSQ^NXJ_ni'7E.6gY$%Nr5%9mZ+fX5M#LH?=Vu,&#@;MEUECoLp45He'p]6dLPh+\QuKRV:EjO:PPU?2703+iMQ$&Q%<Ad.V`Tek#ND:YNM1q!3VnSDA3po%iE%5VBjfP7<`)M.Z]lJ!#IGe_?,%mC99pR>1e/Ea7RGc5UB!GaJgp1u=6sU"0;$!I=##^p0MNT8Bg>-:=uY4gl>CRO2&"oXH!9Xg%T^AS,\Le&lcnU8UF',DVH;8>2`kL>=_bZd&QrNAV&;d$@9UKe=*QFP),:+kBK5Is$$knaDXp_n$fA').W3PWl-F_mamaDJ@!9J)>%MS-dPY`h9V$nu)oL(!cbhPLY<iA\mARkS*4g0'%q/hrV4Wg.l_\CDMQ9%G?UWY-c8S>+oeNT#,]*7.KV_GjB?Z/T:Lf:5lrP#gB?%\@'O'Pq"D2R2g]7QCCB&6=>q"jN,Dg@0UdY]DtCPBiViBpGdY3AQXNQ]_*;SSKesX;oi2'V&sdm8d?E4a0+*YY(7SSdUD*<OH=Rt%>4`IDUNDt@eW>Z7m9@#IM[QVS;'pGTUk@>Zdj!l4>'V"1@U*e'RFO&G:mQ8iHQ=mjQ<Aeh;)ihJZgEU7aDWcJHtcP,!2%=57RJdY%4/>4m"?8odT"Gg*Gkg\!Ei%@N3WpZr"`$A1n7X?R`<(Ze%6hi#C2)6/E,RJsHc+mEH_E!eWL5$M]DSP#Ah4Cd63Y4:<+"`2?qc*;%^S3EUN\t(t3-g,W[>?88rh\+oDCK+CV&/us4L_4"FT8XE3qu4qe\K6$iCDYOP(G:GPB:%UhR[Q4#Q2t+s%2E4l=<2Db0,]a9U^S1%UTN=I8V!"9].-Be$1!P;hL+XM'[TEp(!]ruc"ho'ah<YO!@7"2puVq=,Y*ja]diQTWKU'u=_nAB:o$b)l^1]Cbgcq0=+S3V,]-C`%]0SU+2>DUm87b<`C^j(YOA-2,:o9sA-c]`&lc=/V7G7OU:36pe705oicCq;tY@@j(nWq'L.&ob`O":.g9u^Bk>)7l]QJ"$FU%,!^%3Cf-H\LH8k()jPX-.p1(_nraVEi/uqi0EaT1)Fra/ONFinY)?CB($$o201pU0rI"a+)j<0DY20h2[biM/4[JjW#;6GP0\N:0kc`#%$u65EdZ0uJ3H#./C3L0.V!6hn>rqb@3&!f7.Xb7R0Tg']!V[@c3XYSRqSld(gr4hr]krO-"3<qO`gceW51oH]alsCV:?.'0f*;WJ%L\+7Y4:*D\,8M$T8`_P1_9ZD'YeGicD/TA'HY3i5K97>Ic>50Y</"cdQA#J<0V'_e$C]V4i3B/`*)SuVi&1bd>6F09-d+CYU0FC@%f^u\\!f*A$S"36"2B"9Wbk7Z7%WJ;'kmt%0ejA$QZ@W4eK]LgOk]JrD`8K4:OI['</4W?aEjpjtJc7C_mCE^#[0c5no0s@<XhG0U%/&cZ;OA7j9!s/le>>b'BIZS[G$>)2\/.f-1T[8a7U_>`[<clD.boGRiYN#g/XZT)VR1g:i[!k5i=YI9c,UTWn$Y!m40mGO"S8=,-%?Gfu!4@_8.?FF"jQfsm?E,'fDd&KnO#gb>Pk6Q`d:1.+fp_3nM%EcH,V@8Q0NZ0p/6IX.f)d8CDa?st8](q';+d!hR?TVL#4R/b/%D'2:jF.4[oQWgbqmTHfj$#G]nkb&B\(PuK'l\b<Y!%W,Y!ie(Wm@Y>0_h=pf\N6,?Wsif:.HU"8!CuJ0fF\9gZ?bKP&A6HiAC4AM%\P0MYhKI9,,:Fj$gICiWr+MRHP"=1*$4g,DSp";n!IoKl1JELt*a0"@VP:,HWuEObdY;O;,[2`i_>@ZZ3aZ];l]Re:UMV4+Rd=s@%\!b8oW$M<2bnYJ\>EPDtM(lOH#r1C<[PWuc,ed5*Y[_)RAre4>_pkm>%O-p8X%TXaI1aKR_XZij-_MgpYKu(c_\Ma*3W9_j?2]Hj%-!gG5.Q5M92b2H#iKWB.j!I*JQJjo2e8'%t@D'(_Y:T#jg\],C^TtQQh6)B[r;?B6f8j9%KQ-$2nC!7[dsEcKI^&j_E`:A;(Ma[#%acn8\1LV'ojU,7477#A^o=IccJ9RQ3[S^AA)Q#fP"K3bokF1@M9oY'*0N*2ZFqh11SsH6p%0[s+,.&*1CeY`JGFDhk?n(pq@$ks1%n?bf^_PXm_$s94Q$*[r(T(V4mJVq5+`P<4)6XLU;4p\A8+=s:NR+UYn`$I![M)ZKA.kWuaeL!Ao>G%pHJ<g!<coSuh1D*Zg!g>1Q%"P,,X9s!4r\,f\=PmT4=I('/S,33LTd-K1[]E@J!33GEHp]>E`M&jWT'*E.R_Rb[Zfc$;f/E!lE):as1%3@Y9"s)5@2s(5Hb,3aD%YS,S%S8d!ngJ6le'I\0dl)QS@-io4nrP:s"@/L=U^n=V6)o6ic5a;BuI2fBoFik(o>S[C$!!Cl\Y(VbBiK/b:$EgS]MHYX.^t"kX%2;&Z\L6-&'6>`NGK0`DZVI^GQ&"Dii+N8.8*YGViKeEYU.+"gK+X7'tIOp&,a&mnU,TsloTZr3QO901CQ\d#`r1WDB%RN.O!(Gm^%^N*LLJN+RErF0$u2^$Nmi&6h:^eu;g-]gg!!&p;"!o0[,D]M*<Xk'pgn%BPt"Lcn8f!7F-6Ru!5%4eYP?/M>2NW%#%:Qs1E@f:)k%2!(dTEo&R&3jF7WFsO,UH9i?0NaQ09I2AVm!YfjT![f93YSKsUe%oW":AWr0OrlZ7d15C+q`!2g,O0I5j$h?QU=Q;k1%8^OejUa_%C+r\C!c*"maF.1u*8=Top(ACi.7g"d#t4Tl51jYtdFoUFlsPGJ:;A:s@Z[?3qftRc'U;<J"eoN>2]d>N_4X,O#)p,sf]@quV<Vq:%Ll?8kG@!g,So>#]!j+^:;C0+mZBKL^.XP-FNnTB^_?RH^ZpP3`.%P%NRrIh)"VlDrS"^kd()rT;Cge:L84N2Z'/"ttosiR\oOKUj%2-1kc[pD]F"QhQD0Q7[!`/Y8-fYK3A7N?DI+=U?7APuna:'GgoOFX[fhiuq:Rs.0?"LhaC[P]G<R:9q><aKW_TsqL?j44$7"P@Nu%=i[2N4r$@hnQ\dj_)[d>2WUfg!iN2+8DU-3n\X[U6h0=c.'7hfDI4(8UfZ:k,o=9Z.kAI08pPXd-GpD7&9Us+p_I_ijB*j"K@'n#%kMeDp7Y$i+q-6EH(6dGpY[N:/\*VsKm/WVB^seJ4L2CsAZo*CfV6u9P"e7Vr*$Xr]bdSCsKmR(8G7>OC`$uSl^6kj]E1Mjn0PVOm%#S[u]5E6qH8cqZhYcStL'qf)qR]K(QT6%TJj`Otc!cC=Y>n/K.j%F'Z.p+sm!ZY)$BFi#j+O)sg>&-gJP3O^YP]^R<Ati/?"UY[U%B%F64+0:*j<!Oil$4!f^Q$(&a&b*X+Jrj+ihC5dZV>aW'Oo59L:gad&EO:Sf7U7s7c,g0`?7U;Cau^lNb^^XXLCk!&g-gCoKj)0B%DX;FrS'jI4<Oiu+Lh'F48X':#\/'BgjUW]2NZ_kUOA&bNXr[g<E.\69)V"bY>?86X!n0]Y&@5s+[c:a&+L^3\!dbZ@ac2n5ckTsC%RK9bVpIi93aSqgiage[b9e(,YS0^d*.W@4EJr<qN_[]"6%0P=cFc`..-;];$qPqrFAZC%-61(OhX"lJ^"k4.nM!1E3-gkdX'%tYB%YUIII@hfj/CQ6=&<J@QH+d(Doc7SNi0V]2!ZUf49WF(0u9=@bF?>_>Rf-%-">Qq/Z'4l14\Ol1r8C!BU!E8&[Qht*s"72IRaVI@P%[^D6!,gid&V0<KVRKD3H$4Y31nG/`A#FN$Sc;6d]$tq]AT.<ln<s'f`;&cH<Ys'$tPO/j&;.s-a5m\R>%7de)%J<&G0T`n6'\KFe%3tt>ej=J)T*DBkE'[n#nMe"%<RMKV>Pr8%X''iWc^L:sSFCpFN@d(0>Yf%dl;cpgD-'0:c/Vc`VPXuA>8E@Cb/TOC9D2U(\V5K[i%fEN-Z,16+3=OaROc+6Vg[9?er:(V+sphDjJ*c&50Jk^Cs2lsD5O1tbQTRaNQbKmV56?01Se<\<&R*oQ-W6;E!WtN9Ml;OG`*PaYr%gk'N[#d$W[8pq_f$/k#D@#;%W^sgB8N>)ek7*2hHL1rtLOP#h-h%$E]gO02ZMD5I7/(J)cZIEuU6RYB)[>L^DdhgmSgRp#18RuiD%U8gO>9qf?>X5T^gRW#;].rHn<DUr-n1KA=V_]hpd5S[qfJ5qMC;7fAgfT?8[&m!^Z60i7#f<:<S.M=5`&0,H0J.Z""!rYBUWZk`h%eoCMU.0ie`[`9["A\_"p^/Cm5/7'7rCGpfiYp:DZJF;VlRMm]l$)>dte*IEZd#*^oD!I<dJT2qFX..(42>+jW:kjN?4?HX@%=ku$%G_9.:#XhCAWDh7S$FV*-Y"#`L>]WcZ6$[)1CP6FsXGmk:(uG`^dT/\JC87sBU:U+f=cU=K3HVU_9?PXDW49E9gVSh,c4l1VkdY"H%)[BegWZ/122UZ;4"R=C]1DDCBKoW+*&[5=d*M\ui&D^$2@r+%\XZe5ETm;@ED%82hZWTH\<THQ=_0-?p[Q!I[P+\beg3&ebVE8[/%]j1^i#6?3<_^*rOEh;+)l6$d]D*?mU;olkC\$Uoh*"Y-"43=LK.p`[T;DPKQ0*NceM?VY%afis+L5,:=,b,>9B&L1!G0lKh")(R>%-B<&-N\e_<>UU/oGS^Rc^p'fc:poBNf`XLkbbD,pC8p>`FXg9g6G\=YUVK]XWPQgp,.\\`Pil?=H..-0]Ue*tE7os`bE9t+]@aPX%*cEOp@9b]ugk)\rUd+mEi$>$3i2?]aJ0#=W'a;B$H5^Pi`b8>'2";brU2"H%$c-sqp`QMm!hcQT!6V9rZ[j"ai.S`1Q>R"RY6IIf%*7mrOWC^8_e7GM+N!"LA)*JZiFX@qQ^QWe%N3%#dZ=iK2$3UN5MM^232erZKh6(_eWQL0`S#r("[jf>Nnn5jIe%-0!_oAciMp%ME%"]fb\M%ZjoY8')3-?/BGe$/n5[+dH"7QXG7+t??##NCV=`<lI%*TS"#7if`V0Nr9]AN3Q[Du`fm?J<U,Vc,:1%\*^-q?Y/tV?e:S%beD-kKMB`%/.dG_HQp1^M7VX)!!PNfjV6')2.)##g_61MZ3OOQW.kql%S8Dg?oK_YS1DagE9b/65KWDN>`?6l;sP-1a4SlM(X[/c%gINbf%R<-FI%F)3Uh;#t;#3ZK?;_Rd&=QG'Tn\_h[C'Rf"SGg/3&hjpe@hedKLktAIKfu0RKMT^DKFuudFuMVNn3"$;:A*/mFSRH%7Wr0+!jZ"T2Q+sifUn!6h;oY[Q^aHP::12c`(5e8E<b6o*Rq'.3^8akoBuF3oFYlmRj3YW5;KMKkE%:L!L5YM,%f:pN;;&XmhUXp%1;V1m/`^GSeqIWgB\SA^'+s&rqN4R9JRSBn3Eg-&$LYb*LU^>DOX62\Wl;fZ;_0uAJo/HBM'[QG3ZA<)8QBKW<219T(%CAR1rVUq%?Vh+2]"ln-bRuHa"ejUU5mQghdnDLtk$0CD#2LiN&M,`F1l.b.S_/O%C==:2+Q+HX0=(`=rmS=J.;[(><ES#oJSH=:WRFHNbW6J_%Q2m7\GValXGa!*F<HSXn&?OOeQHo&1W7WrN$#gAgJUQ!8o7N]KkC&J_qX?P+UNk],=eNkjKY0k+#eC`k0VB<K#\p@4J\+o?$B\G\%I;UC#UnTY6aQPeW<>5ElYNNF$^-T5[jnC77;RN88fA%#G)E*RY%L'0"aNZ9[$-qnF(UE^-CNQJX!N:_SJ>N_sLUG,`2*#t@OJKkc%eud<Lgt2Ga,an3Q0NJFj_;g+`)9;0HVDpfQNPe#Oh(9d<H!UqrAhbPdcGBYh_j?+:b<mQMdtcc67\qBWMNA*pkmrStcrVM`kS:T:%VdT?\jm67Bd&<oH)h%#hCc/TC!THY=?LQc.N2r1,3*+;)J:,ImK*ll[i%i:DZl6b0gVuRNbo/.W&h"m\Ed.P@EH`h\S[&f`C**kh%4hCW$/s@&.$DSf*U+#HZQWU3ti0Y>*0QJAM9<D'Y<`FPY/'B6BNj,K@D=kJ-gG)X#QtKg1>JapjVGLZ#_Z[u%ECG&)0l_V>F%',p%bCRj#.M]"R&TDD&j+n8<U"I`W@)NL^7'm]=r4eE4DnsXh#O=0[#F.Wdj?[Na:>m2BcbumJ"=Rnf8.G2D_I[;I$(*8Lc!bE6a."O1%gi,;[jZ6l)UN(1]<gb![ot=&W['.tQ"L':)_')]TR3oVtA/'S]K5*WdY02QTL][/00%1Z4!2m5;d7?nGZF1h#1bjZ8K!oL;G8`*f%n@573s7H-Fj%:(]['kq9;j"qnglWakd59KA%EY>5.J_.(O%&hH2;]>90p`GL.c*HeN%>Dsq)kioA;anGApZ<VR5F1^>"cChW&\<(%="eKk(83:SRYPjHQpNAV8^K2IaBiZ:^].aN^8YH?;3YJs0#k/)L0c>0#N*;HhS"QiR0>k=0ohs7BT`6meF/;/+2N!uS=$.'A%&&$%aA?^m3o.4h)e':694H2<p7Z,%?4""s_^,oGm6i,Xo%AR=#"obo_<SOfoB`4I'aF:1+mo!)`KM#kO\/#IOh@DYAS_?d&1EkkT+%@@%6N%EP06%,nGFMZQDdV"YXV\E(ZATXFGWG6R`I!Z7%L.O##%"u!rBiDVmj:-l6:lG_n&0NBWGT'<-*)S_UE\<2Op7(!AuJX6\Ig\T%>(M6-+M7k^_7:JljJ&^d0<:mM9e/1B_8V1!Ta.'76m%jX2T:`EfQ1,,!bc(sC;@+95g&;+BZrrVlG19;_h,rL>-g@jHT-gJm=jN`%+e2b,r1P&N\jgm?BlYp(>m(%8!*b$\C8%Xo>s,\#T_YelC`Ja$ZP@;rQ]SN$4H:"k*n.P/1Cc't6lm#`4E6>%VGQ-<l@>b2)S2T]%.?(5j74ZjPj2D+KE:DS^MDL(JOqGYo$TlTfFmji%_W&&k#^@Zf;#eGVU+6]hbsP.sb`/WkReL#J_<1a8%A4JlR_Ym$E@F0pXCY"P%FYN4%T\sWZ>8Tm8//ED4a08G&7#/7%K7Ot5*.i]n*Ko5%5dJ]#<>'C_ROO,e8G*Qs.O**W`8tU`TrYH\94LP4?2]I1[c!)e_4dgT%/R6?N<JG^W7jsJ5Y-.N@35q8O"c8:01(E(K)hVB'WBbdaL77ej28MfnBf8F%GYF[N?1TalgP*GY;KLFt^_Rlq6m#uWRnH4E6H;p3%?,2CgIGK9fp25*p#W5ZsQ7T=UC8;>\Ojm+U80u4!<@Pie>$_#[_[;\;Lua"j8#[XoXQ^iR*Vc-b]2?/roXV%[rb>ip#`uc"0oiAC%]Gj>'11Zf0?!IuKOqeYXH#-28e1JVnE7t=*pQ],Xe.V95C/d.b&7C>'3*<*mi.eB/Eo-PKqtk`lDOM1IrV^"1dj?HG<&7#FR%SjP%*i_[3Nk^I,TukD-=/X7OTPZ!O>WWL`L:dr/\^M-e4F+NOUcZsW-C;Iq2'f$^Qh/c]hG*RkNsr\[oQD\/2N:NYc-f/*GU%l()5]AJ%0D>2#UT&'G>>f38+k;B2]RJ+CfZ("]6htKPALk`%l'=s7feFb.(hm@(lTR:@"G.I4.]o*T"35jA/M+GiMRGG.A@[X#A3;neR,DEo%E.]N4(,fPDjsC"H3WdSgGt>J:"Q\++D,\2l;=j.n^be?7)Tse3I;moVA)fr4qQC)57Ai:2&lXmp%5#:;HU`$X-P3G8&JZ,j]cK00%/)G`*ZhXo)CdH9'!,2jVJ]je'*aN@\MeEFLdT'*i9.6PYq]KR>$RHA&4,]ED0'3^aPXGt26S`ZkbdGL(MXI_o%Lhm;p!UfS@>kp[%7[d*#/WWk]Ao0n%8LCJ<ZPe$o"lmQ_#b"hUA.iJA\N<6%bBt(u*?B]d2)+8("cb`c@9?])QBPo-NbK_E!F$tLl(IC>M^PABi@)?A%'&ELc\.$]X5(/cHPn=GI7NRL$j(5+6>GWSKB%r#,:\M$qbAH"96h[`.nm3m)#!c%fFW!\l*7,UVZVEMV*q"Ot^0,"Z<<cU%LPrBY%#=^ZCE.\BfJ.a8jcY^o<;qsqI1,.;jZW"85F*/Z+7/b%/10V\NS/F[\Ft7H%W9F@;@th)W"3=Q[*7EX[P%Fbn,M=@0&BDlU]7M?6%M*R;(oT^FB%0c7:)*8\lQ<$n[1C6;r*]^AUW=W(,'jt!HF^6C?@a3%dK*Jhff@&e\QJrPHR"0hNNPN1>mkB8c>e.Zl[k.1&@]F1^%ZG%6j"\WTKb+)fI]]IGiKhh/J-SNc%eS!TT,[`SVQ?3!+9Jk4]BpJaVn5Z-]=od,*F30RK9EA`J9$3lE:"9cc&;93W;cVU?>iZ5&%;g4rs;Gla+;qKDQklQfHQ&2d;2A@mDD-1]7AFjc^"K5NteKAXq4oJ-YM:;5sf*XhkLr:=djM4S9#-JM.X`CbSCi-M!ZEFJ`UKIS0%F%7%Hd/l/B"a`))%"L!h(4RB;3D!G=Za.\o0jrIp&)lE'R\IIXK<^gsbbK#e;;',\9*I"Q`&A3.eBI'O*7SL^l$uh!Aq!2L\'R,g%%:onW!k#liC5`qWE8)[RB(E!T!tRQJ?3.8hqFcH%2Uc'Z#_9H(cI1@9DN_nl0*[I)EfJ(C!AsU]-`g&J7Xf"I25Qj9WO_E5m0p\T%1WAB)m)$'NV'SpXDOtm#Z6M@KfQTp7EX3#2DQ^!t97ZH8Kl*?5F@15DZWsXjaKTucafgSe0W`cjD(KMW(j>3:0Z_'IiF8?qLY_UE%Xu7VT8\-l+(apkH#7Ou`0Hu!_D7"g3D2F-M7bHeP^aV3@fSXr':c5kkD)\q'N[@L%Cmbe+SBQ72$<o<g"toLZR[Kc?&E)ot3XC_U%%9Y/\2:E$e\H9YU`J2@mMW5Bf@pd9kMFPQl%GWl\$']L%5A2"^?t=jIqY)6[k@0K*GLrYQAo4l$F6R+%CtGCWk56"?JG_J&Jh_BO%73q99i]7Xu5tsIU(*_dr^"=dRlj:_GRRgL%*.(@AW@.+U5$WGX^R?G^'[N$tc;l92ZOE8'hJdYRm-:>))o1fCcuAubd-+QnS3*RY%LSNfOYk2`OQg"'ZDX+Bg_T\!JL-jc^%T*oN8Q].3:.T`%+Bn=KNgrKU3l1oG!#FjumLJ[,"%-)EX7e#!f.'R6(g%;^!,S>cFJ)e-%E1r];&ndd\1S@0GY_/8+_d`hHM`,*MQWgWCK1r^n9;\$[kc495dBA9\/#Mr+_c$f-/8[;i[MGe#Wc<"^RuINmbg_5YH:`iX2;L<3%ASm(P;I`prL"I>q5`nVBgo*]c%1MU=c3T=9:/`GNKeu#+?c20s1:>VJm9o;)%Yi3gE#3T5/QYW+Mc#C=#C%LA:JoKo:6^]iR&If7%hKrVHWi>`N"0a=&\CsW0@'F7R=h,FiJKO!R^(k&jA0[,uj'NkqY[sR%L63@/92^)%-NX>_4q_siCr3Sac3`3*8odM`0OPe7Go[j!%I]7RB`NB2d+kY@.lM5f2B9-I,]&qmN$3=jc6ZXMLH)h]R)N_9*qPNKHWkchU.H?l`m4G<"R;aRZg7/@Q6PF2^^(>KG%2tMHm.>J,%CU0bbD50$9+t\fq==t'\.9kj5/1N7^).b/:/iaK9S@7J]2GLY";ELoLAU9@FN&rF*VRVP&VSZkLN51jo3-S`2?_3h0Su7,`.ZI<b%*K\RVU*4akN"Hmde'p#n]i+QdH"44p/`,0nK=NDupefd#,sT7Rr-SOrG3jh!qKUG"<p!V%E+7K%I=]U\9NFX735+Ur'3IA66LqcB%eq$i)O<>#bY>gl@4I4!Z<`fL6p_DZlIO\Sbe/-jr`Ij%P;&P``lPeiX.0R[c8!PW.C(HK\`#nYe?sQ>)gW;T`(GE%.jLB&r/jrGM%;&%r-Y7F;Kd/d+T/#mWPjo.$YZBM%4$>_J)adhr6+)\>"OY'^ZQN*:;`F;;H=M[LH1PLbQM4?t1c;$MWFS.a$\+OdK'C,X]LB:Si%[G:#'OVU.'TUKd8ARgY0$W39liuN/QM^k/];aioQ#C6XY?qKRd?Me=TPj0:E9YlUlbJ/N=)SdMMC></Oj^&BiT4ZQ8TJ,K1?bF9a%*EHgK9soC)BX'0hb,@+:_Gn-J=>:Wr1+En&.+RBJe!QFaDN(ZrGNSPja!jN\?)Z9.R^pE=%V57</hb5GQt;HY:'_">*\*KBb*V_6%NsL?c1[KLQ*5?bV0Md<99b\uH#TJh'D4ZQ3m"C[Bn7-Q;X89IACk=bF3FMn$1OJ>':Ve?.,RuiX-G)%b]euocOC7kR3.T0j=^kEg%pe5g@8E=i3e6Tp4>43eO'hRb:2(-J_Ct[-2V9P&(Aj8?[@._YIc`]XLL$"3JeY^g0a\YU1ZpNW?W_C7bf.b;S&[_*>(kk(I^^q3K%-`uAf-NeJ,j*]5GN4/p#*[BRdK!D8>B!iW:EMDk2Yc>$+^FU'2$B%2l$Sr_uP>C\J8Fm!BpU4JOD;!3RKu,)YA6><_,%N0j:`r\?%,M3p`>;JX*J>UD?He!JIi%omhV/=<=E3oatL>)/UHWROY:H[KKjPuel%m-gJeC*F<C7@k*X/RWePZ\;3`?45\,&pNi4'MR;+SS8P%c8[cRZjF(J<6l!aaLfMUX6o@!57CSQ8q:FC;B@-fkN@T-6rPGV@&5BS"n<!QWeiVTlHZ![$jt-N^h$8.!8I6([&/V5k.)fu<pguM%4[c$>[Gs?I7iRj\9.*9o-Li@.(&Hbll_+([P.=Hm_pPb<()-aFX.8[h+%O*kpVVD\(mZq;^;:N'X`\X(T]YFQ@jnl:F:;'=(XIA]%ZYtca$`+dD^dMgML,4sP5quXKbkt5H]0Q;ei_23Y2H6I"?3C/]af7nb#SPml_BqNh"s'ULF,S9E)1#\Hrj%@,3@RHXji_pb10f#X%_QT57q#@jNQX*g],WY3!c9L*@!)h/m`]GB@&\/jLBTFR?JK>-I!NOOTmA<-j6f?iPh9F/"F(MMtIdF+d\kt_XTA6^2l/CS3Zad3s%BlNT?TnqC%S,?8m_A6Sr3$b6YdB;k(/^j^0rLB1R1,[hc_#s:9+YND@*I2b7.2od.]2X=!_JR>FL['F,3V\u\HN0h&R#2RnSJSW4%$_s@&"aMP:8(4/\nh-D?ReX!4K^k5o9D3D%fU>CIe-mZH69#PK1!>kc>.$'kgKSM)>>4Rq-s!%T$2lU:^"o-K,KRXkOi_HN$e,t%%:eq8QY]?L9))pAgAot"t\frX3=668s>*]oL"BC6s!NF*<Z&G5X)op7B"lbhi%R[Dh-?i[?$]E9>&;s6KX<`RJ,A]M[.U/:INkQq8%6n&p62Sc6)%STA-r]`8\oNgXU!Z3gj<Q"*&6kNd%'u+?:IYS-Ga\6f3fS-l#-1CXeT?gko`[[7X*'B7TAni.hm_.1t0O`,B7Jm&?%Lg$thoI`VB^*rEj;)L'YP3q#$V#S:3SI(VkOMd8j!J_qF(.HeqGW!07(q')Z*8=E\pk3=N#/9(4l?oX=m"NTD]Br=]Y6fIE@9_*P%P9SRe_CgJ71>ViaK9'MVV_7rgd9/7PW_,?q#FOU<lSfK1*u<SpY@TUk3\tf@m$Z*227G)H0>IJuM^`_39XM'l;--mE\aTOjZ/bVm%=.5CpCg=b,D59tTes\a@%*VR"nK=&f!g*EEF5&`t-1l":+\5QInk@)NKmV\(HRg*EiDD.NU:AQu6/d&<E`[>e'?p9[3i`KiQS[p'%"39F-Fe8"+;>,s`2/9We_CGlkSI%q2HHL)`r`5<_5Wk#F&Rq4.2&"?`Dic^(^pO87a-OJ@VP3$FU!WT'iQ>qu*U/Vl3&-kbP&8,P%,AsDA?[!<\@^8E`X8dV,DrhCco%nqY=A3#(kL)TdpX,QN7+@!r,c1r-Q8uGkEA98rGE9>dUKpl:<jJIZa6:p^pYb6R?3\ud!s#?:%Gp)N6Oo@cmUOEjo=o>f:I6UL2:%rgl7koP8llVb92I%0"Z5M8JH<VWkgVm%+E,XfNI5^cQ1R4#2PF-7PfoBfZcDjY%[1;`7&[l#S%YfeA&3+!B'0r+3I*GQcNPKtA(5UP9DqAkY/-D$4Sb*d$07[Mhf>kE@R5/IHL;r*<RFh8\se]or#HJJ2ao9OWbVsOVElF@b=+gt!I%He4DHZ),q_:FDXjQ2*!5^b4\8rSFg>5%A=%`f)4C<E2+ua(rFEl-JBm$b>"e1Jnk`3Z`W'5eLBK16=?30N[Pel:VZ;[3WZ3,(N7s%a?_,;S:;7&gXdu]GSOR)q0_-mHhq[\1'$rr0r<e3]=f`qlQ.bILSQb+c5l-9G=cbQ!SRBh8R_csTD4\0jR\uh&Smu)O70@]VQVY1%*S;3<;Q>)kL_Bo9L__NkSUTB^pe.u@^uE+X]<_#[S6MO<5)p\3r0%A-lb#;`c*+BlU>?<>N]3l;1uF.Y"+?A+al;ZT/;[%&M,_Tp%5uX^J0+c@!^R_*<oN"8ocp`V@%ZjZf4r#"2_mI+Fi5`f]>du^cr%_XI4guAVE^jE6mYe_o%BS%`G>f=Bcn-oR45m*rPZ/89Fl^HO%YTLesm(%ea1aAZ`3IeXl1N9<n0\.*@l'u$BR,j:A:%[V0[qkQEH>cj\EE>9jT@`nUKXS1i_V[OQSS#6\R+6.c<[Z((pKCiEB#cSi%e];]1M+JNA:XVr4@N*P/9_Dtk.F^b4^!-.R,;XOqcr6uGD3N=RLC@sgkRB^bp/e>opLTK^@0n"lqp!-*gdI4Xm5D^]JNigjrU'3H%IZ`9!2NZ[_D*1C/GnH6H`eAgc<BD$-+<:5ULhQd/\R:doCpqu;cQ1bO#FkO'kS4$Ugf:T%SA)B>@5%b.UQ_d,mXaKgVh3ebnX<a3%"jPA$fTN!2'DP#[1Oo[I4!9jc[Tf?teXJ_s\6g>%p2.dQVUKA7j+b4jSJ;+A4?kF=S$bm[G]6hrO#R"?/Z-'5ST-eG:s<,57!=IQ%61A&0ri"++A`*\\mYkJ;/b@$<n@jp56ENF3QHnB*#\UJDd+<LKS<I#[H=3#VB\.T8[*g"&`jj`;^UJ\6[bBc5I+l?D9%Mj9Q#\uk%hTa+$be9S/=s:=@0[Mn)1;\V/IcE"^A*-$)p^u6`4Q,9bU3['*OX&3FlOYM/1,Xm8l^'e&mA7o>@kqkZd%jthGj2-&qWGMo,C6]5%O1X@rh`U815QA5F%S%\cn3.5@e+ITjYqAL(Pr5bpg4mGqg+fiaT7iZdA-%eX[hIPSf2`ukp2L\9<pRK&Ih(MN)4.>o57KSX1bm:$%ojYgCQ*6Gj+(*4BF=Lc:K/<a4"_dd,33!B`GGcHJ.800m?G:"(i3h*>Im<@%o#jhI,N,O_%irCo1@3]Tg9tgjg")BI'VgTP0m<:_%5hP@J)*<Nj]2SQ4^MP_T][a)XfJlOTK6$=qQRS'-qD`m6'E,-`06Zo'lsDMq\oWIk0;k'I#&,,R%VJP%QK!#'dP0!@C$#37&o($(%P(!/7#(+#[%!?cWNm2p4o\R1(Pc!MM<ZgN)c!!95lf/Jbc.L9?^.k3]1p8_ZFrIebW^0N)<^op'oX)iH?/16UjW3oJO:+A:Eg^YL%IrV@:Em8Y([NOFRD)K4&`ua:R\!,E-]_;*.0O`\m(\)LUhe\:mD=k?sDY&32Q#Ca?7?_,J]@*,<(d!0]K8'QHiRUmaoWg#NpNsaA%@4$R@rbGgHZAU*1I*cqTB@^M:mJJ_]$FNhS]YAob`?=HJP,WYh@HTcRNs`h`)6@%]C3iI8gSq)Z?%bBF(rC+t*,BuW/rpt;bpIhn%Y`E#c[U_=$q)3Mm%tBu1V^6VpHtJsDmpe0A*cQedirMBq18p,YWmB'F,6*Q3`hP0cf9Hd!L7;X@(]I'=Jg($@IgWUYFf+^"XbD4p%PP3e3V2>#ks3cHD2kB]MCRI*uB/ZW=L[1GSo=32>\)bI#IBf#TA(2D[bfAbf4\bGNHIH/'X?Ji>YBt:n8PdtBV/`+^D-ht%`<FR>%@em(2k]Q(-&cQ!ugn71;-.K=k*np4p'uab9<_EkddY!.QiG3?P>%tX.lZnU7pVZ%:H.Z\`XaD(Z]Wr&HnMk6$-J/k]E.j0XAnlps%]8]"eG'/l.VhCLHhB(iu/$Ou8XhL4]a2N:.[YH.=UY4'OS+h1T:c6BUhWQadLnM;)X9g-YDLQpiK#ACad,B]5hNqtBOd3dh"&%:O%/V`5H80uc1eJhuU#1l@>!7^R'ptOr9^TU+J/N?RZYW+h<>,?ePj/sB%V6=e'8g+5;B*#QF@i]!Gf$gg;g^cPq1R9u[I[m1RfmK35%F_oZ%@aRnA$f^\IIq2:DA"-0pIdCKB4d'+5lIB"N2m:oq"Z!^lK$H_VjI)YOmc&7nFq&UZZh?/u*+B$0L^T9Q;e8N4\k",b'gtV(%>>O=4E*(h"-cc2`q!kkAlIb,phmUI?3o83;I=?*UokGi28,`,@m0l/'j_`j3lE.UW15%ro/GeFDp5(_R"qHs;F"=sh/!)bFT+21p%9q\rKKpr5n]am8Rlum*'U1',pI5e;k6Q%QP<F"0Sp`ENNr1Vs%GsZOG>,BuB9)PpmO#uH3='a)3qhVt8]H-t24Pf/lK2^dJgeM-<%>9$#Joe2<a;C6$+=Wo/G\S:ogW8tZ6>HI0ZWqH@4M:?#01$Iacge\ZIS;qrhda0m^BJ`IU7L-$m-2Ge?-7IeHBWaLS4H9e"gOQ<b%R@@E57:(P?ksD1S\8W.s`9lo%3?%<)5kB$R/C3)9@1-D$jSQa-I_;5Ia6@t-obJ[L"(F">mm"fjBtg\VX^MD#h61i4NkSuhqaC;?%>80<d><6:7Xg2G+X^&aas+XB3ku+j!U8L_AX1fc<iuTrG]Sq&qPuE\M@34tE2Zl4do%tb'#[.J=[gS=Po5=(?\&lO:HJ3[H,Pa75%Y9.]Gim"PfcEKI$Qc/NoHEk0h62JHt`qK&k9s!mK0g`l;\u0</FR5=X^`EOPN;n</NErr/N"r@5Tbr_?hX@Qk%Feso6c'9kBWL+d%%3O!"2+J\D$GS/%9$D=`b3pqOj(<Pk2YS4--Lu"i?U*CB_rHD5cYZ#VS:?t`!jU!*S?\)YR&@%gC^7_>]!d(nl^)fG*cqJq]e8*"%inp<_a-CmQZMWX9Gs"[Ljj+KfZ2![e,U^#@LtNVZF,C-(g09d<dV'eM59&Ml3ejjH6.4p\k;AASgeS't7,tI"n`$qa'>cL&Gh_a:%E8]RLqe@/k1CDq;G#FJ9"Uo;(e>nK`SF&dLK1B_kUYRPE^Ys^)@GAgErqu:JSU;F&j3SmGl-4mq9KkLL=9X/5gMNf,BNgj2j7?5Y%C1mA,I-Z@FoP)$GNTAhI?p]iFbI+@BBN\]^XY]I(mt=eaTjtc\$Nj0bUBnYtD-lnNq"c7NY`"WT]F,2;U!d;pZ=Fi!d,o!\[#jb"%p\Ek:;EsW,gN:*!\i5h#SZPsDq*&eecTM0*AAD4L<<=$6`2^"3q/`fIdZ`=[/hG+EUU<ei_(<[?nHDJrbb#bQU>C**U)8eS0-!e,%\=@/_dI&egF.iXl]`4da5-45MZG\G7/,6X(DmmX6%XPJ3?=rr^Q$f3cY9.[1n'*](/BJ-0e,t>XZ%1?W:Q!WlM=.0HVQ^I8l!'e*%SN82>nn)&47.]Ij6^^PP%C?T4Q$)^WaaN5/Dl9dSIr3\<\K`,fd"IF`7^%a-D^I:pMb3s!<h]i.*=sI-n!;"Born\)<pmZe?U*BW%o5R*g-dMkA]TFcV*=WGK;u2F(;;p^\SlUZS+O%6rBHY-"hQ;q]T:-kI"36-o[UJ3VV.>PIS2u%jN/:p2Ts"sXpi'I[3moo4]bk0t%jd3iXFRdr\7Q6N`ITlo=kDE4mJ9[h1e%p&M3?%@%qYB1=qEOA3Vd4F&J+#c)qXJ`tT'#Xhe6Bf%+$NmjHCmZnA$Qo$!'s.ShGS*s%gnK?\>\Vi/EJ*ilB)Zma0Gt['iZ:1U=#QU\o&pU1iJ4rq^%V`6\a\m)P;@4RbKrKClc)F%Pr6FE1H'u=l_P7-lM\jimZPWhoW\),%rk4B]lc8n%Gb)&t1Y]]tjW@5YS43T`]aIJfVAo5Jp-=pRjN0PIXI9R,LQtLg)5n\Qm6."gY2>`)a-CmSZ\S2_qtEX<[`=,2b^DX1%o6O-(rpPXb>Q/DK5+>Jn%N]:LV7Cj0Z".LN(AV.%1:IWS\Il\"HcSkQ_UiN:8@T.TVjO[<k0/OkTrJ=0l3*SQMW3LOJ+DN@iSQa.%m56Qnh;HQJk@n<^p_</kWr6TUbuL@Q2#TFP%Y2.OY[#jE>lInfq)06jcc$QY1b6],Z*H+s3_;r2/^/P>q!g1>&Is&SeApg'ZW*"/%qR?Q4k3FlXqEB%Bq=V*L/E9/DEfP$r!L]j(aP"X.<R^F>C>V:*-3@FQUbl`jHPNc_WjDq*$\StG:i4$G#U*-7/5/((r(a_hQ:Lsp%<M#NFEMXb$`LHht11<++p204SV/&[FT6bD-gPnk5Xa0[ArT+5P:&hia6rs$;bnUMP1MA[AT/=p>>MQ$H5o/e'epTc+,^!&:$>mn*%KQJ+^#5qKHmf34T\1/+UY2I3$^Y'EAp<^]p]?TcEKmoYVE-^;QmqJ5//+Ptrcko?d!O^,_HVluFCP3cU/Ugpbag!p?j12@=;nE2_%&5'e\k!.[u[nm%`IP)VO_'kP%aY/c.;Fq7KMj)oN*9pX?6X+=E=PGr6`aYN6I^8823X&uS+hH$m^C[iI#&)+_3[L1Fi<rDP>gO!R%TVn=qieL8'YZi2mp<C/H1*Q4YhC%c;RboZQ%AWF/Yq&\^Od-\;,,/mGA4R`K<a.Dr4=@J6=LljNNooBd")D@@>*sRuTa/?r]A6Hp%k:Uc?S*+Fq/T9ljNU[5Ehn+aNgWLAX?Y;BB0gKJ50n\fT^;Sp^'otH?BraD`b+!nXAW62R50V(-be9G+@:l;n#Rj0YQHS2];DPrm%]>ku;=RBBHr!ms-([Eg&XCBNs.@io[&E_JVRsM*;4PY>ApC`$348\Ns=h[5Co<>Wi!XHbJYtsr[NFjOc+e?kCjEfk7!?h(0QMFr^%]\,EVNHR:lDr^`knTHN+BC3qPgRZrAeieEk_HHB,c=e<:3[u4`F_+lhNJ'68gG-q%LdL.=`Sg3s)1GhMa)u`2j"U+lTe%^gICrFD%\R48JB>$*T>@A_g'!PDnaJ^i2kaGdS"/)HHAT2N+6\Qi0Ogg3G=,'4>fk/&mGl2Q!^HM;_f8C5hs+N,;P&"'\q6j03n,,_?i_C;G%nb@86osQcihPEL9;=_*8h<X'R5_[T*UV(>`\0?AWC+pO/3Ss<#RF?gOcLU"Agh,VkB('H&?fp\)LqZ[@&Mtnn_Uf'G9Xp6>+Cd9[%YT\a6YNS:hjc!ArNqe1b*P4B)D]@+a+CoYu\U6kF-t-LZgP]4+JbqibrqN$QH!7nZKmqekn$^QcI,2Hj\#GRX]9TO>&p&3:4hTN!%'K_-3Vh+q:F/l%^BimN9*"8`=CD>4_DQ\gA,MMIo&Ge.QG=3!d@;VTT2@;8FKJ\3L_NR[@("N+^RS;9BG[2(V+'7r?Xl&K'2gaas%\)!qUk2sBPWLS"./*3Hn"bL=%%@+5DK#^Z2g[;Y\rPnU__AcKM4cARYat%:lX('lp,tfC2I8@-9BcKWldI_]VpUebdi\lj5ortH7%G/3-UH/)K1$%'ou^5r6Ya1H&3Ra:ldJ'`VT^R(bf2Ur0D-TbIE_XjCK_C#\3@>r*HD4@@NQYM6Se6M.iA>^Q&;e70Nc7B\$j<oVZ%M^*L;LoB?_1H3=<oA+D_4<!YL@VF9W`I(D!Dhj,SJi6ZhggCIaHiL^@Z5cg7c!tAWk2A=#8:UP^gac81&,YX3#<qM*X(co"qU^dP%Zh-5Ln)h=d(E9uK(7^rgPc6N0UXR['PR;WE4!s%#<dmBS6Ol9#Lc4"sX"!NllX\:kY>%E5;W32te4P2E#$5`c7D!J^8=67"Z$'20%`X^&iK12UmAZF:.^[r&kjNWF*h0XqCqDP^a+)e(9EPgR+DV)UC.d'p(;4'GQ%2Ke&:j6=\c)^J0JV>qK-c-i=B,4/\nJESPcI>%Z%_7S6D?.hIBp`KNUT:Wg/<lai'/Mh"sW2&)I5'_s6\j,$"e\1G1,<pjIJKbPB&t?.\&uoWPM0In5!==kk?JtIgI+pQID+C?Kg%kA<%ihN\IUSguFB)oC??ZCD#%(jU'G,(e=J-hO`2V?@</;';*l*uPrOQ&E8>XHgu-:_9bMQ\-A&u'N>0Od7Lc\Q7k`R:&e&=*s.m;]R'%4hP,&Li4lXcu&T@c>Q'anp.g@lc^YR!h9oX=,onV]DE$3:AR28c#fr-H(;"7Fru)#^:3j!4jLmUq0JLak>cb1YNM1!g]NVDV9QB8%mq?]_S'j63K,4*)*G[ASST9@+5jO=o2C!2\WiN8eM2AW]MNhUX@.sB[V'Cp)X8E\AfDmC,&MXrbQng\dVi"'dieLlZ7D59=W&B*/%Zu\-Zmd7"!+RXXf?FSC[JEZ+8">fVqZ,\$#)=HP74AOn*$%H3Ma(9W8mb=^dSA^0h5AMWIi&G^\<e]([L)LaI>$(!A<<j>*<&/%)%\XLPSj!0A7(U$W.RV4<c`0>+jnAqk$5.e^4_P>4X5aq_p>![q!0dC)\<:A"gh3Q,5")[:&1L4=lS1Wl4\&.ab'"uKi2j?5JD2;R!%Ii.1[HC=g2Y=BPDJrT`h56l.DmpZl3ZU(q#NMpcp!CcDfIpU%tVsF'#kG=;"i_q'+7j]8:W+>o-]8cKU$"N.g/.RU%oLrUYlR#!<%#2n:/N]OknU/8XIFU#H"8KpBJ]SZf4EX"qo68A[sK;=-c(`Fq<U-Wim7rgK;od>U=+:b5V5&B;9oSg9j6?;OiiU8j(bYP.)gJ,!\%@?@p/4:`BuXP:R+!cWI`UA"Fg$OE8A%e6'/Y"^'9cP%n;V8Ni%3BGs"#oe0.5]AkWC6A\XE=4)nM\J!&8ga*^3Hp<.3QW@S$"i6.%?3#c\`P;0*[nf[Bp9^Z8',kp"!^KP)?6fZG[?G7U@M-;0W0=I[:)gn:>Gn7r$,69g&ZF*n)LM\b90hEu$Qb"o"p\p@A`'4oOW<.c%NWUC#ef-<o1^@_'E`Q#6;:5Z!n<^D1434h',jt-]q!1eH#\.'MZ1ZB=TBlJO!E?\=$MmSO^s.MAVq0B-_",&hpH]fMfT7'G'1AZl%^>r\%)4D'5Vh>%-3)l%r(N\ZDJ^RWH2j<CQW(]4&Fu<p+a,UKb$,7=^>q.VeIl`_iBYkH*9rFZ=f%^O'^,9pj0"dJU>?s%=mViA,%mD8@-4JSB2D0liT#4+2m)>qD9B,?2gM8<VgC2e$ZOLqopEtTg[C$T:RFD2ufCaG,-?nS_mrH9l'!QR6TU,'*u/X#Q^qnu8ab\+cK%0(PVD&UV)C&6pe)Y7'?59:.klFUhmA0%/[GE+o4%'$&OCd,tSo8t$j"RK3ucU;OJelQ3n8(ICS559O8uWseEK?0K?0,h7%q3gZ*T%(#W78J)A5*S=Id)n6=83q6%0>ap(1<qX./^+9I-)Z4ZTHcrj"tZt$oV1=`5=X8VSn/4!p1mpN1=FYT!)Z+)=pnR]R2$;a6#hN/te%Mc8sCj/E)SQiWqZ`pJ@E&ndmOZ7KcQYQbKtMMlfc]rQ3V9]='6B,QuO->%Hlh=h,^*k;+cNXHpE8-^0$hc(:jWtl:,\PS24)!QuP%kEFp('U'@@Y;e(XI%)l-XMqT:OQ<3\2r+)W)gfXn3!']C_tajiq%/3^b&n*3\K4H+P:4sh0WLKlo.LUC<#X46?5'KJ!/BhkEbk5t%FH[7eAK.cW/+"QDCdSaiDYP*&5DP(<7,!+Fn`Dq!KUpABB(Loils$#;<LIZ^QLRkB=K_qm;lp:7(($>K\_;lM>82uY,MTYX6[i_V%7/a_o0DLIjED)R+Ob/qX*'/Un/LPXP/qF[t6GloQG6G7"UOq7F*?tGS_&6S:-5,!a,hP5V!X2me#7Ra<8H$h!?U`u@^`qD42V4;r%"(+T0h[oh!;_j1%_Hj`bqi)_]0_I(.S#r8W>k(H`_^1[aCZnlu@2VJH5Ia<an-U$M^:n.k'u,I]E*0s]jBN&fp'fB^Lm6Sn9_n'h%U^-MX%g[B;Y!Y1SGWKn0na/Z6JJonO&k*U9]Qd>PhX&$b@MEO.<tCJ)Ce-3Y;=<Ja.T@#hgEpVs8<-VHg$V-1N\fiRmE=")QQK8*%Om0qT8/"*EQ7ucnd[,mD;Abo+f2:IqBXfXTM0dcEEW^o!OQIdT#PR+XhN@uBS)4%*&7M>kmoQ@is04TgYO)M00QNI=p7*(NE;hVl%V<i(LQ/?m^&VPF6jOktLHGJsG=hB!q+'YFGSN1\p#;<9O%lkAJh<4\Q<2f6Vn>FViRO-TjQ:V5EWnE#k`PN[@?He/%&rpIh&T\>c%pV`^f/D_AJcl4T,,=.dXR\'-/;_G,4m\Q&m3/]XVAO\hT#4MYS^eZZ_)Hqi5riHNCHs&p;,s>q:M.:[T:$8ttQ%)tSYGgFf9ahi9%1kh^]@EqYUL>Z]5Qfl1XR=Uq$9+?"%W)%GLg5g)>e5clWK>f^iXI00uaa:WAFV<GGP;Bb1CBY_o)F8p:',<d5U46@d23^'XifIM!%D?83un^'h?;s8d%4Z()FD-kp?C1XR`7h9VI^?+Z1quYaOCj8$o_..%/cPRiI>;I+Wbc"kkfU>&KUE0E+[dgnq*n;Ks*7[]L=Oe6T%HY[(FU!bPdUsVZOei2Fs`P<4DR,^kUR':=RNT@T9knFL5D.KejE&aJ[?0mRl(ON7dK]"<]8J&8CI9@JB5.eS^JF<KJ3Z@@Dilo+6%Q7'C+6djX8nj.!k8"@5Nek4(8aDrWT"#5QcgV$SOGCN!qrg$b1=;fDXP=g$JJ<<5F1Ms>pio87Rfn4]eoW@?7;S45K=@>mM[_i=h%(aFkCB#%0/%?siMROdUQI30J/be&lMIpN`O`'+\p0D;pIRV69:?X@TogW4ZS5g%]eGi.p&7PQJ[ZUqs?Bfh>m$WM\8'@;sKhIf91%9A@93AmPSF6YG%d5Q-/`\eIJL[DrZWc\$.E%Y!_5.QGmTf*b=FkP8N.FD7(9TblkjpC1_GiW&Vr5]%k:J-A@$J;[+V;4'.h)d0[q%S9JuDq/qYL94DF6MU_HQ(#sF+<UT1(*Obqh>gp99^Ma7QYW,Y)hacY*3q;09nSbfa`&)C8l"$Vdn[Q/K+"Anh;K1YD-TF3%['Hg]%:"1P.hm&9790X(@lfm'pmX$B1inYLE^UXKbkH*/Ek,1cjS)G+BM4"\%p59Beme;46T_=(Y?U$Fk>qh,(KeJ>i.kR8%s'8B=lX=%k%A29j;78(eEmX<.o--s=c2)H+D]S3Bpa3,AD'BCdH@*LFGN%XrS'/+c;l"Mh.:7-2_h\5k]^'Iu7eUpJiK9tMS(<N:ngHjR!e^5.'%Iljnci<%]J#2,)uo"fZE']pF4P!@dW,4^p-9M?F^<LXml0b2-=MW@sE[#kB/kJBF']Eud\J)M?pj0P<rBN+Q1V^&`e57;u2l'9g.%1!!oG?DE;;1T?H3&qg$h2k.</nuYut4aCKT<*)N:UcrU21MsP>%#DU'KT5D^NC"#Lo<L3>lP/6hqq82:*!q$a9^QV%PYNCE)CSii%8mXc^p\RF/BX9&%aC_Q_>,>mYX7kV.XNED1gR\iAa",E#?kY-W1?K]q(O61AB[\*L<7HVeatBcbe7tsW_G1FYnoR5j,]dd['7"_+%JHmR6-]%\B,@8B&Fj'Ut/\_c&6a?OfKYqI:R;o'Ude=gFe\"hO%;_?G4h8"lQec6SO2S_;*(nXB7K^#R`\)(^2#Lj2SjI6_0c`hQ%XMr:e<kH`8>a#W<`OUmCrF:;@I0s.5I5,,A:>/qo)l`uV]:h]3m"'kLaCDjO-A@O'\jjC:SEus,2ED,G;6UGr@S\J(:fPmO!=]=j%eV=A(3:a4!hVaUkjZ]WbONd2#?Lfd&ZJkJtRbG_`f'q7H-=TW`H)`"Y1C$pO4Mq[&!nX$CCFQ0;7I5>mkLK2IDW&,NI17HN)jO9K%#ql3u\;Y6CTS[+2f-.D/@F$_DW4K!Hn&8c'\[6UY2@>K:rNA=Y9\'pP)1GG!)."#`FNB-[K?#=o=;flPc?3PJ9K;WU4nI!q"6lI*%*17KqR?\6U%Xapcpb\Rq6N8]r-X\o7,-@n)6Dal%f'R[.`k"h?]o5SO@X\f*eDC'?\SV!MW+TE+E[*W5l^0Kf$@9.f&;\U$[(I=^%PI#hI_M#=[Q3A>,Vfn+CSA;V)kGg6MUYO(6ek$;:iXL#7p@YjpLgM&41K>%n_Q$Gd@V$_8M_PndM.')\2tactAKTGbaEk3mlZ@&G%^R%q*Yqg?,^F8N#Jm(1MYBJki\WI2ZXI33Vs$P/r%lUXV;qO@2<`uIjhpr@QoRITl5/&ZKVR.uqX,:$=kMf`ki7]NZ%f[C!SL-`s%]Et&?!+/pkcP[R+pC)hB_+:N9gGuscF8<.I^j-rGVcN=Rn//3""D<YCL<Oeu0eP(a&a"bgHKT341Hor34Yu[G=Bi,,#Y@$;+tDiU%8/9GN/+7ZO@el`)JQ6P]YfuarmRM(#nbN6@mOP)H@i3U1fCBGZ%EkG`6V,-p=Heemm0WOP5qG>TF$Y!V,lrIg2/,P2a()$WKA48L%aQM.uDS@A#3226C$T>[rE.cLiZOfGd(4[QXYQ5AIpq#uX\"t"a<Bu8\(7JD<&'V^oRU,Nu:9IgC-]Wj84PeMe#)qj`_?tH=F,B$3%V!AA`$M.NTS)H^D1sh\uW7_<d,4?nE<o87C?MN#mQrU'8kte+B=SeA&F'qh:^'o*-'=T=5Tj_%MB7=Oe=e-++aYcTP,@,kg4L%[L%p^#,:#]e[#;sE(#$.?c1/EV""Re\PpjY#>JV!YPhV-9jP*TjCQOdGiBmV?+FidU..In00*fW<GY.Z9q9E3\r4Ygs(SV/;(Db\puC%L,@5bBdHs&-@)Y;b0b*Y!W,<*U#dGF\2'>6^(0YY1@YWlTie&Zk?Oa7Z6oS#oV)S+!#>G+T4bq*^8kY./Dq>+NCFn$'*j>LM.bh9%'j@=<HO*:AmBKgnT#%EM?Zc='/^,:M(JtknP3>SMh:q&0+q#p&RS/uc'<LT_YI-muQ^2MJVW-K_rWB.p5J<d;orPJ^UXZEEHJUBu%QB8<dg%C;Q>BjV&F_[;cGcH[Y/N\drUf+`-KLZR#N,aXS=>2fdMBsVKPr4`%b+FK?@CHa:!j"8+O0`JN4Z&_=FDG_j0%O%nA30*+%2)T3+c;(l0,k9r43*Ckrm7u8MR-%:ThSrS*SY/D_(c*hYGYi(rp+_(2rO7TqBGGP4Ag(qUV1:Y;HaWW_(%l@\7'>@3hfoJ&jU>Q$%WgS""A8p!1#>:35$)GX:BND!TLsTZ9PCSV^6FV>A;0JrqY@CE3DTK!ke3SQK3A]lLV)2$TQiu#QWuiA70O_t$N!*6Aj>Sqgm4^Ia%Xh/NTm]*r'E1'l31T:V\"1?6Y[^1Ag<TkEXiaalO"2&>`TTj`OVZNR9O;"$ums59LkkSZKXe>JE=,0==/HL^>H\*FUT4YlZqSEXI%GPd7%blRTTAh`]YIC`iHX8nG?J52F/Qk]Z2""WW[7iepZgd59KKERs8#<U]jE59)IeX:53Pd-96$DF@=QRZWg6YQ!*cE(7*KbL,c%.j;<'m4LRSP1rQ)UnkstZ#?MdduO45bk3C2#6'u=H+jt.Y:]8ORc<[t`mhi4E`^nen0qRlO*@n]bR`Mfk@[@5@dUj!UBD0N_lXrg%#k96:QCeU#O<ukI`'^tannDr`J$AuR<#jJRQ&qtNR7o2Qp<?eAfO)h#A1>@:L!Z'4`;4R/;I'M3!"7"OO(,=n;"<nh`e$sTH[mN5%>:,o0bdHum4lH[`!W`&HUN4T87*s9r>E>i0?8X]XbLF(qX%YX'BA*?ATjtrmB2]>&6uN(kA]hM&rPF1u*=CA!g!B!T$lB`8PN-5"%^7tUsOHHRa4!UfQeIl&2LRT/\E=3_ObD]<g[+Vh5:U$SEE%)7IKsbS!Gg]hRd+,3IJ%]_@F&h0cTP!FU?&d8u41X29.,2?Y+!:qB%-F(I%3Pe[_V/s8V155+"Tq-$2[W*^4]kZhhKZc6tUfaLrq,79ejg0W?"]N48Ulm>$_$2CI<8;F)GCihkUO_1s9+,.-(<a.)+,;`G%@e`K!B]i+<hj?)Z"Ie`C4Mp_?HBYf<(9nf$or7I6ot\sME55WU5%$K('FW&/+C;Pu]hGJ=+GH)(oqk(Q>kH6al3K7$MS*P1mkGsm%$gjV7=^bAnSoj9,J8"D">eTI%L=9YcKmnY?-l\AK,\fRo/d'Z9667ED8XUk2'5ZQSC`ioZ\!]clQjdQ)g??(!:/.a5d[@r'kEIY(%!&IEQ`MW68nK$JP:".aV'9;#Q<8V4DYlfCpJ"E*6O+XVA"@0MTSn.U0VJpF!Z>3d-X/mFd)o=15r/"ag=[G?@;aV'JUP:@hf1*-$%6h/_0A%ROme4r864Ys*2D8QO"j>=QLgCFStW+Q;VLE1t@&B]oT5s_Zn#QOe]q"BljT3aU-R[04=:n<0aA9[qejL:Vg7TU)@*!6n*%$#?);-.$M>/kfA6"7*<SKr!WQh*ED`o?1=^6]U01$G@@gd!Chdg;;dKFnHM2_s4R`:=i1;#06p_)l<Y>AM!`sYPK0&p2k&9'<S/U%\nntC4Wsa'G(H1NC'TD4ec\/0QVr+<^%%pb8>t?AeZQR^*\s'jPNZ+mr"qFfquMESAm>[d^-ioO=KU>Ns%3Rq,(RY0.:&mT.iLCo%QOF^D217!BeIdi&*#.P$B[YB[@.A^ZKqQmXj0+25MHN")VC0ZA_&!+"AK>#O,D\p.ak18?23"Tb"8e@Fp[1*S8?r*NkmY\h@_%LS%?=VQZFd[h(f7\C?f]FYL,TSjneq"$H_sh'MU>p0T,.(WY"sdVU"2*+Lg9u.?ZkQqafGHO!>R!:<[CPoFo!2nRJ/g<LmH/A:A3_b6%\;_EH1f5LAB>$8^rlA%@Q$\.,RL'E75]N:(6)F6Kc37F>ZjpQYisNuJ,-f;X3&\Vn[UL'bP.P/*HefTBZ2kpb+$u,_fNgXl3\ug_%Hc'bG2*_uN;W<@V4%Z.)]+\hVYEO\&os`mIc%XOG\*S`1(!gnVKM!"1j3!4,O;6aYT!Ar,%RSAgiY?sKFHN1:Sfu:eSDqaf9A4].%:$qeB9N+?V`'IVkB2&9pU_BiialV8fMB)B#iG38@Ro'lOJYf3A*cEUi>big3J:X^)8>'afOcW]eR8BsT!V?u%flB0NrgX[(-6Ae?%<of][\u#Sk@6[,*<OJRBQ@Vb)?*?sjI=-XYq@3:-W>OAFJoWbam]'+/,S=$(2CQll9VHni3T=%H%8;Ju2I;#:H4,8po,9Fc,k<YS%<F?*#G_,X:]rM1>6b)5.A:ciV8P2?T#e`a(,9K@e*H,Y*00]+?HLXFe;D!IV2+N&Hef_l"Ann>[%9&P]j9"f@7@?op1[:&LW7NtY%&,u3YA_Bcag$ECF`nj5kbC,'J#^&JiAVlS+P'@+B*"A!bedmq<2>21DQ0WWPKERV6Zaf8?jF47]3d%JumDB%jbci-*7B/?--7m7;%a1#$_#4OnDR6G;lRj)/qE^-La&+_ShbYX*Aj=P7)OR)_m^8\a+oE(12-pmm;j5gU.01*,go_5/gE)UA+i`WFW!d>E56qm/=3tGLm%"T\rE>;W#JB8m*Hop>t8@"U%GgnZ0JX^n@6=\k,GT""HF-:SYCboIW2mUrE^>)GN2RSC&@0GAdsWIo5QW(P*pn=SQ)l:7Xu;U+uB%UA2+4;AFaFM-#'VB=NB5\/*2MIQiFu5PXuk0_HG99R$qca.`lB`4;>+!puH_TF6RE'o5oWP<:b;ksiTT\(Dc(M"=DR-0fbd=SGJ3%TE;p,8?:J;LcnKt2/&KLPcF5'5Y,Q'h]IEO4=uF>f,WfZ.c%qT,Po`Fi'0qeq"lD]B7Z&:9d*6C<D<ti&J+=34s^)Tat)Ts<hToR%f_'pQEr^:5OVDXTIDn<09i.aq(#JBHJ]H+(Wd1aD\%&_/aInl@j!:)n:KNkJeIVAhEr`.,PC>&':6cT.Xj3!3Y"o-i3L?cL'ossm%e!F=&&<\$_mju.TXLdqXcI3G?Gd7(SM@$Q:@^$T-'f=:3!QNV3,jMbk%DpuX+3_=iK@SG$K)'^VHb?Ef4fhY7!ZS)B*5\,u^58r9%[9>X_is6mqrr,1O,m^8-YDH@cPrKq"C%Q2)S`[=%JdGL"^ig^2_fM9?7"76go)_ML@Z`4q2:FhX.f<[CMa\.K:JQMG/f@G+X%*7@%*oM`3(AKW"iNI8eCaBZN]:l,6^,(Q1Fl7@8!jH%*WX=0K"tEockeRaD74%NE3JbHU)^+#-b!99gnCZ]Xq#VnuoGG/Y;6G/lg3"&L%@rTIhJoijD-873gBJXP9(bf(,lrtbBD1F`SBB.iPN=DV.)rPS"E&:1FS(f8e@ll.`K\I*W8TH0r#oWM:4AUB(DgBCKmC\Of#g<M/%FJ7I1B\9-`oR7J:[LG/_<Ri;t`cS`]c?=1[$4bb:_:6bYTf.<mO.;IS-eSg.#%mrc0Pks?FtgcGW7NB40Mg3$1f+ZcF3BR$<lb<l%oKH]XnO2b+Ri-+pgQFN&Q0*]TTN29MNo<apKj!ME.ABp.!b@:N[Q71Z'(Zsm3!JP-,L_rq##<oODM>!]alhX60cC=!N:grj6cO+)%`7,]rW%pXY%h]=R%A,6h+e[F&$[-c#N1_?"1E'2CdB8X"#X)q@d4;tb.;KY'P^U*"plDI^Y84q;81:MbY"TaLpi=<bl%imfUGVJh%5\,ZT/FntiBsr1nftpsaJCBSOPV$Jt"XW_.aEta6=@8.'b<''lN1pb]nIViU"[7/9e-m5uA>?<[Kh;*O(-c4e`u/1rT3d/21uj/g%m%_>9V!Mkp8u3+^2K`EQg*GF)9c[bb(2Ak#V>WQTOK^)P(6#?*]^?.`^r.B85e+)"AL%f[oa&_VbCJFD,2@E-QS%38G2XTQTr_24%ntD)FZ4_-E.g;9KJ#hU`1'\0Z;l]J/0s*!*F*spP.HP7GgQZt?3Ie4#p"*bdMB,n(_[9ueF8dTpHD2+._G&XPFJsLr@M;YfKWAdh%/;+18le:(\T_QJ1Nmt%5i7]e.%$ZFD,D7:hj$WNN0d;8pjW@9a1?+.UiWAc-Xmd&ZOjlGH[,*#I)trZrUl@fcCop#ogWI`7S`PLT%p[MqE!->N;W3kg0p`R#POe/r:8%No$/1+T+Y5Rak?a33DI4.ZkR1;O+"dr)So/IgPalDB-2D`Bb_u&>%7GX[[b@JgTT?(`unJFs7%>W<eO"gfgs==GYSp:\ZI&C1ZJNm8S#haEcu#cm_s[UWMU#]N5%RE84qe[UIo%%AM`kD..+[h*3&1=iJ$=VETQCr.bYaX2^2kOZt3%DfRnKJCL\5+ToJk7[8jF6/&]bdY;8CZK;;dO?$%Cl@<">I)FSBE)4#.P&&kKKsWq/do;ARZ5'Ps/'`eQAbr5DQa/BH-\0NOfp&LQ%B^n?VM0bsgO/<+>)>/%RMhKcM0U&U>-4O/],r'\d>nq+)Z$_JbNZe/^GbNjZU0V1oT&gOq2mD/:f"_:nJ+BS3X=PJA^m)ddh]hX"%DXi1Cg@@l8[eI\&;#8g@i$*BrY<Om00;W;m76YjY"B`91/iJ(1!;b?VQ\>W2N.cWj_CHSOYh5%DD"2hOF^sZD3-tcgEbd'XE1sc<%9<ZGOMlGum-Bm$W:udD3K/8XAU1`5>4g$%GHR0o^mt_EI/qhp`Qegnooqpn&`m^%0gQiLor'lTg3_Mbd.=6mUk[7;3ngDCS/(VY9%pZ+`&"WBB6i>K&1r5EM&[sbDR1KNQ!Q=+n!#lY5K7POoAIjTj+hUc0tdd'mMEtD<>3t(!U'-;GN\$Tk,ZSEOiqIJ6j[&B"KFqK&;%Z5P\4X2j'>4=2DfPtA\<S(i36INQ%L]1tO=hI7+^&n[XfS$n<##/W<1'$&i^i@g`j`;sjirB0tYD%2*@^qA72NCVVGk$(TL/b)o1%H^m%43(:E\!EtaOSdX\?:Kkc7MP,jZJq$q_WGeIGTQIfW$NG:-\a;qqOdH?C0-n_-R$"KHYMR6Km]"(GMDT<N#<WM86E`d[kHs8E%O9'I2S:WDh8[G98Tdln32L)q)V'f3QYX^TJ%u/ilNnt;Z#@+5*8W.[JjU<6&-kif&Pj2#]_kJfk*87#!FgYR+9UsDipiD."3gLW"%L.&Z,iLSs=+m:u/1&^tGG*83+V1[+fclp$P)sQgJ'CW=A+sO=;iD:DTkQ['/WVmSgn=HXW+>.n^Mm`f+b.Z5[Hg3q\><*/5.5Hbc%\j<Ht0[mnd]S7uL5S9P%Pt;uX=s#PIbbkZBVVsCn_O]oGI6Tk99d2/r7-21CFP<=KTTYSW0Yu-H)+1R(H;j=Wk-tCPnjnuqi0iYr%R]0PCM@;=GhM'-t<5kC[brhR;UF>>@5=]pl$`ap3Bn9Gg5qOW*BU3ghDZKAa(^8S]9J-1!F:7L]b@?ep@JLO7@elZd<V"R#&jcK>%`3XjH\!EOM2b/dqEARh-rVhZq8BEc?0e#+/nM"'I=*tGaGok*%L,Tp8if";t0gItFI3d6-0>sL<?>c\Fht7adN>Of:EKM1/#4iI>%MPU#j.Ron!D_^^`&o*Ed"Sj4<B-O2)pg:$.,R+W_AnJ&i4",7h3eKo$atfLkX<[%7dqiKHT7&&aZJ3I>CKlo5epC-6LXU#9Pn#.n%kIp/beYE&%"1Rp^I[j+!WXcO:C(+jt,Ji&d;9a?sjkmLn<3.LCc+57Xe<Ps^dTMiOFX>VkS%pRE<K#GGU`RZ!YGQ:3139<92F.^a%7[?@]b0@37J$$UA8H4t!A2XFKW<lRnHL'5($13/?3^eEZc2D=>r]s?Ief5]=r?FdPDhOCCQ>@7LWU=L!UA/DM6rfP0)=bk*qagXJ%Z1RkIp?/]W7O1'_eX&0HL8-*iY^M/ok,;`06eQ+D715<]P_5o'LMhdsn_31dK\$])8Yi'#=A]0<X2QT7"o%i@_oBBFC*7/S"3I6"%S:Hi)S)4<dH>mJU8F\*M)^.a0_Cgkk`=9AJ3!OLRM2OY)=+^+df:$^"0;_EIDAOM\rW]M<1=8ZlW<RZBOQ))i@iY,s1kmT@YAqk$%0it=9Eq7M&GAFre_,9baiYg]UNCmO=UTo]Q9o36qm#j?L1Mm%p,=ac/mQX(+'6SisL1E=eG0NkVpd)Hg]7i-Hm;r&[Nf4njk7P:X%iSs7s\5`U&7K$/FJV;R!.=7W5^nEh6%HfVPcCEkmd.3]W"8nm-^_B^cKU]]S^qfIMWe@?@Zt-;V32oiJR:=,K@J"Mo0,u<qF`Jh5%^Z'#s(X.$SiT%8IeaOHum(!Qmp]KQPT05g>V&(ujd^C?:.X^^!lNLOM-<=&W,#<6n7/3>S\.t8gD4De?HF,On+=U9]V3BD`X&@f3%&M]THQL-khe(@dG]^T2)U0Bn6nTH1!9Tdu<Hal_ipph1K`4fbnn0D$k^YImH;?i:/rARLJaXJo4->_-ZlK'I""okPH4lb7qO6:MR%XpJlWBm]^kC!^ARb0@PX)_Ma-VL@?C74*'6]_t.`fT*iGH$[NGDcc4@`m/[\!9q.8(#A_eeZ68Ym2ppcYuRXr]B>k-\HDD$N.XRN%!8uo<#,pZ_],tj^`@c0NHF:B%V\-I4oi+('?gUe(J*("WLI4+H*AOEj=sK?d/ROh!I.K<W;f&22$"M;p[!U$P*/g$LNs3cJX5`;)%16@rFX6,<7LC*dXglGUAg:0lD:qd)_7t#V[_g?Un_!.Gn;4se*`>?L6TG(B?7V,Wgf\F7Ts7tHkB:,cK.9PfCnJB/b%<$JbISrje%TZLF;o=:"4!OLjA3g<g0L"K:UWlS\B=fuf-hg+`pP>@]?DP#u'f'fJ,Z]11Qd%3';m4)J[OnUSedM`QojeBn_>9e@;)AnSrntlY<%Li5clIo@,YQdnfQMtuetXbb.*IA'.XWkMJApJN!QIYlcrSRRZRpI0ih_At.)&6!+X>:)g-B!uj)EbS8"QLg1:6l&/B+\[:TP`8Dl%C:5@NUZWCIh8j3u?lNb:89)3.!f_`0<>Ntu0nlMZ.G_*`_J:4(<2$QM@Pf2eN:S5#d-7M7J(?>c/QY9/;+0LqPtVH#;TQM5'P:lk%i_`TI1t'*Qm2B3Z[u:]A<0S_1Md'bF)b:G%qVT/8@QtW:b3d8_Hd`'tP1pN^!bmd8H19SEkMW.e%R&r6/"3(_'@9CmbE4?b-+2f'%O7F6NG]nujc[O"T$<HsL1Vb'',gj@!iT*,R>Of'=Ae*ptK-NkkHTEo6<Ea08/Letl,9]g^X)Ud8[n[g`XZ@ND:Q6>)/p"jEj`Xj/%&3i$E]lN$ZoO@G]b4oHuWi'l-7d4$Q%.0m%M,lO2GV^9)3VAMWm4:++Nc\fF.jTUTK\;Dd'e>f20"W$@P1Ad4d.VN>3eYdQK&J1H%gG4gG&)e?Urk=_L8PA#@.*=/abQHEX<4u'jf75L7gXMgC9Ci9@i4a"^[Ab^u_'KR%oaGQ!%,@;5G@QP??;CeZ#Gq*j23fn6BZMX&%>FFP+[SpdMMNgs?7;bhb)EFk,;TW)+:FZR\F[5.I%69SF=@toXWDSA5:;4deklB9nl>1\:D*08j,#&U]m);#UACm:E:VX=4h(`Jg%gYMaKdPCOCZJ%ZX`(A5Kbr0^8j`M-k:GtZ.VpFNq:6p_,,*5K3DJT3fO\R=;_Ki;8E\'B[gY+JW<V=>?B"9p$8;EDb2gST-B2O-G%i9c+?3M7Y[)56,fOe_RbjgQ9e<pQc!,.Io4=nl&*hRWJ9b5NCdRQs&oXU-K@GH9-nomCt^(@@MmAX'\7;<D[,\;o[("[2o"#e_ce%HbV!<TsQgN%pYRRFAXG,$AN&$29uri%0DMq4$01C7;)s@Ai8LLQC)\=-.ojQOQ'qHJa,T"(f,Z7^H[@^lF`WT@r7?o/X40M''etT%^6=uDZ,SGSCK('F/Mf3<:)T6XBIeh!cA_H)=<]kk&MR=,<&==S+H00BNrEP'e8C2]G6Y8;SM>8:W:\35f:g&H:Ctn1ldQhn+DQiT%i$bXFZu7\'WEP2n^<fbs=6\u96,6JqB#:$/9/+g-I"piNe7S#$1"Q^A_".^iKIH4OU*E(cV%/Vg%5]BGg7.54MrMe^/cL3*"Hnjd%iDWj:&9iAbIC9fkY.5S=U,'mPED93Y:fXgL31nbZ'XM^$BjbA#Y"2Xc6]ejL7oLV*$D-XOMc+bIcfpMs&Sa\`Ttk&V;=T+0?YBUf%P33NHqn2XfFQ(QAA*qUiaZ&UG+p^sg:;SncJTQdBk=dWY9H,n?OVo56<5PmFDA?:.%5amc=/*$t!4t8\DN.c4C$trYKm)k5ao#64%^`$kfCm+DQ5-erD8*Ud6<Y7Y+:g)map(^E!Hgcd)d0&%?)F&Mr<E,NLj;A>i'lLLZI=(p@3RanK4"kJ?',Pr`glDabe)F*#C;UAD%"2]SLkVJ;m2^`aDN0e3=Z95"!fPQ(Q?1I[[6#Ns0qM`ep(:>.5C=WHsK0MDY!iScBYgERI.eN</,M8?)BP+!9=omq(2-]f8PeXor%?F,-;Rpra'%^p!N$"fk4'>^l(-,95W&Xg+$c]Ceq_U0gnrSPJR-2<D1RWDT/!K]2aE,";OhXZqcYd"Hs[fF@a?NQIXha]'H%4*h4%%?3-Sm-3'q8Vdu?Vu%2@J'X?7jp4mVUqQs$q0`JP+Alr!$,/0\5[EN2o^%K4gl_B:,"+Tc%15$^F"f='T?k]"[V@msXB4IuI8S4'%FlalH\>iBpKOkfSI\+t)QUb"#H>j9Q9GZlFFZ;n@<S`"pc"Se7m1T_K_tK5ER(ds'&!<K+iraI`3(FA?$4;6f#g>2M(sc]jDT(#s%ZW^I^cF73'NY.O%k)&QSWa_8K_/+ZD_@aH:@g9T;;3u9p"TU'jPA6DLW5mAE#"GB6Sa8dnI@7'AZilX#=QGe]+t\89W&YVn-&?2h%;Zjl]5^U?m)IS#!aNrW5Xg1+p>YqUgrXgeicV%Sq*NU'\K!lrXr1qusc@>-o\9EYO(pVheT?hA(JmhAL_u\aQXM<eP35STq,3a/<%NiQYMnH+//mQ,;9<-@J)Qh@3hnC[-k%kMVK%%T]+HYc<T)pL^S;#Q'f*@6%:_2uF)aP-C$3Ybn;UFWV<jlb0t*Yj2?I+hp?%fs9k%A7EF4oBBHdTA_YpN+uh,fl'`X)--Z!^`#c0naYD:cTi70hAlNh&@-88\kT`%$FB0jp<#sO_&c4AYh#b,H2L\[QPmN=`uYNYfWpmV%>cCa8oL3bR5Kc2.fI'^-1?DqEMFgqu8'MH),l9J)i]nCXp4+SQ=0l.Yn1/+Q8#<jcghPF(-rr(]:R3l[/G7Gphs&i_bpIbQ#`Y%t%bE#lHQ#Q&?&u+s=fBVmr08f"5oHt'B1eD*\Ip;8SpM]io;-Y%T\*;s`^h^-N'DB>l]?G^Q$%[#8l^0@KZa-S;DdDJs>3TEn^V$4C%nM`B3-q9/i6s4emg_gc+'bh\qg%P/;bpGA@/V+Rt68dX^n.@h<[oq7?8KCu?jOdELb&l9Nn2?ac^K?_+O'H[V/?*E#6o]c8m(6*>%Q3:$@2dPIQ#F6O,I]U"U=:*iUV]dH:P@TG1L;d+o5/e\D,[bX9lepT-"4cMM,UF*^]@FQ9<W;kNIo=M5,D3!Y'h&@b:d40U?TP&*%Q[j_2Vp(K.i-si!A>$Vd;YkFIpm2',nAYE("$'c[/bo,:r,\Sra9^V*W8dTHpn\$^`A8tj)Zf_H_BlQu]h@d)2BU70Vgd.E<Afgk%ILU+l$<Oq3#,JBdOUtCk(#VeW"5V_^!dFcp>ZO4k3JIV`nFS^cK$ts;<%e9OQSp[h&XY$Ookooddf^WNFi?u9305[2_u0,:&\YMc%5bF=JTmR=ZYo7JDZR;#uKi(UfceVYpRQ=gj6kEiWfqG5&lG%O.T#_D"*<._353+0*EefsJ</4Bgr8aeI2?P`3VJcc5H#*07/`Y<p%M!(c;96m,E]&fG```VH+Hqs!o-],l1r-8kba"-ceaf184l)BNSBD4$c:X2)b+F;sDXLNG4C1?('[?.o'K%Jk(%;-m,@im-ukh/>K%O'(Xk,GeKm@#5!ncn<PXWnW5nK/G#*`B\2+K[^m/b.i(_#B\<A^<O2b\6lb0Xf`-*kEb9q<\sdh4VNH[;NtiaW4bFIf5I"d8ej@a%qJ5R0)Gg+AHa_h76E;\G!sT1a2Dj?.UVB?Vk#ml(!2(Dd'4@)//cTu8.B))b.FF049aNKc&?a8L.T8gfL9HjiVhaX!\q5dQ?ECS:%8pQo&KBOm-m-ip#K@hp.>eL),^K"KI?ai@&4:?IkQ<q+d/m_bW(_ADSF<5%ub..QA_?/:t$%H7SVGl+br&\$B[]WX3oBS`@7lc7d%_*E.F2ZQB%(Zq"$<O^%LB3Pn:O!DFG>jMqkL^WD(&5p,*.)K"XejkE.I]S?NF2)lSR/u%jm4KYAT)mSGXb,U,M)-l-%d`SPWjm%=%UTi(u79c;EdD4=))S;Iak\[_<gC0c?\0)c%0hd^#mc9+,:1Wp<1[NhG]l>Q+FUCh5.([kq%9.CnO\ZXg-C*NP1Ru&3.84fj;laZ+%cQF%MZbCgVb`&JRX]kEn3uUXY]XK$:"Qc;mS3(_oHP]sWia7n3-.Ko:)))6nr:3;fma@4i-:-_`6gMC=!u3mMmRpfHc6<[*-..)r%@)5-;1?/aL12pc/;#@fE)js_SW4#Ef-WqZ_+7D_(;s:Jt1uN'RRFI!<iEIs1cK*HuTV:1&&td"1BtgnaP%=9dSW)EOX!Q_/.l*KV%XT>$@M3cYBe#*:AWD6^1.*S5,0Og;N:?P7j8Bqbdm6\=tcjGI'V3":)RE2>NfGkf3JEV4=QcYS03hV]A2(ACac!2G()K&V(;mUVe%\TM3,B@*[43kI^74V-_F$U'9\^[qk'1gk*#/+/JH@LcGYV.++I1U@;gCrUWJ\$X*oCeft:Bu%BLH+XD?#:A5\k[mWJFp>Z7#J>V1%X(&t3;@3&:R6d-d@)IOpdtJ6)Xd_>RB?-k*L?Net4e+ji`5DC.>Z`PFeV+t<4&8(0Tc2!af"2(d\<0FboAFr&/#,cDqon`c"Ip:?%hmW>9!L#4iQVB.Gq86U(hc0=4)se*i:":'7Y4o5tar2fGj0N?t*(XLb-?Z_CNd+9\%GK67*j%3h')W:?kJ-ogs7IK5lL03#_r(EZ%^].+0otUJ!5OY=r@h<[mZE=0#[t".es20?b]>+C#hu:lMp^dE(f<9]%qN([<+9%IPqJUl\TCrfqQi0.Ur=Wt^_oT1NO-IQUb>*m(%G3kW*<5p6Oieer[Va`kbZ`@u@3nO&/pPgh\f;j`0HV9"GCirQCT=u<ob;8*D^"T_aI7KcN^WN2P,e)52ita?m#RbjM"X6E![>G0I%-"4OSBWlT1m<.bnJ'Memq%.pD=X7BA<?)t+dTgR^d#F%*3V`@o2T9)K:9XZr&j\7nc0aCID2I:Wp[-e4B]5F="F5_8D#/59A8$;P%WkYF7+.mk'CZ>5;B?%48M&^k.h<Rf=D.9]JdD9h3O,L^Frq![_DscKQPE%G@mpNu%]RF.Xqjl+&Dd;29]9)d4f?7*KL\LE6Fe<WU%4>l\h1Dl#&oL4@]#03JRhOs:upq2HE%c/0#,?1Q1"IVF5^Z([PXtl@&En#-[Gft+@.jl15=\bYrH**Z4Lp_cVmUEs7Jo9?05J4fg%Cob8"blRr#9X[Y)=M,!X8Sc9NS5t'CCQ+EkklL7pW?4@-i_s1nn@O^]&TXLp5=/dj-WYP]B8DUo`Zi0Hc-?(:aER#STC9cMMY!d+%0T/tEdmc<H3usU:Kq4cMiP0TARjLXt+Y5.GQeg',CV_lXe%k.-CD2I`C>Xb-8;?GYADac0kjp@cC_V@r4D)m:TmTaCML#>_*#CZi%c#k-LY-VX8If+F*T>&j:?%ajOqo1qJE/%Z,ap_q>l-,a6m95W>OW;(pM!=YKQ5WbAh]hmoW<_<>3d[)f*ET%)I(_X7.Sr#GCia+m%pBOt%mIeY^La!D6d8&\jO;dZGKC9^!XJ!/de*Bu"]=`cB[%=pLiNp1#*d!Hlg`!sni:8Z0g3.Y9hL"aOCM*q_F.@^KMrHVV\K@G&%Z/]JHhAUYaAg?3CkO`.6qoc=cQIG.X8)a7)F`%cZLX;]T,eX,eH+&H6_:N&jf#s(C7<(_m$@ds]EIC\HgT"?<:)SRpEBar5r`n)r%UF3.F`FjJ$i6<f#^DV`IHHF(5$`u1mdll7FmbYq[.34CsdX>rq5mdRWjiK-t3[,ooR=sdl-j?G(/p:n<Q`W!caeK2Ol#K7>[^NpQ%Md[>0qD18d_h8fDh(F01IEJXe'eV$5;nW9YJa*\mFZ6?/l^[N9DSFCd+DA(aNPPX+X(QtK;f5bq9%UfTNo&;c0`o62j%J%EPmT\4%/&T8,N;=5p6`*"U"WVF_5.</NY#nO>4I;6T?5F*phJf0$h`YkOn+U]bK3LIbJ&NQ_Y1e?7pN+J_jUi8M1QQ\qcB:QL^U3l.=RVaL%iiROm]d5FA5qS,Rd*^lX74DKokmHU97.6-7V6YY5lcZ3TLeI#ONue"Ej8$YE]J4KJ`<h<A,7Mc7eU(IZ3U-IZOUkf=hen?gRgh(n%Np*_MItZOg/B2Ck:1_jL^&NKZqYT]Ug/3':_u[Lu<OS8D$KkkQU#cA$!_?>'$_:]L;u_^SBE+9:j"Bb[/E,L[[ddQE,l3jC2(:S#%%kC.WSQa;.clmLu"986Rg\0'r*:VZGJijf%JADW/J-;h9NhD(lqD,:sHO1-8$fhS`R*a8(L;G:d[CY<5D]:Xpkjlu"@g0[XUq!-,%nH;!^N;#4)7Q\`8NRk(Mg1dPZGoZ_-kE!C*n2Ysf][8j!RC?,5kMDE0%B6Rj#[IR:TA'7`an(*e=tGjKAM,%OO)agF\NF4dC3Iup%E7hM5?0K\D@rrf/@&pOmW9#eu,d1^lp$;Lp4Nt1#ob7c,0b;0,p8IFtH2+fi?En4^?&PBa(O@Or0!peo_)lZ_qK'[U7,JuPDq>[5%<'asY:ab)/<AT>\);<%CBu2LrH=I4:VSPAV%Rdc64Y*!2Ge"%t0UJV=c,6%^%I^d_c+R7&oYV/Ich_[3hW/@c.lR=GqLFRmH-rc)%49[F"hl_C(&.P#UfbL@4(N'(lek4UP\8_cplHY*Yba<rj8a<oE7oZS5[6C+0'3`i37Ql+8P)1F7G3W*pNQ*?XeW<#S'm4;G\5_@[%;%\ST%KAGlGD?4T$(p:qRM8l1ZE3D)WC+FBolo`YWYHe]kjS(4nF-dT(iTo$K/,gKK9I.>8*=%I.`8C,J@RhER+jE70TFUq_93se%`\f<j`.d2nEj6ht\[Yb9)h\]NFF8GgFB6DC`j+cCo>%\66EJ$%2)dA=XZSYN!T,?<YT^O]%347D/aQSU?kbga?ESfOkh+#fp)-#L%c#!0X$T:a=*)h9TC*+-6RP\VFN=Hk?N'*N\9/RjI0CK5kP'52ep;`.-n6>^R^E\]UcFnE[>bFg[_Lr*GKghH5aVSDAV1ZC)+mEW?%eA[m'1@*b<1Bc*c_dq86Q>D6-*gI\l^4kt<)!-REGlm(i0,T@i#[LK9R?$C$lUs\GLD)5ghp.kIqcm86#"sPLR+&]X%iP[S08o^m%Glu'dKr:IQXRtO1ch$!_8)&WYbiFPpr:t\(FFiRm_t1gp+K8fiLi5-8S]UucnQjXK*b>2f"t#;3?1DK$T7I'P(M.:<C@5UeTaLD;%;f2B\8oF09K7/$n]If(d;r(B0lh'S<q[NJ)i7i.<Wr7,.C(F':+4u$%?[H252Mo-?@ubt/%tfklQ:$"$Bg<F..OMN%;pVYqE(t!e%6ZhWV#BmTaS.%`ja4ZusiS>T9Yk"In4=jA@7A--mJgbRe)MdY@5)/\%AJltOpRcLm?jK8@aWLUm7imol?K#J[:'+4b?fl%;*.r[t%\kdb=Y"[;gZ3PbDP>F?^U[j=ai$c&e#!9#t3nD:(^mDGF\nT*:FIn,K9?2sPn?QQDqrLT%Qfp^P*+hGffF*=bBeIX%akVlKmk_20%DpRZF8^B"IS$:<O7>Fet#"dF;(KlO,HV-kN0c^;<Z7iPu>ukHYr7'cqJ"uNn@M$!%8]Kdn$pXh0Np[4#7Q1ZEVF/\h:g1Fi(%?0]%ipC28%C<^DecrF]$o<7O_E'G%X=1Vs4M>,7F5`Wc'fFDj%#>jJPZ2e?q"(o/a<G<uKYH2G3$slQZ-8Q.e%a\#Ki+,jo@6UDd`\Lg%V*=>=pI@2GCd&<D_1/:tYsoVffonTV@@)[Bh/>QqD6`+r!q>a?-6A)ZFGD7Se_037\?oJIT_&\,ka_JqUK^sYQ9Ot^>7^[-q\(XY%f5^d5SfE%9@ip+R0.c^<;$d@fnu^?i*qULA[bEcMoUW["')t&t-JY%,E2pElU@se%U?'7!odqlgOKhpCX!5XCT;ONcY`mUidUD2S%<[ruj?(@DN'I:Q-O9Wg,=N<n[-&4qL50:6.G.lU0'8KG,GiP=WD($3`cFagqd`[RaI61;+r$l5HlK-"E?9jA?\iH:p:34u26'B4m%Mp`fI(,FuK:nf_Sl[Ifb.[(M(72'U7?6_GI\R(]Z(nI!O]DQh<IE2#I:0VZ]+oebN?a>6Rd!9<6EM:$3q)\1LYL_hf(&+M4:Vu./%HR/BDQhQq?3uiUN]kf1]-LTo?"K[-o/E;fWY&p>7((OZ*G&el-*S]<6;p1<KXEHC_S$"Q/OgDka5iVBN%i?r#KRDp$r?[)7Pt2f@%dfHPYqCi0RD#^<`1!j2g1l+-_Nk7(mXL[rEm_C#]QhfCiQteQ'(?I6(Yrp(9=W6QVA:fAh,;&fP37s0["K0_iE-jF(/nZ54Q8GRK%RVqH93&gBcj?j9H\i]i\m'eW2nL'h5d/_,UF7?XMA<U`CeJTaZX`^GjMQ=j/5hbn/*8q^Qrs)i[Z7)^T9RONYi/iEEUcg4CjjM'd%1"uEBf_j_rO:JK#io&3Zj6fp@.'`Fn6gu#9Fm/R8X+*[1m9".=:%_d1s.YBr@0F^IAX#=J0BE[VD&cX.3t:@ko18Q;Ug1XikQ*gf%p\,hYDq[Y.4Ii;3gujVAe]4l.Fib=R4S0\Er9Hef#uU2d3"I[BI;+MBY8[AdHPbdlHs;V8mA1&;OJtfU7fE.oMfTTl89c'NYqaNF%,28QBBq=GJ]O+GRrhTkW\?cZnb'QmY)tYsm3[\tp'2/,^9>@P]L=+,G36q(`W$X0E5aaKr4lFOmr$?kB5P>%\:YgqGTi3=;L>pOK%fF)@WDiMCAZ]RK5N4(M<ahI_"3P+S+X*p6$(/G,Zd`X0(qJBeSl>Vg@Hgm$\F1.o?UJlHiM^@A=2:p-EKpcJX(DH*i&8@f\SA"RQ%&(3^(@N:KTk]%TUpXec>CV]2ka>^!V)\ABcdU1YJH*ir5.AtkpUc9UcEu!RNq,YrmD+1XhD&h_hmrH<@;8o);(aQgNJSK/0=ZL[e%"ils,Ed,/D:2bg?msj4DR$!tQAQY8aqaIcBk$;eIK6*WD<^-:>G%"AtQ+8HS7a&ih6,-]WG`s8OLBdfGL*'0h1+r"&^-$+A4aUWt%[DmU'B"?+p]:.?p>KcQS)I)%m1;$Du2s%<t_A,^rCjbT6dNa0l=]qZtdRFWopBV5=IZh?UPOt^(3_@Uk:h+*dS!lZUBu/i@S>Es[%bLnDDa$%n#IfSTsV\ajL)f>OsEDnIL/]#&:SSDi5-KMg$4MoJ!oaPV<#&/(#k>=CJ+mJ0i%MNU;iB=5``h[Pu?f&hcF`BTW"W2Da%\'Jn#^2\S]?u#Fb?#O?\$SBC6s75hAWi3-7k6>)j.=%L0l\TKHcf_M3&G%'egFeQC(WF[/HV#ThNK2)qg#Zjg#sFo(P]jg[Vqi-q%C$.9pZq@#135i/fjtd-l9]'Wq=cZK!1#jK?kb@UU/76!,8hb:IST'reRZWtX;PhqH]^F[:iGc:Pq:Gdlkq[hk<g;pLEh9]Z%34)2%`qc+#>hen8Aa0,&Yc$_,;/pNkZIm]\J<<>8h5@DF?PUq5ZE@Xd_35@U,>>/WW,h1p3eNbp\,8;<or"U5,PuMIGuAk<)-B`<EZ4u2%)f=IVC1VToMIk1=;$4M'JsOTb/;H2)E="TCa,`BTY&CBag5K,(HrYYnS.dO@_m-slppJ,b[D!%3N$B7^#?He>bPL#0mDo4gO0F3f%F[#!;b/i;7Z#5J8<Bp&0ne%OTIQf^]NE1"c]DBW&fsQ7ZCBn4\?7^\RC?->;Qt'q"bLkjWJ*]O[?]S:,KoX']<*=<C:_\EYGl=(P%rVCRG-Ysge)n5hG&\_T#=@l`NGIiflFNumQG5qCXfB9YA?IhW5_?,V:`MtsPg2V\7&+.'dn*@;kX``mZUX+^lJ*PljaH`At-o%&F%`/AlYoO"%`HK1h49%LRtlrt-f>93Cd3@-)s:l'CGr;%@jMCk0jcI_<qk]oo&<LCWa3-=m,/RFb6YN)hXBFOrYl86hR<r;F&\97.B%ccI/24n\Us5Q%O9c<n<uHR"#2omaCmeTT@b?PLg<e^pAO:1Kje)B/5(a<+mX)r@OC21ajrUn"<_"oTXZ[df-sBo2aq)#ms-&ps&H%YKn;;>k9Sf"6(95P'!kl(W0"!YL227]+O]S%q\>7ZI<B0C\A]_QAo*9C!\@8!n!-dc0T,3.%9CDJ.M'73$ZtlA%UWccPL:&7]p.`%hHpt8%];"8OnSpC_N7l^'/>;t$_\qK]<JH@]]JWl>J_%O10WFDpp<IVTRl=;@tg#:aP&48.SY07hQ-2JgY+&\.hW0sMG`a',MTLa%o6#?CWoZtON:18!:r8jfeAGSUFY2fC2&pmGZsgU+,Eejj#[g>T#asO^nGE,5c4TMLG]2>>E*sFi+nuKk^.1f",KBTYBXrsn"Z6@4%Wd4+3:jE3NX*:Y*Z.U:cC\0#N47!3$.'M]FmW>bQ2.jWGDGC'DKJaQhb-;0$!98-1?G;+$F?"8u>4j'?T7L&)qD`V@"+Blc"u\f4%5>C)q/^H6>m_9BbGPd^.nBPUE+WH4BgHO.Q>b>4,;FO,@Y>STI/4.7LM)XF-j6uI#]6gTu^K=#4iga^i'JIpb&3K+=>Rjpc,3umm%W%9sF'>JXXb)[VU4,ssmkjdg[GB)sOr6T'D!>(F@L2uf0h>JV1K+#_#-u?jgQQHG$?I9['s-dHqduO"Uj"/>5)d>!,mc)s=Y>)B=%PAM4C#.mpYkG]ne39Q,(Se.+V2!*1?ZDCAr#_$/oZ'iYiYJ+nHeg4Xf9_PK5s1`Pk$K)Cb]0jqd"%nOoMk\b[=0m]n`"[&"&L292%S1!fY%3/Xh;7![a>ELV?eS>E(FktmDO56.$MfkX`CYT+rL/$=,G',uLP@rF+&'-c669p;&$I<m^4g"Qs=XOhu>6Z4^M'9puXaXnl%8U&<G!*=q7RQ.R3e1::@s*lc0SgOa1W2>ER6T]T7]:@qFdrW,YYr/BZQ.nE4PN)hPllS?sIGR8tja=<Z%YR%dJS]7d`Y=^]f5;aJ%i5'J@9p)Rs-FhI8K/fTWXNM0+ZM6ERWu*4aSJds<+GYrm600Q:I.D1moN)h,@-Debo2E,gh[^/)/VLI-J4n()%f7N$N"Z2[n0!Op%&6BlWT8qA%"p]*q(_#Y.YFMqR7s[(RTQ\]pg8Y;oo/;meUIJ*VS*l&0ZP\l2gsWgeS@mkNbLrl)9LtFX_C[\R95.k,&^,rdO5D>:%T)DdF]'.7_gdOl3IQm"9(D`,N3cZ5FQ',fXS.Xap%t34+2"O!II%F$-Mr'?#(3T570oqW7?-2o.D9Mm;Iqj8;6b4:cI3p53k]+hD%ji@SfS(!(#*mN:%ip(=)+)+'F!@/U*Ha'!TS!+o*]-V/7>*-$Ad6+q#Zb+"O_?Q/m]0AJl1f1.>N%m.b%_%]pTp&nn\k&0%?`'hE%Qk_d;K@4Mn[jRJ,cqHUHpU@<%DaV`9!>LfW8]P@NOKD20;A2?jF*[`Pk]TUfe*[fp$@*ZFR9;7-;^@/o]qYe#<>2Wg9g'mf\cl)R%[V".-&.3Dr)hORf_l[[hTg>:4i#>\l^]PCR*)&m-VFc).K:qn\16^1C)ZnOJ7OUPP;WI1\<9;eAkXGF%5Z=-[T_LO\+9LAQ:63QN%kskhTqt=NS(Cf==%<r>_#mpD9@4Kd&L?2)ZPpk,n3m@_ZA;nf744V8ifu5G*)c0N//[SQelJfJ@a$@"pXaFB,Pb-1"#"n>-?<_e=%Q]?#GKNi,`Z>c4B99.DK#3MZglR_C>h2WQ#fXT-i6#VOccl`Y%NGIb4$1#a2J:1T7BZp1TMHFt<;dK(-Il'0G5s>61q6Aa'S(.HO%,A.3b?>dRLjt7@-?aco*)A%O"m\_jqg'SYiW\[[6=b??adH2)/\$[.?I1j9Y6'',#9q@>\RkNOcr?b(?%EV0(lVd>t2Jf:>*/&1[%0C9PcoQYb#*DD[MWe'f*fTPU#4>=G.Aq87![qpSQ18'2Y>O3.Fn:GJ8.C5Y4G18Kt'_AhRn6AY+d%L^Artt%;*$EDHB&h$g'o.")%n:T+>No:5PS_BpEbEPNF(ka"RP%>UBnB,*pC1mWhK:N(OQjLAW2Ld.5cYYm^AnU+>=aE?0FYLlPRPu'r['tf/YZqQ1\,'8<n%qCi%&<a-?-@;Zr`Al@&Ir(5`[j355iQ!Kcpt,Gp&a6a_:bK_dg83ZI&m(SeW82nRj,;rt6E;WNSU@>=[t=&B?k+^L$V</_!K;doM"_aY%DE_>e0"tnHrHRquA"2q:s.QWWUO#!(Rb?d4?^'lDg"-#a;[<o/8!"?9p=ma/%NiSXB=N15>QsRXn??/Y$[^V2^Umo\2V6jaGde8,%\*TUOD=.$CP$Pe=p*$fUaa3C>R)CH:JPd$Y,$3o#Kq,NC*SRF;5Rn!PCZ(4fNnR1#8,.Oq$?"5gV;'[VbAcXX#<`@hH9Ul`])M@,%$qgi/'*E%oWU);Q(T;rr^\pric)4&2UN7W+",>X;?qM2Vd=_m8(bXUg#T#P:4mlf@0RXR8_iK^@d4*UVqf<9OTh*rKIH\@X7>%@u%7b)jEhtDg.*cZ.K=S(V5.o?VdM^L%h]Y_b75"jZMgVM^Y"im7?NHL39h!Q'0U#;HIr_0W8!fXq*@E"ekCgC^]3)U7c[Y9"UM`16C%0d'[\>WGh6h\OOAX$G"c`>p>Up<M/<DcPctm(7($*!-Sj_D;[*G\Km0fCHZIF['%QS]G$9?FsN%[adA(2(+M#dmURLg8:6a%9a=`%B>\N$KiKIc5tm+m2q=VVHso7]ZV:P"M5T"Jq/j:rpemZ)P3.:M7_.)+-hUm+n[T!iDL^on.$^TX,+5kINdR3pDU[6OZ1L(</8@CT%d%\D<PLP8&AMOd^`'t1l:pd@ZRYR$RU4J;_hUu;TV?ddUrg`ALX1_\g;V<UskSWT[?+=Y3BN#?JCWn7u%c1&InL03R9q$=G5h*aR%4I_olqbpjN$l0BA@WRHFFLnOWKkielE!0CKNY`CJ2k-lthY8(7R15+no=M68`G^YcT*,rIKXK"h@Te_D%JV.V6>G)MDfHpXX8/)?%R99_U4Yju3F0'rJ81LStS-_^L#$X&Eco+TmP)jB?E=`ql'dq1W'+_BQlG%e\rUrsdDgLp*gW+:sc@MfO'Qu&*q.">.r[as>rTR'@%n"C-f<rAWZ:CiWuA`XQAIc'.8-:2--BW]GSR-9adJhPX^B"AnZ+D4H)?#B@S@Y%>CmUjM0],j;lp)CMR+]Lj<$X?IDbM:q[3TLj;%_UTGDfEG>#mC,rfJ_'MP@PGu[0XDhFmdB1EF668p5"86*fQ>Fk/Yg#IjGfO]8+kL3[O)kL1(t.AY>lsc*-aF"LZ`I].b3#K[#19>%Gi5I:)n,u-!u_GLD&IW7cR4drq`NP]Y.)Dm?(833,D><=XiaX@;EV<*_i60UBBD@M%<QUA1gN-)LRo7RBo,3^)Pt+'a_iiuTm\n$%g6QhnH1D'h4d>HZ&DdZ)s&mhBNF?^kr^QE(jSdC2GW/_n?SjP0J>k77[6>jjhe@8RBDg:co#`GoY9J>aT5Vu(?2s2pd5Si>d`k#V%aM7]@M`_"FiUe@ZS3#ucPi^KW)fbfST3loqdBhl2,WQ=6,!,]aW&N`2q`g_?DDt&S.jU;La+O[3@:OZ6B-HV+>lU53Lrd"@<rA[T%h/[`r;\:Z<45bQAW/4Z=-&Pc)a]'^50h@[kCfYEqAAl(+NuHkM,%8c);0/GG7XhTCSa[[FZQFhmDmPOF3SAJnDA53sOs2u3Z.Pa#%H0$&'$kJF+_\^1`#LU<jDgu-TA97h$b(W))dk8l7<ih1@3r"\T6G,c*IpWfHh8PetG:ljhLhAF<MIEp[d;<[l^\[7B`P'Xg!!#H3%!MD'Wmls%\8\D>*DFOQsf8k:Xnb6Yni__P:UG8VH>@s6m*RE=U?E^WMjMde9M=?Fm^f,f-EItHV"k[a0ho<]RB/rE(*ue^\HJk:2%9p%.rqh$I^\mJ-@,#Ek3mi8Id5T=LX[&2sIlema1@;ESX@m^eH63_;/Y=qdaG-taW]IW@5=g88bM&I>N!!R,t$DsVsOh"8VT/q=E%QG,=`GI;[rFq&G(f>?57HObt<!KRrX!:_^HKY2DcjGgRsYI*Be9C`IL#+F.dp0Nf#FsT.6mB0hJ01Wa=M(9$]LMr9<DoC!9;e<FS%n.^1&%Xka([MhtS:rfuG+0/[[(-T0GjBo+EFHS<tf?je@W)##q0_\%=qi<W'*:Dl30\oc.1Z@fsmF=1S>Oq%Lh1ZZ/,psm/m^m7R%GKlqb,2Z\*e%=UcPe.;22A;fmgg,2`#4bm$]:cZgUY8N2/f:eh%nI]bbcChAHOh$J)!ogm(h7W0.t)6=\b\?fAgWBS<J2skn3F\G%k-h)YecIZj2GElC;7=Vcq-R^8\8b^j@eBj,4Zm!IGnDtcn]@]Ppa/!!iSW+#=hgY+s*=Y%s7(ki9"*W?]k"1#m7@6M^\o9)kl5-W%kEXR=qb/#W$(\CpI<T<M3e9t<LW?S=@hOOVC`5(gk"!<EJ<XP#*J-1rYKd+1?5aJ$;ke-?GG]XN%#;oZB,M]shE!9uIp!2CkU."S%g>Ga]N@-*a6L=)G_X!?VVD?W4%-<`#CRGW;[clt\_4i=a(T^rDHt_X/E);p[e7Z`omo1!pV2H`@H<UM!N&BCWf-7H+C-7;`,,8e,%=+D[&U8M#cFt&g&]iue7S#(aqB'n:^PfgUWs0!=7Q8)@g`#5Kg@CBIsPTd<49/Y(`?h;b&FH3?4$QWB<0?'@pMDZ)[VWCbbnG;a]%OlYOMgrVOoL'&Hi+estZQ/[q!"H>%.pjUtO$i\N,F[:7R'2>K-;9cQ89Zu.@f>VQ][^ss2Zq)ta3(1DmD.=&7!-Q.POkZaaLLG+D%TeuJXa[rmF&K33>@h<4oe_dD@:&HmI;5:]Hm2_\b-_JbWD:%[76t24ToD@Fkfp'.d@'Lji,<+2,(:EbelBYaX#DN04gkDV\\N)58%U^oCK>$SC_ADhuS@?aJ>-1N![a5Kqf7$m<j[<3+se[n7UCu6uo+Hbu((H+ZNd(kmDXnHi0$Nh@A/`K$m?l7*FWY,%aVaEE<F]N8X%#.iHZ#J2[*#RNlj9lJ"XVDL1n.U9D@O))cM<#`PX`aHbb/d%-oq)$8-8Nd7s2r2hX:)gRk"pua0L'`=VBgo\U1GE+>[eeaRhYd',%s#Lk`5.Fl'BBiT?_7F^AS[!K]V0ub)0?O0kaT=8]XQ4HT(rif_@_:@Oo_X['c+]"XG[fHW'M(k,PF3;'L6Rg.RBFW<;Fn`hb,X=&%p'XMr"/CQcCgY-_`A#I!8PuK2cY0@8oPu4&Zk8?Y,F:l]V@K!0^Gm;cqi@(eA4\ZJJ%<9EH(/(%R:aJkip+a*G>"kbIe-a/=4SV0%:9]>\*m;RfiR?Sfgl]:'_l9&B"S4W8B$L`D2L!<)%-n#%9LqTGJlh_gl6frUSW5rOqI-epE<Q)A!ssiD:ch!%VWcsVg4'N\?,94u%*ePLPONF&AA*1C'[OdJ&=^8)hNF3!?\uOUg`6Tb/g^Xu3Q034/Tp\I./`MHm8g@#]B6Bh,:YY`b$)OQ%D)tEUbA!_JDX[JPs*A"6%^VFYDhc]P=UHB-[pgU=6fGeTBgCoM^,W!.3:mWChmUl5HXEGc*V5[6\,f:BV(B#S&/pIN#]GuVt`K;a$0k05Q8ZpW:7r3G!.B&.i%M&o]?X2:.(^HE9JmD\a]`Qf)YZ,S/I'Wuj;Xid;`ZTmJ1GKl/(=&Z2r9qlP$[GRYYgL.^U\!jn+c*_G6G`#8Nqo#+W7U<e4.Vg0;%iFY6'iFHJBe+4cC%q9_<R:5kJbIgO6^`9M,G+l[C-u:m5%G/31(^P#j0i7Zp?Oj32f+@fPEP#eMHMbZ!@*$Wr-MXKuq@F"`Cl558%\E!.kp,)+888t5>Z(WAA@q>8:V"Q<BL03lH_^o"=GPu[5J]js=RV"S=g8rU"o<a."4`>0'Ge4oWVpl-5AcOgJmnoji2">/qdkl.3%k+hShhCTA?Oj[bhd,reR=NAfDFtqr3@(W<(Y+3^\0H+W\%3,a_L6:TcHp@INo8Ko9(idk@>jO\C'98c',!(C;0?_V#CaeGiq_qL*%hqTQ>W)/%0I.-=l28iL&`AtFtc)3sn_3,F98#:m*5KoV!i'B)Yj8cZ8[a'/(8Ct2i7e4&b[W4lV/+DkM@;NoskHUC\b.7(]s8N%I%o4XZ`2*=#BN?nYP*ogX?A_0LgO6)+JCgQdY$30SfYrt2k]kd=r9`&nYY#^Hfq4l>b7P\TB_(E.@o[l$+HM\/92`c+@i\\8K:MGF`%<jflk?A-rFE0h\"78Z"Qmj(Y"=fF4lm0Ao:[UAKO55*9,dJmkq6aMnW.Rhttjs@js1%'a4aZI$6)V*(^J"$>T`D[PI'j[:&i@k+t%@KTUalgc_$jq`ctJSMbliiW'0J5cK7n0T?FI?o&i[OkZs=,`ThFC<i<1F9aEL0(K^B'o_C8D#T(?LY\!`neI#/6>qk++J`/YIRmI%@:G$_X@pIarQFdCZ7!P*Ds6&"<MT@j1\ArlKe=V[hl[29_eob)?K<=g9[ga]pU#4Y[[XN$.7Rfb3"45?C1Ea<^+[0P*g$9?mjL76%Xfll)$m!C8*/>LH!VY<7o427QN*1b8.edl;d.rTI_:`aIqq<"q+i]F\3/d:!\<rSYO4US6ptF$X&MKGP))V9<iro$Dd^R%HLIWC2%p1r2+`7*,ompZ7`kAm"G'&/SpDe%<qDiIjDH#Ls`S(74HAZDXOroIiH\Sk7>b"@6=.HFPL1McojV@?F2X-bj$bS#$9r'\8i*;[0^%+W_"K<H_sH6ThtUUmD]e9Xh/HeA3TuXNGc#/(McUC0sGE@N3Un3(s24IFepXk@D3DV7-Y6b.b!Q>gdAu1L/&aD\'MmB$rqY@iTS?%O`VM6#LZX4F1(!P<6K`tfBN';]:i`K+meP&WfKL$IPa;FH.st&Pj7RVlLlqOVMXXlHPMUjSfEOBZMLdbdNeBb5H2d[2+l%A$[(SH%l75nTMtu*KUd]p@pl6ZRs5eOi=Mr$,HQC!>34'Ll4C)X<h[rIV0h:?'c5"6C)lE"dMMGfGl[sRU)\Tcm5<h/DCHJVMPF/\RA>dc:%DLZ!bj7cYLs#U2V@^,J^-%P!ABXK9,X1pXI9fL2aVuNRRJFi6Er;GYo]]mX=fDg6<RIOL?/jNX\.BDqLRo6WV)h-K-nG-Cl7R!I!%p7HgP[TRA\##RJ4h]?7M'2)U3p*JnC)mL=WHuAhG/7I-Ydus!)JXSpHgIV`N7!689@+8P:itU]@M5QkAk=-2l48laKIe!,1aaAJ;%U-A(rhBBQ0p)uWmo4[_4d-K$rL-4N$^9PPrMsa5c)5u?sbZ?k4q0%"RPQY@iF]'upfWIB4nGd(g9c)McP!n9t"nW9+N7k&](Mn`K%Nkp7j@djF7+9P(U/.)'@qr9m;Qa((%<iN)u>!+rlB"H=I5Ur$lA40rrA1U<fBRQZCC87fKp^3a-D7++XI:$86\5I@Fm?5D^"31f!%,AT,l(J8mWD*"dr?Wts\D'Ks!gMjNO(iZ/1M;nes^5g^!ohe_!Hj*BR[TYPg^99.+F9..NpE?dqohle^.mdmN;+G9$3C7@q9SLdG%j:\$D+H1V9Yh"Pf)Iq5dc.Z'j6.M86>JEecB;</nXOtd`@gP]>hY_cYZbVj_6=#(c\pFBJASg$396`,hq[:GPNRX6)U&8u@F?$#^%g]*PJn&2[WN.1ZLTQ1L[in2[hcJrq5jPB,mb4>]!'qh#cff\p%6<AeM1i%_+ip!NjZMVR+[t%m4(-`p&BMg+=b7kj*^>[`(F.6JI%*T^jBgL/X.?mB"sb&)o5&[Yk3C#0E[D]?jZc>dCuZfN\r=30.XO]C:k8tn(O`?Nu<1qV-8OJWM_*A!P7I8M6/,3'o4DohE%83Q+/%MC6EO/5*^\=<S#><YTT6^l'bL&'L\TG'``[",5!<OR+4nY:c[eZL(Ts4S3IX;<f@2ZGKQt!'`95$(6G,_:m6(EtFHHP,f3X`#5M)%_5OL_6ScJd+_2DmPT1"RlKEstO1XuAhN5m6c#L_0!]DT;ZOHC,O+S#$QpbF,K7RhVcju,5N1.%h)7=&]b59&!AZPko='9(6[\:o.%.\_s&]j/Cd'M[]AUsK^hjbnhlS<>RU)hK#8&ND^1Sf%>C3Ll^l)VM#0SgG^09)fQLgTXB9TEdGDDA`pSi%35Z+Si`5CtBf"ARWOI%[*.9*NXG:<_H?+R+%%c3aA-!C,o(.`@rS5rSJqSlUaHLa7!C+sZoDY8VP6Tq!&n.sX#tnuDKBuoga$/2nL#+c=1qFQ;=eO:7F:oM%3"Wn>%MX9^iBNnOH=05X:gi+7o0qX`&=VnKbr(^tS`",nd\D?1fq]2-+PigQKe8B+l4MtoTqYXC(3mJ:I'^l-n3%"BD1`<O/LMYe%&0^mTA=^.s(^.>O''(/&bPlDC1LeK/^iJ4d(ZMqkd2-,W6\qK<V^*EcJj5B1UCC@V!;CBadTI3W1d.8Tb6#kocgR.oNkBlq=Jh(8%\HT,J-?%amB4,P11M3h!5s<j&Q]AUt#Z.,"1-)N.QNS\)+Q,aHoT#,cip7W"Nkf?C+U(YnjHB`=%e^!>(+dEP%h"HXfa+b=`IQ36%+ME^7D/!hug]tQjJ!f"R;m@^1-Nh,Xd,LrL(Utgc"fC@mZC)pK&XFc]'(ahm&YqoKXD$Q"LUX[hqF[O^GV-)Pg[-kU=.%jdluMaE%;dE1U$5V;[*,>O-@Knqi\p2<)W=G?Vmk>a6Q\VYY-ZIl-HXWVK/g%BF.CL[r0f_=WUBi`P.kKO5L.;:s9Lb%=E76P&KsA_"#%!W:%>J3uTQ7(qLUGlVtUBNf#UMgghY\bknNi-[6E%^ZBq\m@87bLZ.p'`YEb)Sel+@R[RW$:9RJjV+[?4p3;Sf<)V]-RB<I=94ojC5qY%_SiZBS'>QpaR%]BZtjnn-?0O*JOPDNJ/<GYjhj0b8P\X!BLrC?3ALSIB4g)&+>KN$jtRq5UXU]p%3;Nj!6cU?boZ1MO:IN1.g4J2%%9ka%'Qa`>8kN%"e`)L;D,fRkD$L5_.j1T-hb`C[CI([AH!#$n;6grKFoj^+#CVa]9-HN2n5-@:/PDb"XkqRdi#S/h<H:5A3M]I!%KC:7X`A0::p8B0\_6$,J0=HgbpF)tuqJo7B:cF(DJ5BbNask+]I&?_TU9G*"LEL-U1*[.qnPC@WJ;9OfJ/+iI$DK`ei5c,MX9%du%pWQ.HYqs]`+YE0c'3RT:'>T)XP9KF#8dGSW./0k#pan*@/tET-eejPu-2j4IEPW#c7-*,od"pQW7(Ugs$/io;+Q-m!I^CM1O`ejU%.ic51Ng1;f#5"o>TE-pl?./EPTa=BQpAkF\.F3=)fuRc05U6oQH?3i]5I)rQ&HS:jW=+@P?$VP:o%()->c9hm0q%o4jutMIrk=Hf%]BsSm7uAi.-1-8[;gpqf:$,D'X`>XHQ@Ys-S=M&5S93]*=FOJ+g7^b?DBsf8;3bVo5l)^VbI6Un.ItSd)9U2.gj:G#`_m\f5fRI:%H8o_+B.:67o\'abatXdB0>1c@$\srW37^?$$L#'F<Dl@q'>DVn!=NIcO6$\kOno'!?][DZb>r_"&4p?n#uc-Ld/+kRaicTc#ae:K%e$Tn(1Rf#!8t"ni;i+bY1%U)PBbutG'#AkW^'&QCJnYDkcKrVM%)OtamK:278k:e7OH7,u1n3\@O?X*A-`LW9^<`B7(lUku_Lbi!%*LD`A!+*eV1f2emJ;RuC;PsV0EljPn`B\"!";!Nf>/>&ng2aYTC"n_q_cQiV%fO58BqaTqOjrEtk;j#Z8lg]X2ckB3%](2NCiY*h%ICVNlVDc&EfoFSVnMET>"(-$g:BehnO?1`bEZ<nZ-=qcu+DM^^$)(,\Sa/n-#1Bl4HsSS`*@*l$As,TR:/[YE"ao@RTFfJPl0TO0%;-td"#qWSY7ug&N]^!++8q't/@URY)8d('VUd$'uZB7?qEo0]V%_I4c/0KaJMR@iM2JG)ZQ4nuCadpiMdbp&*@%V1ElI9Lg$X#<]%$a"629"Iag;'W]sK;UQe"9-3<5J*K%.C7T?l;7ZI;F#Y9RH7$4PpQ[U!69L^8lS6-*=@6_>*G*(OT(,b'ql4kFJpjk]<km]>YfYt%fW;!l^='4uWc1^PP,>;`(/'Pu^_dW;TThb_OENmT#)>MprhQ/65>DU?i&GIZVCK!R!s4;'lqlP$2Hj[ZDmE,)>Wttr)tg4l^7bT)%GUngZE.Fd(#noGs:"^CX0G_]V\=W>M^fq>+&].2.T:dHjOM`2]=0BE&#_9JICanYU-,JXF)LpD6,e0^GblN/V"4*fS)[<5.qSTb6%O<Se+:o.g0Pl],d_'PI+3KRQ<bCgQMm.ps-%bZ;)P8%%X/j!Z2P`3S0%5NNS?cQ.X%UEG4#"b:tTs?XQa-T?PI@g)jDM#k<2j"Ul%C^sZ"J;97B#M2"]\Nb&>9:6&O"Q5Mo&RPUE"sd>,$M]Vh6\aMV*o1d3S%r[c'M&E=/G+""*.#+ud[J;RM8=oLGn]:/Uu-Zp@R%JZ%rBnoH'su)9YWkErnr@8_"(`i:'j^uYb@I47Gm,N@s.ula`+tJ6."E-M-D`Y&6JZWQ8Q(9[dPJZ`=aF*La=+ZSj&7d/c>8Sa`TQ_9%'`#;eZT/RF_B$ZrZZ5%[+.@+&CbPunp>toO:8EMd!Ct#SER;E%+`\@9OjgIr.EjIjK,3c6(oq)d+9Iacc+qB9;>1S3_>/V4G!i+/%E]uCk5(SZXB$B,WVNU^>Z*Z7+)4FC?!<;O,3(1jqac)UuhLBRm'YI*[ksm>-p97k%3k3@tC1)H8CTYjD@Uq]E.'YDpEG7=%%\&HT%Y,OesS*kh42Dn(6573]t+oL3YBV=RB_;n-Ah6s'mB*`,-U[[Lsn=NVD/u6H?A;Sa3R-L4+9IZtD]Al:H0'""Xq+\b'VC`orfAN;K%=1r\Y'\@7ZUAs0mH_/'2M%#F1L5pq_)(J1_p!GWF"Y]7/5&*HX#%_U@k3U9-D1&sH(o[W<0[d8-I&Nh[$mn54LW-FFIj?Nhk$S@W%oq9,?jradG>SgPToOPZ_5_m.3aF^$q+g))g$YauV9,1#h[e,i<!$0PLm03DGhR2N2jP?ju`]/uPUh9p0mW:t\r<5UY?$W8cC-+M'%;uq];'#E7s!j2$9CDqpaC^$u#HXrarOMdp/B?F:eRpVea+b2rOD(TOr-.C^9W/]"$)b<ES@1pHY9N1f6"+,2#RJDV$jWST7UOg3*%TA?FT$M2.9%&MYHPEI4Z(#U7j0VrW=ANFq;Q>-JgKui?67N#>P=N1_/PfW>&)3#Q]EOmLI&Wj2*SFE#Lb/t,YTpTLPAA4Wt5E,@=%'#<h'N3rV3eGkMh>(::A:d9h!pts!gDg0ihRZi_;:WS?d9tDDJn^p.HVPblI(NIGN/#3<G."7od;X22*._l/(+Wmtgi\)<-lq//J%+a6?+;jh;bntl(LGUS1iP18*aTQe+[8Y_^V.<IloJZUI*@!^epMi_hde;^H.5)mnecN6E[#PannL3=`oi2"?-VBGQRK=$8pblIqs%0%,@?[K.=o!fedR+TK-m$3baEaHsS2"I+X@7qM+o3%4prL*I]-TgXT.RkdD`52pO-@7*42R*dEI$p_)F-Ff$0lFd^dc=4T&9Oe3&%d@l8>;*6-96M;;;_;IJ34GIhUba&lpoE)IO:8Am-!MPW2"gKHH-(#J05aBWQS9#7Irp`H$__),N!uGUp(1P<5Q*,K7E'7@["jC*b%9Aa-O+NnPb[\irgElFRK4m2iWkFBZQrqE5g)kD'_!N4*n,a295=:(B"4C=uM(0clg&>WVA.DdMO++Ss^2+RsAau3LM&@5,[/Xaio%ScUl9)d#HYRAC!AMb+;1amX!G"Z%`l>0cgk:>-r;"!$JsL?S&2j[_?1UEGXaq#=i3d/JAEp/^]sqc$X4aS+[3X@PLm>?jjobqA1f%/>\Nd.UCM5j2mah.a$TOEuI0hPFYbDBQS(\R4@^LZ8N<Wa\^9:^8e"4bmd^k\/>C/4o+pkWao7Y1Q5&3H&rgM*q('4;t=-bLn6Qp%".a?sD1r`q=(=F4ko%MBP8MP\fZCtARq%)hUTPb^hgh]RXWW]p4tE9/41%u>fE7&jg^KAp.ja\2gZ`JHD$_4CL^YV!"+R&u2.U/.%R;GM^5,ur*6,%,c\Zj#g*KHOX^HhUFjLEUq11h<o&`4#/R_&dgL1Lms$_/KZ5uLWWQGe[m%e;cEM'RgYI['5!DjIA2,@$.$PRAD*%.nV+eUD\`Y'62"\8S2G_>.VH*pmZ7ep5hthoi7T4#g/EUY,E4_%f#A.,"`M#nuKCe,PK<=4BJCCN3,Ze2CZ&<b!b/jXCJ.cq[PdS%b4o_lp!r><TQg-p\O_;UHGWdGO=dNd@'*?XLfV@:C>@nEqkfef_NGs?/1tQgf#\U6G>^UY6d&[6!G\-@9lJV&2CT%]frW3=j"J+\%JN`_$OGT@82Fs?FWkl<:@tX\Z8obQ/1c-e0Af<7(G(Prf%C+"LmdYgjZkOYq7:kGW-W;RBOM]b9k7EaD'fSeS&aV)@`WPtc7f"6L%p:[Ca<7P,^ap:f>rMqG'C1.<"\\7$r72TYG!Y$;h2m&KGOSLdpl86*7mu=G-_\n*6U3#odk5e%YaB3G;dNHO?/!0#7[#+jhKnnJY%TC"9W2K2/ajhTKW6[uTp@?>e(K7@CTVk5*iJSR@BZ?2a#8_)g@<FLl?]36$a3_Pfr*&*uq3%Ck3%f47[h2k9;9u]Va]$0A+WQI@H%3Y"4YUi/#a!"WT`'1d2hhj.h?[3k-.+hl17=29RmS#nWR,;b6BZf,qnEc?(b\I;.GdUT"eorB(oD,@#;XT5('+(R1(0nJs1Suapp%RQ:=NZ8jWFf6MnbQmV*H^aN0eLKHA/(_\D+km8H77kS0YN>+u6)crHppgg.^j(=;iAI1',#/lUUa#!:TV5-m:_$Oa#oq9A>fn8:2%Lbb8D2R]W/bRl9X+8FZlqih.sAUc]`f5QhbGLHfM9h6<>Lo^?N!qq=#8(M2L=da.K+b>Jfd/6ARjVoJU43AKa?q0UUO=ih!L6#@@%'`](<73h\mpu)*cb!mPjE#o#HW%=?:aq&"lFA/#88g-Y"nY,(fM`Y@XGWC;EN0B_%A0qQKQ\j763!Me;K8)bNF_&E2%*9ZGO>r"G%`C!$r-kdBcq[\q,:dG_U+=E8ig/VLHdZ.aCR0h>p!4e11Z!IVDi(7!nW6;tg6I2!9Kd_)TZ9j/i><(RU'%&19Np$ifmi+m)J4)hR%K)#$i1V>E$P8nG&rC:&mA54BE5n[^\XJB#qRiJS4=`oq$iFZic@L/@/L#/MO>62_fhjr:qZ<?;tpMH0dbEe+9=##VpS]mFc&fhjZ%W,G_9kX":?$5ju9)42ms*6Y53I(#DcS,+m)L9t=SgBO(.q-YbU1+8s:$f*KkJ4bY%M>=+n4,QU7-I)V(=1'+2)++$b?^5B"6qs'4%hNo[)i3ADA91IDs"Z/T4$Bu*P>%sKn/9'fP+b^HgNL"r%qGT46Ld8Br/!!5OiZ>U(ii,;EH0+d3f*G0VDFj!25mPS1"GAJ'!MU2j%U%1\H+nSab[o*AW65d2nF8Cm7hB@BEn&f[BS6Am%.Y%er/>ZqAKfVRo()c)e@RW7Z6V'!/fM(Mk-biHR,s50A2DE7Z*grau8N9.r%cBk&a^2D*7*@N5N_/.h'?&AKp2I)Z5-mE#+8%pNa+Wm2I>*<OAnj/R&IERsLJY?h0CNJ/YaY9Bs,:u5!8K:)>a:5%V%(42N<N6gZ%PUY)Ua8cs\h1-6tQhY2ddZ_qg:l>)?%GnWgV+\M+UA00?:JcZ<Oo\lTP_`mF/6TC2[Ui=#Li3Hoj<gV)@CfbbGG-Q!fB7ue"EHXT%faP+/6K[`^b'u\Bl`'`H>,+aLs2b9]FaJY):JS<h(GVLXL1eI0^liRV&)_G%.sTVhBLVq!;:/UoVKbSPGkamb>>u4R]_%>S_,et`%OL(#-+ttgR.lj6]B9<%NWu8J=kWq2dg@-4kcjQ<WSL!B/5BSV/(F)RZ`Pa=ch8Fi>oHs#:QENU:j6DkjHB2r_=94<jdIel6b55+p%MO)+E09fncn-$g4pH2G\*3:!7K6bP4phXM9=25L+DQJtY9mH#d,t.gr_=//VN8AX;o`q=p..oZ67geXd"Xk6V%SMFH*Q(t3g-,,1%+u*Cr6(IYdo9Dq!20WT^>*$#ACLV-G@BW;YVI1Ad:p0*F=UO"O<!asf%&I3&c*CrNTd'@WnKtqJ6],'e,7c8YqeR!:f42>m``ZH<%CI*jDG*spiNZ$^UR%3-<Pln76iCA@XOVZkrNO*/j*Lb@_jMG_U@(^C<\5$GQ_F4c&Ho7KJ<f$0k.'>+SA9kVe9W+D"6T4OE]/&'.%A444s86#'f1A%]g#E[38^2V_4]noN"&;QSd-^u\F)4$Y2K6SWrN39fHE)_*mF'mUjfbgY>A.67T%l%t401YD&>6-6+=3NSUnI&l^%d$1rKNK=\rN&XBWIE_6PP8"+XS"^DNDXjRIiN"m$(D*\uYd=S0pIuM^@t"tX*%CI$r,5D0S28T6(hO0XaTZe\9cZ*,"d%UhA8tA[%;W\#hk]o.DHo_;HA>dIho.>snbA<6F'Kla#('Y"2,G-M,12k!"`C&=k>>"9W(P3?"9gppCUSSVpW5^];$Bpho7Ka>]HJ64mC@n8%%,-hS#Z?(+B'7*8g.*$IPEgEIi"ObO?<_%(Z$qFifM\=82-J.Sr(VM1hP,'r?.@!rUrmmXq=:(<L1^F4rc5US5l&u!1V*R&]mogX6%0cF>Wd?+26\%3tqBlB(S9'2,ogemcea2/'U1<)g5i[n;sd8b*c^<33FL"`=[go!\gYbK4Q?/s(4f:b*W.4YQf5T%`N8^CtBFY"S&%p%TLY)cC\Z*Z="">b9?0nNo,MOhol]&=0>?%Z-D2F+b3tKGQqZCKq`kX/D=CUamB`Gk$1g3Ooeoah`D)SuHP&g).*GY&S#E),hm>%nYqNgjiIn[lG.qcCGp]KbE36Z-:W*+%ZWfVTfPE?'g1>$_n/\VKoOS>nCe:T3tmEWI#nKJYPSp7lE(Y56CeZ4PUE3flPc+]<AFn@%d"T:??f59@;mE//-0/JMUp_LP-0X8%LVXLH.6-nIFlg,0DcRp['5EBceHe(o;^5L`(i9F3%F?"Y&sl*tV7)h%gOupVd`=;5$9^P3%cqHg0!UP)P%@/2&Ns]XDQ1:R5II0iT-THRr^5gpPc2q6DOcpH@L`7MC[PHH7;"pAs(=6k8[Al*7.cec`_MTJJ:/f`4EFkSbXF]Y0%>*-.(&Fa^,,EV[@CCO8IK2=-;.`>bM2EFZi$Q,\`Q]h%^r@hd<pHYQ<#8p.18WG8qpr`$_iesnV4a@Y`\Yr*6.hO7eG`(\*,/\'q%YgcN(5OeGJ7@kii(MZ@<fp7Nu6rRb3Wn1&`N7P;@YF)\?aad#5&&HpCj=sl=1Q#R\.l+B7)_i9CL=F$WC-l(R%23&+dU=\pZ)^19%Q4Ge`18S.h'j1<dV5OdmU+#0-^^6\JN3--&I<<^\nIj][9M`gnI)1G*0OL[qT7Qnt&YG1&+/PNZ&L;b>-TR9_>/UpceBfmb0s66F%M'#QfDk7G2%^GbG]GY5s>J>96r(O7PLL=JTc,onr)5NLgJJ'_CPlXcq"mYo>XmI/W(a9Y,m#Kr)dIQZ.$F;]lLQ@].(kXC(Igq:?%)P_(7.2@LCTK\X^I,HG6ZR?`3jcki_OTn>#6R"<3-hV&W_?.gH`u*i)lSCkq:'rCDXUf1jb!O14GdP'o]OQQ?ltY,:\eq$OR<8:X%3j&T3+P'B7BA.C`$:P97,"0l,=i0'oimNg.co&29pUme&AB)2;P+\TJj["RT^qKMHdk2q#k=1f$\ssdhpHQ!ae#8-+;Z<EZBf/sW%pL%Uq7%>%\-AJA!$/L]4OW]5*>aQ,fk7N]T[:3tT,pS,l$cCL#gJRC^n<U&>&P>%!CV$#HX-]d1d;>iL<Bl=Bd26WGl`PaYP-t_*%(=X=i,u7V2XXc7HbpF=`,^X([U4$Am:*>n,\&R!fFKEX5s'06MfP<Yl[-etsGE4Zj$e1,MU&I>lmn$Fp%iWdRkPjSHqGjFMrU.7B%=_DmI6g_.%;f@rq>M&Q!9`A[9qJ`jnB\_FNC/;<_=5<DGfkaX2G58+9rmZ=E]WS,RSLH4J+nYaTo\X?33p!aJZ*'r)I;t)A5IEuL%rYG-]Y)0E'Lm0QK.oe49f4o8\C=tK*nn%j=.m0f`\17W8O1"Or^%PCjL-p(UrD^DCX$(XKLRhU!Dp5?HLY<u(F/*'fSUR@(&#@3K%&`"AuA4IV+n%J[E?TrkS&+^!ZDJQB:PN[Wd@)mJncMf'Lh26><W'=VEWT-V<6Q91AXgP=#[J[2hNT]VR8e3u4W7tMA+'<(Q=IZ]f%m6CT4I;k#7Ne^]<AtoB2.A,*nGI>U`?(C*<:$5Q+R4&c)GYAu?d-O)s\KLlM?E:JPldt-L>L!%kr9NiH*$Y4OrRu[DcRqIA)ui%O%gNS<SO1i<4g8MF6G?5BpH`Z52p<]m(MUSRRmM+\2,N_a(Zr`\C<WJp)Ig?q8%*PN+s4@PTCQY;@DlJB6*&/1u>%lZ>=m-@T+.2P9%9rkTIg9OS!`(gd<pMWeIEHHrCX/6?EJ#pCDF2V@(B!G^([d#jAO7AR6NNOOq[N#:S`BPOF;dd)0,_@k%,h=8e-/aNfXJGgHY*S2L%5nC/bb=EXbAbd>X=rFAK-C\+jV(VmbVVC#Vo!d3PpHi=4iI<I:kVc#6_)215(I>M^04M-a0<NORJ*oY/YKW6M=W5Sq9\Em+G4>`r%P30&f9V=ImAL<Etp@+6mN(9O)M$0.*$":t0a+f7tAB;/P(Oh&DA"h-+_')KCC`;a6EqYqJZfGu:m*Zr\.O*h!,[@-F%-g1(iU3#%%bmB4VNC]RSZGk?(Kan)fV$!s2j$)ra$bVUrF8:/QU-uZ7gd;?gNkjTO&FpYQaI6i?SqC0%4ntZLT<]1E-?HY)AUWK)+(u"?MT:WM%bjd7A_5"=r4(??@0dQ`S3D?nS,ljY'M$0-'';Va5Z!I0kl\'ZE64=Fna`m8,89.RL.`WB[TY(hd:!gB5K)nb,FVccT1NsoND8[`0%'#+\t`/5PUqeY$sPF-!UO#QJoI%^s<'_2'P=V5!@haRGFjAG]=GiS"rKZZ4<fsDil5Bqp3@i=RKOoUhXUG;%&8I[cm`'1A!^I?YU%<<?b\D\8dpV[Pb8"Bs-H:b?Wg0[$%NHGF:8LA3Z3GnJu/0Vp1lWZZ!S;-lLUJ/9RH:E?o13&#*3er;HTFi&h:n?i<?70uirVFA6N%:s>'F-p\\5Eb6!5-UJY3m/5>2[nG8Ba6(,XnW36MC&7.!rFbN.dJ5sNn5l^)4C>*0hE<tYlEX&F=%OTQ77#63f^J'IWHqASM^uOl%Q)e@tnR#OofMT#gSpNSu2<s0LE"N>A-'LcLl*$_tVsR6[#&3)9DT'3T;R3]PE2Dr5qXa)[VlhmDB[-0AUNUe+NGr,'^7.4Gl%=2,%8,IZ!!is!)l4!&`oT(pY^1WAmXjpVLj\PR8kUWY:H695e:!:6CF/$9UHhoI?_%\s>Ji]bp+!(@PE7o'C0`N4RMh)M#)2%Naf:#de%&,!ug>-1_UI/`\T9]]VUV"V!`Ib<Il?Ir+?HrZd;O,(`Mpio(9AF&[S\PmEF.f\eG<ibqd1W0R=f6U`YhDMH?oge9l\B)+/N;=6;%FB#r*l'IIuMa+UMqit4;5k"QIep*L/TtR#E&,6j*5Uag9oDd-(kOS'2>&;_?!#u$X_g5r+_9a,fHLLZZmiER?O',-,pXa(bh#l!f%]f4Vc7)qOQm`jPC(HPVS.MP2HSgX>P-M4A%G,P0*[n-Jt,qcY$VsriACN3>QH[*'QY(7DnGFi1_7FCY/dtLoIJ"`_:GG*CXc[Ym0%^5`0;AC,5L?2_O`MbO]h-s/dGqPde:jIC1_e,=JH?Rl6a0VPT?fZh2!Xuj*]G/PF$]t4o%\g"NPm-S%945qmKXoIbS\*eoE;IjFr%ht]2Q*S)e8gg3MF:Q`p#oC(OqD-@VghIALRot-^J,+"V\q-W(V8%s3"Hu<6?=5]5=hgYT`>O(+ZKSOlOFtLY+@Fl)$\W2M^[QbJB%.BRZMcb/!jc140$hQF?eeB:ATs6,^!YO=N[bIbc"LM=riKjnD#oFPKXo2BqDp3?16];_,-RSV7*WkUI%S@EsuDDl7#HMJ3=(Q-b_%M<iu@=RNP2O6rj6JC)h2jdXiWFh)qpJ*QQ&K7:4/kH\6+?'ha`NFn)4G:a'&[Z!C]92$iZf<ad;X"Fp^BA]$)3?e3OS))QC(=9Cg%[X]VVZdk'0<4fk>!;rPA^/#_fql/7?oVse:R"b;JqU\Me(#CXRLo%Hmp:T-4^O,B*bF`P::;*LLAGYVIqXr\96hsYdSF&,%//9q;%i<sn%FR"q[(*Qt]*#TtVd,t=)./(pKNW;[M@[QBu&deWR&,#Xu=rZ0d[1tE_2IbRrJ*oFU+nNID/LW/7eXj^RgNO1SNEXi.k=I/q%d!',eIk!..SMfgVlfC#g5.A/G;t#+a\9eiUK0o8R@d"c9%f$Q$UJh%@/_o@&TDDPX/EjCjW'+I`!'G*i*Pi3UfCL7*8+TNio`R2%%Fun3on#F9OA#n/mR'GDYW\jbYgA#sI]r(X`c.-%QCO/eTj!.C>?rm)c3:3bYlahQ$]qBCgYM&1'A&L<ZDDf"ZX8h]h&VSkl1L9sN%g6KiC(cosa&jsLgArcs5RZ@NmS_0q&oHT#ulq^tgU].1J?pp=1&aOK/E*mmh[I2eoT0Fj.81H(8]-5,;_OWd5Vo!jRRa$T&cc8fB%]($mq^hd[^T;U8dVS^ueDXHW1Fsm#hRSR#0*Z`rpCV^M4c\4>nid6_In*Ct&Fkpe6KG5QmijqX`T?iR"$DQ>]5^f$bg[1eedabc!%pt3fA)4kJ6HdV-+'m]%TXVIC+#*+M1f!",T=.lld^&i^?)CWs:8(A$fn6!F;+S_.AN1pu)I)0LM]ss#or!o1GF8@^e(p2BR\eYtX%g:+KUHE3W)*RLeB!ORZE+r,Nt#^N.N^7.k&Z.mAY18q%7jLI:<8>^#k>M:<Ag,B/+2<oDq6paH`LM:rNQ"q9Fn%<rsD]R2o]1)@\%e+MrDGZWq1n.M=qH]:Tn:`WIFo;NH,<na@rLF6YND-Eq%/c'24'IYMqd7`)5ZcBY(&.4.]dmE"ga"u7IOgGMDO[4G/NM_-=GB]UV%dm4IlA$!4f\>oakZ9.:nar*gURs)JX\(a<[Xs:qmW.nmXq:3+lB[FK*H0iA[Td+%G-(>BjG&7/jCZM]QeZ[Q<]^%]0Eo\P18puS:%$g=44SR+0WQ$fP4H:[!fBO*V;L7V"J^-kbVm(TUf9!`Xf<1tAkL5nKP&:*#HrL^SPQgFCpCu<4O8jO8`oqmn1TA8UjVLkW<C'uc2%0$!81mn`p(gK.11WuP92qHQ2GM/CV;F4X5hLeQKsVu24]g>JZfb7[X362hdrGYV=kNh*eBU'5MEb*"Xc7g<f^c:lZQM1S;P@B7r&%+Y2pM,hV&2j3OT7*^Cq_3(:NEIERa*B'O^7@l%!ubBK#GblTpQ%H(\hX8HiS1j)be%s@j'O*#:)7>cKcKXBML?&j`o$E3]2X*+pT%<N\JkZgf0a>X2ZMKiPd$d?i3VQMco6=O_dd.?5A'edi7;DiVCDhApb-GC/ta^@oUjcdVa&[HMGP$Q(0BSXUUU#J.>3n"'ZkI*CQ8%d&eVDg/biB`1YuBSfmRR3qY<tIc%fn(-&IjEGoV/SpHENWscI>_4J!Up7+pi4ibX<K-R5l(U:]j.2?)!FY:+s3;,g7HI[H-O`t?k%I1A^i[lX;qr2`kOG.e%jl.t=`p3,AsM/f`8[<$A+a^)N&QM5k[):pMPhr:8$iRWood0KA;?jGO)n);IUKc_7.s0HQICL>i-W3<X5%9=;gb`lYF-Poh)3^3_g=BRYH=Cn:cF'A(RrV9--qX`*+Afm!Fj4173Ad:q>g50baP>ZQjLg]u#JrGh@m]mS=4=o0(ShJZ,9H;e&F%Bq-cS:T_/dT=ip`WMcNKA+R1E[`7I4.[+B6(Y<$7k,jW\Z0AC!fF'O+<UAO\Ci8L^dj37[gTd*:AmR]Y-,4rf-.b>_n8CPJ0B6@g%e[G?Zr-%kbeOAi.*GdhZ=ju?_MpeDOPDS&HO&jj.f"MI/be`o+dcT1TVerh+aC0]qqt$kFTAn2ALA:2iRb[[U]@D5XrmLZBl<rMJ%3eu1o<h*.56ITh@hji0Mh>,Pl^Yc,/APVMn^T(dHP?t]CX)joP/FdG"d_1p6M;tMRDVCoRM0!S]CXT>]O8e02@T&QsVfcTHk?_H]%In6'9p&&<>H?SlPfT3C2N=BCnFiL66`/ER(cO_fkAZsD42e1l]j^[RNa#BS*-hm'nHqKrOF/$47R$?h=Vk&.Kl[6bTn8[dKQ1Z1F%S`p4Ek4iS9dd9_bY;sk11L5AO:7nFIR$pX;WcR6>2K2P[9pb298\_aKT3QifQuql84heY07[',b[;!r'NqP4UorC:fVpZr@4Z:c(%0@$uS-U$tF`@Qt_?$gEa/Y/:IPIe4Z;_.OcoLYUAmrP[>4_QnlZfn;jF!lE`cQCR^2)]VAY%15k9h`-L]::V?fnI6&NTSVcl<_Li%?bCZp>JE<rSTOI5E0:C]Xd9E*Q!9]!rS.:*^bHkFj"p)%\+9m`frdoU/frg*ZVQ=Ce:1(c]">ZMSL6R)Qqm"T2!MW;b*QeqfNu=o%(qU;#rU`[ja.J"?Z`>3kdeuX`/"0G-975Hab3u8(N(Le0)2Gi=T@51DZ-RVQ2O;D3-5G]a[!fES\_"_0hU.Cc8_8n7j#g#-FE_0Q%kk\c^'i%r$9^_T7r(T7odZ`ql`Db?`+,nMRb:@:jQ6sSXlZ8]U#-HET!.UD$3mX>gfD*b]9#d[a4QCeU`uIh]30r4_hXTG#ioJsD%lD3V+V\bbb2XAQ82eeJA-=PU=`fKfK[<)Ce*1PudSWDN>PI=YA$PPYeV*1"bR^mB\h8W#ZP@e[EZPhpuMlgW=eUU6S]-c?`1]@2u%rUd4ZoM$hjl.fb>Cn<#f%qhY/"]'ke-\$RcVlSTV3A\/)%-!JU^@ua`-=,iL;th&64PHtK`2'H),^@qmIoUGc31&n&q#i4<\t3E7%AA;5Oh2/JTqV7QJmjh(8m@Mgs*.N%<[3[/J58HsCAjLFZ>1pZe]e1seX<[fDX8-B+SgI`,hVF0D<ugS1gEtdV6A.C%eN^H&%qF2M%j!@>7h4HpH*4)gjT$fiGAd$L4\b3%">65[+gdRjT\YX@j@'%-"?`25^A:ZCPN8:tOKqENEpb0h1m\aVDm8Lsa0COkUlQ%YEgT/>L%Z-P_eVsDA%eb5oB:G7[Eeb]hDXS_Umo>]b2`)tTg($"NFLZtm9?/p1rG:!)BEPIGMXlhF25O[`6>K4eTfGjZD8S69"pVt>"_K+A.%#dLSF`oe/s]<#r>)5"V8eZ;OWN%YkDpT./?);e6)bY!\6IK%JM^An$iTClo3S0,MOZT`eQ>^.&noP"BI/m;juG/ql&G&>qAIomdJ%5/!I?='hJ:A4#YRd+nFVr]]As=&!c)hR^o*oQnM>qmH#NrDWIgn`\NhcBg)<=m^jHWL<L-po--Y1qaY(o\EV\lg5=5RcJisV_Ro!%H2fDk<'Y8B@J5nfJPBJnc)ihWHc5VK5BGsO!EWG:GZS6D;a"9o>W*te<]a6\)b8*Ng"MdPZ_Oo]l`VfbBJh\K="7:PX"2_k3F..3%1"h*MfJK3Yo7T8\WZZ=BcuZojS?Mc4GapOhDbcpU1;4+Xq"&WMqB%&aGAf*H";Qp"[tBa"#;Ltf)RlU#*%]Go!d]mHjn24$>L7G[%M+QZ2E*DGk'W4ZrFF<,[RQ2h^3>n"fd8oHk2-h9PpZe:IaI.-k+k.jPIee".RM;TJ25uS!U6`^t#3l/QS92(L"7Z)m5,iVu,+;Kp%K4ZEN;O%/<H-B%M'r:kJl'"/@?Sa&Ei-hgBPEmP<!"8$UF&J,!YHoRXB29H4I6<M2A+@7,9T_&DYQZf$7Fn7V'5(L;XPQZ&cLV,,%2obL/Y1$28pSpJCP59>0NTeS+:d<qTeufgu$H39pj&p'L;dWUkKr"EV"_BZ&/eYT)`P4:nO3MtCj/]>a$YTW=T6+iE1%tqUHr=bT%#ag#/Z3e]YNU1/;KueN-:/9dZ37-!_&BkgSX4=;&m^IaQ'"4^djANL5Hls>6:@aJ"W?s@+btJbQkkoSJ>lW[;e@)ED/>T3:8cCIE%Th2JN\sR$Kd1-9hY/UI?6[kkX>@3kQ*s*UPNU?Wi@2HL^1);a^5#4B[Sn=EOn0<J]3?R=YaU%IM6e&/8pNJ=BH[khN;r[^a)BYQD%OHVo)SY1F\(XKF.nYFX0mB<LLfTp]JhC"\q^K5I[n?Wf2<mG+E_]ZSH$_dI[g!aUgbP5e3T1*](g)h=*C;(aR;^qbu@gHI*`@Y.U%.a8+f&Mq`t`?nE+f-fkbR9sc?;]A%Zp1paBjsB"u3pb/S48Gr9qZVI'm*K^?!k\,D-Y$:q4.RimYt:W]d;&+9%_9!$M8[up\\paM%e.4#^kqsUfb$qsf&&!2[P'.T--'%EVlUJR9s*<8'HAZSGU.RKfdl2JW-=lf%0s+F`?m(%)kTq0%(YQ:);=>K+)06K=PCA[Tad\Xa%+U3j3q;tTleQl@n8UhVHmP_k:[%2K*pr`1j-"O\"o85%mB5k]@L@tLjAOgSrj#H!&0:g>6+4\%HgL6T[`Who>RH>g[l^H"%Qgo.)%ns/*>]!o6M0hi"u3tg_#f9+hn/_h)T^8:GTU9$lOlEm+)/WmtRR`q$7U\!;8En06YP]s^M/ge/:Djn'M;d1K.T'jM$#^^&7]Ge$2%>Yb#]\a)t*j\,A4I7\02n0=ZolpXWZhNcL9je!X<quWVe06.5SM8JGB,1&'_$CkK*=@TuIEEj1qoXEHE_1'p1#/i(KC<_CM09j9W%US3-3rB;5>`8YgnO:_<"3;mE!&-JL^n6g(aP'35<ddK_H72.@K=t?N6R;AfDl1ej@;\^iXG,Z,=(\AKUY\Y%RCm's5UrntOqsfeF%jVGL[m,[/.Q_HU+#p&o^X.A'5MR%aAgL7\E;dA]_Q(nIu/h4PZZ6iL\mA1UtLb0lXhhS$Bf30pGU:<Ia^C1)UX6;mWF6R"'51q;@%_o:Nt(K>%H%9/a@hkfSupad;,16UNs^a2G3CpBF9gO]g_eoNDgM$Yqr)V4ZV@h5>(.D\3R#isT\0<la?8\135(=efi#m8gT0Rt^&%^Bar:[9]!tP^6GpXRD^jWI?gMlB:Xc&X^p4<_-[ObOS6+?(PBgR'S<X2A5mST<%sRlF&B41@7S8H1D*)2S]23)H[7pZ'RXG49nuV%"J0X8Fos6iig"BoIs@#"SuJNN\gPS'0%hlna2e(_,t+tqm`L=Z3I5!r9#\)-AqJkTP27NgYr-U&kghLLs2021q;ga,07>h+]OAP\%IiA^-1<71m,sApXZ^`i[CoB1YG$5gP,\66?m68_Uqe,DRd5h&RJ8oqhqN<au%#`C->^K0`/'ogVV9,Me]tAU:8I3f=o'p5k@q)kp%*RW'Z:0a/-"Equ/k%*1\`%:jnKKDas3#s79CG:rYSp'*0iF#l:1P8n1DrQ1aV._$ob:a7L99VB'^A)\!Ie+#WTh2/DXY6"Alu_',%h-_ZH!_hUJ9*J"\/1^1;J56$BbCE>2=a!E]4>@R6`=aN$MUq"nk3h(Um-.s4lU72]QYZ3L4F$)i[Smt:PedR1\#'U7RN.dkJ8!.n%4?43ZiRDJ:LV`cLoOhckV&UId/o;<u^>HsjoDPj>q3H]o/G*TPca`^gW(J5tU=`,XbY5LYH$U1<0M$I?aYX@Zj2>?=YFAEU]aIl,%oB;D;`i"";I4j,)X[4[<ReW;kd=gN=c4D>k7C.g$`<(Wr!KM=CEO;fg.DjJ-RRK5?D[SZ92Cq?sHDMHp"<=OlDi]GBi?<XM:=Ou-%h;/ZpE&8D#iukUNZ$s`m'O=H,gFJ:_buF#0\';HB&rY1L!SqK"7lH_..&9!H<`>h/G4]6A!KCa#b;Kj471Q'd"73&_?osV[C!q6E%amAXFruj=baelc?Mo#7UlEf(G^(6WMY=7-gfi%oW]$uY.iRB'\V?*(dTDm334cPW$bf-\I]uM!aToN8H@%<so8,6[d6Ra31kWbA[%)qN"fkE:$tD1#F6Bjt-/IW*-M7D4cQ1d99k7Us\09GW8?9"t?!47+XoZ,,QIRQ96Bk#1O]X,VTG_(@!'8\S:93mJ!nLi=>D,eGfF%qYn:>+WT-$Y!'>qgMh.Y5&hN.>IGBAqnX&X%E1ZJFpbcT7;`rOpZX>fYd/)!1^;*Y+L>D3KW5$Dp*6hB_dJn>*U!>hW;E;h8CELV%9/a`$d3t@@,Yo3Pn5@G;bbr"KCVgA=eQHQ_"Yla0\Cb\e\<s@_e$FbH`RO!0dDrYZn@:SCbIa.!GcpGSeoa'?D&pkJYB3`HXeb5O%K6Z.f@"kbLPdd-,UbE<;.O8=\)h2#/St,X8cukL7ST"0[nI/mAD!*h9l55YoUr[G1Mompd(\UjgmPCWLEA<rc=n!;*17%mnc,N?B%!jf(HKJ22RD]C>LXJa%aj[[ZDV7o6*kk$j-mKgBPHc'eWFSQMjpf]h4(qTVN\r:==^16BhE[0dI[,@$#F;^9_"C8qtLPqkLO._E*%"c&#0bFTClkVAn:qi%5lO._E'rnoMQq%7]uNc2uU])2gpZB,J:6^Jl\VnF<NpJ`EQY,+.jjQUJ##F+3MJ+3#Q^9^Jk,q7k>Q6n5[%SO2:dE>)9:bGcg9B3Ff?Y/TM[hJgWGoH$\cN<W-t'2t?l;GfD"0)BHMZ^ATU1Uj08iPjSp$KG(=:iO21,A6!6ji#Cm)()f0bXM2`%.7dfDGN<9)0rHDG1RHVGEg6a)33ObF1=tWc<"*3]fDBRlab[**s0eQ!E;/H$ZAqE7!g_[EB&iLUI#YR6`*Oaup2-P5)O>5A7o)Y]%Ft;\`dNdBrb?eH/dL3m/KcaP4-71>4FhN;]8C%MG!L=F$O@Z]+Ukn5e`M4;kFW-G=@tQ)e)(r%'6AS/LMpq1.+A]_YT(C:$E/84F%r*m='lA8L`a>?Y>)u0Mnn1N:ID@]c=X+/#i$t=4o+iq7dEAP]`!+rop3)SVQl?Y8LArFWZoo&q[3[9UD4+GPjOnspplQpo&l:.i,%P%$WE;fCrh5qiI1ku_V&Se(buVj%b;m+A7C54JNhnR\39Mk48ia*4gCoO)F48n+``Hb]>`fe;KETiBN,c<rfpD>JmP3BDsB^&<_<%QouG-ieCf4&K,Y4]%Q?pX2i.J62MN$p/^XT>tOBGUZJeUT*c"SMr>dqRfsuXDmkC$p6;B&=mel;;Kg?AU0<#65<u4B&52E#(I?><%B0cZ<jBhA_4\mKr16Qgq.%qtD`2tDtp&mk5T76i[oF?kO/J[e<J.4O;=9F^aA5'13SmH1Yj@JT`qkhhtR[K#SipuHZCb\2"S0#kK%WN4\a;8pa@"lupqgS:HeJC;WtnlRV+V3uN?86VH5"K27C4.2D8XOt%!91.!f\h#V*``F!1BhA8*AF^u3qQe3'/?*jKCCZlo(7@+P%UdYJSP'VC>(UM1F]J!ZTl/eaR^K@"T0sjB(CuatSk/d;dIKU][@Va82s+Z<IS+snui@Qg(jp?s)p+k&t(g;tjn:X4W21GT(-nI+b%SL6)<>`\=0U#l?G!l6lW2f`/*Y'(2r:HSAlW"DJ)757G;hAJLqf^e%Ba^1Pg7268Yq:O"'*A("ZA(90L0Q1&%PJuZr7M.i8jgpPd%?])hQop[nAqcsWjl:)<e3N5$/%-g!c;_Wl8,0Okl#d2?/K(c!HAT)&t/F^`[j@cLdl[]J`0"TNLOlYio)%Tg6a/<h5Gds!I=#&@+%j5C49;!fbS0#p>%K^j$!8#-oWLFX>r3)i#1`lGHB\5C;aBg,Tg",:QdOC9mc:=k[*%b2sI%p)A_LeF>_YjlZ>P>r"k7)\a=&(fjl%=-".:qGr15/ToBc]NAU78245-E7tEp0c+qX7LL%aqaIEDLp+]_037nR9#lWK+a]8K.'5r;$SRMR=.]`R<Orb!?R47nJ@S3L22g#_%*5D`p#nfX^<pQU8,T3b7>KmC\1$8pa$qQ&?=6G*r<BWZ'fZmjF20nJ2+j.o!/!Gpsl;(b\4jt+cLAn#h#T4UN2IIM;3&6_n0G+eY%]*$)&UeBn6]"rBDMtWQj4`QjQXqW\*Z;'G+2i.DYCfhZ1<`Gp@<N%&Fku2?l6@XCLo-bh]5E@E@p%)i@;SW/O8OTR=^+b_+<&)Z(%,#Vj6;+.4s32;:#L%r&bBqWqMfA[#Nl.9XQU:i^UP%8gbl>l<F2FW:%=j;ke@F7o]paqdLXYXK9>hh@InS<V!'J;<Tr5_4`$G@\p%*=A_1Q/.HGUC)_(B'Cg?I=Ir0V'6dM"q-.6"@L[F1I]4)G)h%&7n.a7OjB0sKnkSe]2*$*m!=(1kZ%e=rQ]oldEKYZ2P+>BL;>nS%e?qUubZQ^Cn:6Q-'Z/H"J<Q-j.k`t;0_9&)Q'ZJNA7j:'Mb<(,mOt`'0*aZ&I0F\=Us,`<%%mOk_M=$-LLWYWg)XB'(,!U=G@$\I%o4ss^O3O;e+%"BEUTrLIG96[*!<#s=(3V<8d#q/mID1`u2"1)`bI<d^YhO7pYhMIocs\K#cF=X&Hg4$u07XrOG+63nn``4^mVM#i%?FdT;L%r?R#^0GBp+n&g-=UC\a^DULg^(O:0fNsQ>RPh`Ff$K[`a\%/DL4P?4W\*u#Qahtp6.CK,1u9_j*34e;YPA.mH<0#X9^oN%lmsgBmDd5;eCaQ1PoX9lH!`_Fb`8p.j\37"/7qZ2C>Z[r85-$RfSt<Kn;agT4J0+3m?`Yc"`dnal1$]XqSD%[Fad-S[m*_CdVjO5%buia718ALJq;P_A,)8=*$)3T%`HULC'A$rI0"'Og[g<B7i8m>S9g3Gj-0scFEAUIZAuC=4Ud,s$\,!"lM_']7jg@Pk.[HJM-h=ed%<@,14lV_>k]H3@!$6J$QG^hnY3H`_q<ZF^+oaP%l:5;ba-sa#-:dhJUro+6H;t@^O*:n7FQZNba>S:10o+om*RBjVkOB_FY+'0FW%]?[mm-)o%Ml0b\V7+8!7:l@jb;)DP_`'t_@QR7](fA[c,RP&Gm?!0%>Ni#I-V9=7i*&sCiYK4b8UZo-q;V'u=XOcX`FD8mQL<1Zt%VX*IM4d'KiX;cGld<%gYf#(#,V8^mA?:Gi-QfHgV_J$MuoXWi&N>!B^RP+",:jEdF(/:.8>#ScsLPhse/W"!%2!a@]U?U*8kpW!1%PgOSek81W"NZsoE/XA#ilJLOIF9B;Ip(^;'+MMk!d<'*-FMgJI8*uiG+BCIj/feDrNi#Hr7Np&Ab%SAn!D8QNNi#IEmDq=LWbAuN%=Lt"r'NmfqLo*fa+O4Cb&P\T-9:)aU3.*Pg=tEs<p.#`iQPP%6ObG+q*;q=:M%#10%1O@QQWTDM!;h[FN@TO;mB5B<l*XJ&,OTPQ%0T[of9P%gp;6"`Ch5aRf!rUa%cF@%`WcTsp]t1QPAOYo3oWD8^(UL!PMf&3g>$2\;\&msJ7n0'9XnAhaX">d@hm,MH\tVhAmuI;i%Zpir<:!BS>c>qjmZheM'P.EZ4=Hk`EbD^'MZ!W1YeOUdFZ#9r.W8%?NL`%bMb["T4:]m&p98S/_/p,^35@SGE>ioo@gI:WfG8)p]%UX7g.`Y^1H2me'TTe^hg64nsiQFVXJ9K`d>'hi5/?03brab@A=q^usA7p\/p02)e1%,1Zc1U8uuVk$4d;-'c3JUmI5O!BJBfdZ!?%d4=F#$pPcXf,DrILduNcG9G_g0)/4(h07sgJE\)><ici:5fXt.HH?A\La\_[<g9:9h;B)T9N%nB/lG?5oc)QF,]1F$HUFLN5:US"%N;apM:E:W$LF,3(][%*t=42>EEVbZo9oFH5is]5JPt(#8^Hq-1p0VJgVbZ5b!c(rF!*d?_=((F!HB5P2iaH3/l:/&Rb2*aP$oXTs%bVC\CA:!Ya4r+3rY"$^Ulb+WnW)(!sFJ5i*5_dMHVmjS+<IfV$d8_k_*b>MmirKer,\[4R3HUs0/A%2`aO"jb+W.-W5_e\F&3.r`%i]61bfs:o(-`==PbZD4%Rg]IOjQPJ']^Q9]X.'MdgT^39>_t>E`a,3f>oDY7k!N%2$jW_MQW^edCYTAEF`N2Ji?KG&<4FGX.<"Ep%,$?@5BJRf6E7\a!]E'P<V,Wk>e[Xp\0[0c#78I<F]C(!K,B:(U-^Em4#3TJ_\Ea`i*f2njnrCRpKjnJ3`>iUT(P=_8X"FJ-p!hWP%^*=`s%BNR<^>q8k#M+?!W7KXE&po[<4@rO2\,;bc(TtLq-HJ<;FKQK6^-0HCAek7sNq4p.Jn0,Rb)NUk,E.I(_YO^N6AT2BKO&2Z%n+or:&Rr3Qg]\'FA&5bE$W1Jd,$_&E#;KfTPo$PhH0FgOQklSMGgC!Xqu+LDMC%?g0kpI'$c]\_G.kCp>HV@9.N[W]EdI\SKdAnI%dA>EB)pZb^^.HT$HIs'90j&=.WgF4D/&q7fh1)uUCkrO8T'SY_Mb51.@"9*GZeR&a&bTCB;$AZurGmu8pkXBcg^fIFoC3^b[Tb>a%o7DVehM5_TgNNcbhN#id<Sg)Fh^ZY><UAQ2Kr-*09Iu6SMhS%9g?)p=VpBT.[W-(;bU@Nkrj"AK)2?ahr_ZhFE?efPm^72$?#_Jo%>>Lb^/5#8%?L6Q&1NQH(j6,9-k+niqQfe1'X/ssglb#8p.u2iSn^+Z:`,/e<LBFQ8!I3l'M[-ZA6p06uFqC5Fn!i[$F5lgN66e#S%c^T1Ll+oF,$Gu\3(D#,@@WHK5p2>$Oa%>Eh;tXl)2Cf':Ou[5j;G=\aQ+>LIqflg+F4.>&h\V;^B3Gi-o_9@I6YURQoum"qJY"[\%cOZ("qfrjicdtte'E.\`+kG,UA\@&='&n)K]h8X%dNULGcujJK4LYsi8:Q,GY.@:gEEl[AGn'V]QKC(c=;A/pWJq<";lYO^2H/c<%]%3Kh<VDT/\/Wbh3,#\L7Xd7eig!Zt$Fj,JRWB,\hq,:8>cTX='GkeFMFsA_<3H(W9']@CTGsNOL-f)d%+^3+<porblap\S&*ASU%p#W"rQBW9+q5U>SHI4%@<kaTK?=%2)[]0VFDXZ4;]:.tr=6JmtfpK*]VQ>h$*UVO-ZM)c*d7ET\:@`Pla\kt>G^Uj@4D,%S]%"ZM%h9t[oIG)X`$?2XclaYOU6idd5=b[d/AAZVEhpGn`kqcm\[N/sCdnd$;II&C0okjX]]AIcaXl$h9\4&AND.@ZKnteL@^SFcd=)Y;L%%[u`6,o<og<_bFJ![bO4:$"Q`!Y,ks/!DeD%d`Jo)9H`p=jHjobLTU0_hr9L632Go3Tr!5lE[$E#MGC%`Y2#1;]:]K.;nRt$O#N0%3@>LpcL1uGj[;])HF%87S&1khXgBdQKP&WP@(i;HoV(bDc5E]r'qI\WJocLZHK0D#9brQH.6^k;Qcm)cf!CrC57l!E8F$U!cBJgF%@fU!l<Wd&(7:H6s*g2)K!/nhsp5m:@6ifc-ac?Jha.>D<76Q@H"%<71erUOIfNlHI$RWbje5NWH"%<6*(I;pI?rrRe-9-aZW/$mm%i$cC*%AedgAa@E+U&\+;PN0#UJNT5(4ST:Qq4`a_J$UP1SeZ-b7JS^@E$HsW=";ENHGgHYMC745M1;9K?bB^nh^ZcM+ICdfMXpH0%JKI`d5-/,%eet21?[PH<<9bd$r0Gp_.l95`Y$\o/>9Gk(Tt5]d,Ip9@f8h,d7[G&D]rk_7hR3O;oujQ(2c+CjPe)>>)bRTUp0ZE)%opA43)bR="Qg\P7drW$,?,(bo.?.OA<S&m*@,DhjI5.\df?:$j<5Hnal^.(d'_A_=)8*+ZHu$hjD?JNC;sX;Aj(DP<L-b,$V+'4"%^dBtVf.Wb8oAV8j;Z&o$,`XGR.'op\n+r<glMBU@?1Fl#@EJZtC(1SVf.UuHd;:g11e6r-:gpL.p%Sm7!p<YX)c8c4*l4J&lgaYH%l^'gCa,CF4f.Xk6A9;-=\*Ul4T;%k*Wd`&07"a(`b7@Alqq1C\rNs0e"dJR_L99d.?e%qA$k6Fm0+*t:'AWnL9'`bF1cZac[d:c3%?[c"i&^W_modfT:4a^PMr)'27I)EufA68Hi^E28T`OV2[*8Pc9#*4+e1,GikkjC\'+ht$a[f4]^?,,?ndYcQIb89>A`6aTgrSm-8%C5W0bj/I2"qNo2,WU#m*b"6Yfm8^@UQTn)nH@1@,@:BqhYoX[bU;8,.<W*-EW0:-2D_AN!?h_`7DQlQA?,++KdRI6N=KC_R'j9F4%?,(cTWFseZJp%#!e`/.kLKgR7?C!ILhg0[&=YRJQnI;&<.]'/;("`3bYNqPGW`1*bHG=V$o'KW/!^CL,^U0B+PZqtF\pfK1-IhaR%4BDX8ougFk9-^J&QiEMR6#<L2I^,+'Wp5qK=(X.he@L*]H4T^Nf.UJb,V<a*\pepViFNsUH:LiaD^i/q+)2Q9W9]fM@Y<,(#jV9J%5+"WXm7?O=/`g%+Mn^PI?IpjRd[?B2A[&apfh2CUr6/ojr>0maGJ,eA>Ja/b^1=emH6b4&INC.CPGVX5Q6bV&O!5('j`mC'>E%Oi%;o488%d.4WdKegqnmh)b#6KVdW">o]pu<jA;\$fS];VpA>"bLUhGu_AhnLt"c\L*$deF`(JS6NhjZ,B#[DjQ.c+P)!;pa1Hq:=q8%jisuQF0CmYLNBY+I6*iZ]";l!lg)<c`qllm7:Tijj-m7#]\>;%5DBQcme5LkZ2=%^`n54ZDiMXFG%_k4hjkV)mG"8QM9u@(4?7o_%Cj]PKR5Ve'+3te]0?<gHoCLG'`l0=;A,NQ,Vi2]>VE_LmXn?G0rN5mqokZg`[%8q&l1UAA&d3e^*Jj'P>.D3$g>CTlJ%e)AroIa.%p>tB"_2I5O6V)Wh#D\f;?f'X8NfStG^$1Bne`=.P^>-L$Fh79m<e^[94jQ>QHU%!j..$?W`mN20nY1Iag('RN*/)XL=)^g;MKTp?%8pA;k<mD\e"=2S2>[5ANetOD)nbh/:nbRX1e_45pbM4Pjilmq<]saiq)B11g/&oTTX7sWrrn^"hinV/!f[V^JDs@#mgm_^?X&7]_%(k\3oO2h$QIt;21N9Yk?5!_mTq8g'I*RU`+,($B![HR<]OFYf)3B$JTcP]rc:7XYgmFp3N[@fQ=5P+S#[(RQNq`);kRY8K24nr]9%CuLq54Z<?!FDG^dpOq17m<??*:$"153T-A[bh6"fe`pGBC;R,+hS.\aCZ45gXBQbJn_<#d3Ic+V,^qiNc$"Q2H9Y`PDqcq^LQ5e:%=/u$C0Z@c*m8n^:HtR5Lk5.13HOg%Fj$+?X(Z<UCrc?]M!<a5&XC'f`%Ug,sgN`J>ghjg\q>C'#hu]I2(V8\R6m(VS=F)d$I8G9q%qF5q<\e'9tXaE-8`XcICV<r$iOc[7ohT>6QS*GWIEF=t>UUp852JU]RhHZW'51!ougofR@3Bo$sZ>XenS;A-LHi)F$pumouJ(i)d%A)bge\'`hE-mFPWNHs_C.qJ#C$??efKRr'X]7F?[qr1uop8_S(T#\J6pC#AfN5NrhiD^?%g=6^hpU9kjOT>F"lO!?.:/"K00WJct%&R^(/=al0ZpV&2[<GSdF0&A]c*H/SsGCF7n/Aj2$:I"-%CYFE/[2V`PR58Ygd*cHU@3p]J@;"F%+2_K-j6]hEBPmX8b>aAtSXL1T%O0#n"q8qfZl)j>iCSl)+;49mP':ilu!^]UO[*/CO!7nd_Yl?-N4K]k7Lu1r:o5]&%7f;u1,jDdaH#>3fgQjh,bF4F*.B<O-JZJXD%-h']?!/`u;?i[Ch\+fB%=jTA'Jbe2!qrnM3=[0Cl'"0^CqLi8(]T)md/CL9&C_(/upCPU(JGeM.=4B*H#^cC=H>V\Ok3EM=I0I];%RL3o_g\9Xc]J[m^D2q]"[=tf*Jth/HbL6IF(ZL$[>HNF#E_<pMpbAQ)A9Xf;DB'7Y5p@DDKu=EdZd(B5nJ1)1H?rH:nKMj\g0?jL%HnF+0c6J?DJ5#Lt[qOEmBFNmIqso341&e[kc9JELC[YUhNGa1f<,XfY_%]Qd%fh[GS&80_^[Rt^!YT<kZqG>/,'QgNB/aP";Z]QX%HpMa]m`j_e[;eA*\CPE.\U#-[@8Ied]gE,@G.1M5/tGN5__rq3q`t_^UMGDCbCe^3ndD%gGk9*3f)(hY#I]Z+3I?hh6i/j/!!0=T%3BPTCE17fg!UT3Wd/\s-VD*pd![`F_9RIcq;qB11M@UObD/Ps&(kC'kgfF;8bAI"6F)ZTrh"o.W(7`ot%.8ZC@aF&jJ,UT:c<0&a%RUCYe)jDQKmQg\XApX8g6PEe2==n*B=DK"YU^0eN3?4)0*5aPP8\-m>B82e>kMf4Kn3>1aV3Wds&s*)18hIkWL_+W6+6X@&V:C7r%"ci-Ka'2d&d,aMtB!cGJpXHnE7*4_>Kf$9F?X*6#PiW\*KUdu)8oT&8KG9SU^O#Z#jeJ5Bpg>;BlE^X(>4&[sQR6EM4p\KXGnB]?%;9()2&;an)I@jhV<TXfL`-6WcX8NQC6YLC0=_lrAigHj?+Wq`\0PeIKA9G6]%7,/u>Yp<kjDKSW;fiQ?4b<JkaLfhrZbfFL_)=;_%[!SmJXqHJ::%X?E-t_]^YntF,&.7NXXgQ&>2:Z3Lh[Ea@;geG]`mMrLA/5iC"b_\:jW!:*R5:LT%bVe1iqZpncKW;?'@6]9E*eu,%M!'7V3!Y@N9K`>*_E$=%Fn,C5#j8&+HoZL0_YG<0J,dBrTU305r`=bofS_ARY=+/$<%GrHpCI0j+lO%cf#HSl@F*%JK&?do<'Xst%fR.JPVc=Em#a<#[#%+$RCD,A85MeMZ5CJbdJb'sE9NR/$^Em1!?,/!Y5^-RgLj[XF?.BI5jr8mX^LkEurB,T,:!(d9ea(_b3BqWo%0$HC5&WG!1YQJFN1T._Lc2m>$&FGtYkC1*$.J_8L(rAMj>5`I@mM`TLK1+dS(YcF)bMJ2@Iojk=h=1g[rgRih5]HK@m<7ms]2\?R%^b#e/i0UL:Sf@@RId?Fam]el]H<$uZgG[=:a6VkWX'S#js$p_(H1h)3J*`C9bLLflX4uB[]2l[]?J!BlZ"fDi`A;,"ZW@2in@j,X%?X>D`fP(,RD<&4^ITLmOCn1F7>l!pKj1BO,O661<bN;C#2KA].?CG,'h>6gcE@o-2M_b/[\0"c&IYO?d>8*XceCK'eB1n[]NtUp2%e'W*<Bl/F'Ao__eiqhun]X;`=2SIWVH\$o-P,Ci@Ltaq@j[Vef`$6C^oh40&lLW_rNVY*,HhI9uVc.MPom.TPPAdMhlW9q)NH!nV%@/]\$qu#!2h8^hHldKe@[_/k<7-dB0`A_XTmbW_`=D-gfPWq9"]MOI<5D8UZW3F-023=-Z1WJ9dB,W&+M[i[N>FCYhRF<Q^1DO]D%Z2K=_,Q9.%kLUL7MXkO%<Fd+0bEeisnC4SO.?jO5;]d9Hr^qUCTRS*2+$[PD"SumU4g!S>n!Mf6Rk)84DV^f4gQ&0b'nslt+5Aj-%l@TGf+uF/19>39>kA2_d^t#Z%&ijh]ItBmLl=42XbQ26=c;U(1(]GV:&jj2W3kSX@",bCE.]V[kB"D1&#+k^SLV<P/N5OB'"giF"%U-%8$=`Am;*%gC@H26hXL%1d9)O6fFG6_26GLq#H`srQ\-7*A!n<=T9pITVFXB78_)mAj'9H11"2r_m62\B'$SV%aOc0o"kRs0Y6%0CIE+>TXfe.l5%Llhg;L>J==ec>@\[3O,&fD:r"3nsS.+[J"ST\Ei<-ZX*=3)#Nkc37!%3j`U)29fl)Ec)0CXem`r(M4RpX`lMI`%AKPHtpjKn;^&E<=_u#^e7dE;n!)MBD/*f[dW13,g?X^74@L;[40SOP/gr;XD.Icu$KN*=A-)pKRr88k.2I\=+mVL&sX[3p1MbU?1%6eC;n\$tkiigdBICsB$0pa3^p![k?T_7*j/;lZL`+k6Ds`!C3[1[CS>INVMKV<6td.!6FpNdmPi`o@Ru]sE+<X\L>ih-k&e5;k#[%q\>[qDr+Hi9k`-4grl8M'JA;MjLa(m<j6\s7*[bZ=nK(RQ^5I4Ss5UZ&CJ&3pT]W#p9[KT`VR-GbUO\JH8!tcgC(T(jso$J1@91\%gM2OsDUZntB#WGLpE0o9c.TW,!SO+]5%ljQl0uoWfq?!7Z,r7ICQTL8bD<Q(eHR]d:,gG]2%HbR+=4c_S&ROhHFJ"/NYks5RpTDe%S<e">^Lc/&X*V8T3+p!NrV?b&0C@kb]q$#.lW+Io_\]^r!!?$)`oL;\FO.9a6dF4pB8TiS0I7?KkT'2g.RQoSe`hMO<5aZY@4Cu;%[&klmFsJf\%kTpm56nd/e!D^OI1mF1ZUlk8$?G6Nl`8#s`A'cH[4DCn<pf5I+S>H(pAIZq=W>F]-ku"#!c'2YjpY[YcOI@<`Td1A%/Y51..gnd3.<$h\#^l/<)+(F`8],s"USU=/NeUs7=Iks41ubc3M\ia??(FVa2@KJT<fP%B]U'J*E\I\3+d8hXgffQ3!]^/0qMEC(%7P<ql=dk:q:-*`;5PXVJ#fbH<RCS<L%P<i:O7U+:OpfN$54AD<OZ]M'r\]fXcXj<NQUPqrXShYJ08nn;?IZ_;Osd*r^E\p%\K!VZ%:F(_m`KbQcLNk@%n5K`Pp4drG/au_3Ysq)DQ54]p"eIj;A*O#!._R<+K'h`1rUF(#qiiET7E],QoDA_3gl%Hoc/%Dtm@S^*A<uK[%LA4"2oY[tK"_Gl"`?2P`GPAC"^"^26cBNMp99U1BGHK0Eh,WX@q,hG2;dP-Sdgs(2gM>oi13\+GSefL'/jrdg4p+i_$aI'sP#6ZU%r]U3]ko'Lcq^ha#(JD7e)8$+Bks+0gpYqNHU?Q#rVu37dot+)8L+e!*fnNWa4i\3D$nJJjQ6/MY;$fV[.l@'^D3^g6%8:LCh#JB&%>C7V6Y"D_3Lu3S]2-HV[EI@qt/j?Nl0h(;+Je3BNrJKj,*e)A7=Cqg`\J<l*D!GSbd*&E@[MRpoT`IO'(7NOVJjAc><XdmYZ,JS*%C2nW+P!^2IANGS@d'YC<CR'*X.*$A5a`Uubd:/QK(=D-oSr66\CtFYM?mo)me2Hu+DT+:mP:#p,%pMBL:$stpETI8]<bUN8IK7ae%N(W"4%`6h<i)F71'ci5$H?q6Nig9qXG`LfnM^SK3%?=pYjjic$DNoU9Arcsoi$12M#SrH\gO/e)$Y.=;J7@Gl%`-[&Cg<OkRrDtG%`<[J+=(bPB%sR,:4C8*@2CpR\i8FD=84/;c06C8In3*Z^fSE_2QTt\kZLj7^1_"u=5+_pI'^2U'.Y3:5aXci:hj)j+=^EVp8ur"'%$;`7WE9C9@'>m:VnGU/<onq5i&b!u%NMrg."K99b"?+2l@4079%6,(QUiA^W:k)j2>cqkr=r4e[qm]'PMSRO<]>QWKRZ>*)>7;Ol%(7j77Pr`jd\*d<K__NHQLTLdr-Oasod'nBg'[YnIm)EHRfH7Ph2RS3I(i1o81MXG:d03-GH7(GE*=rN:Ict7!0CU?X%_h+,*7shX%<UJd`>rsb#D-k3OOBm[m\,mAVZm4IJP&7'bQtH3/cV:QZd8t<mBF-7LcuC^H%\R=1i$+a1lFd<h=?b]F&INp$5)r"70`m]U-`/e,%2no28n24r;`PK(f\H!J?3#C&.S=&'L&>l-"ONB6Lr.*OL4!8Wc"n(T&C_IY<(s-e8-aDb?7s@YIN;%?UbDhl=[.oqY9U5Ah%cnmn%`#_%Y`<?Mo!t5Ii9YkRR$"73q_[K4BPW/t2C:V38)lE"<]`]TDgEC#\9LL"CT*,XBfQQ<o$mMYf?u.@W!g^l?+>H62eII[q@r5[d%%e<0:UE'YYigRei9d0nkK^;nBU+Q3Haem]Fl6kq!/BcFc.ibhH'Od#PS7)N@"h+jJ>MW-.&DA:Y`3Bob7%<T@`7i->iG4#Y(s!XA%q\(Q5VDO$PKmW=M6#ePcdghqZBc%o"G_+sF(j:VF1-Ccq;s;-(^jMG89Z(um?F])1S+\Bo?WV2Sjt+4qQG/8oN)G7.!8FGH*[_:5%cle^JX76c%*aYfa[h1D#T!*2SJ4o+SpO(;_(;lDIgO_0.pFOK7*5FXN(Y_((jl84H$YM<P^sWKq[,<\)m(jC*2.G1-.J@>boKC[/%?oJ-TTu@Gk2(Srk+0kk[\?5seB:2GU6:em0I;t'b3f`N8Mte4<\fkqs\Dt14X!',Wpk3MeJ2#)h@]-@kbJ<XqhRu3VZY2.6Aq>B-%'k3)2#)$F/Nu\f)(bP*9;8r2KM`M^c+fbcO*a/WoGG5j:!0aCPHO2)3h2$+X&M_7!BSWs:6&!&.BP]bipuM^8@;31VlrL?4f2'aT%#_kg#0DN=DF_70a%-E/Fg)e\C&>qXATb#df#,W3E_5(Mt&jnrC#^qMZJ=cga?.&BdMg10l/#\ft_WW-&R5VGU.,N)^nNBNa:!7L`%?D9lM<1o3r>"i.jXZdhScOIS_Wa#cT,dm4(rZ^mK[KPo<S2baF?mpaGP9!%q^pHb/K4sa[6jcM`U'9XeSXROeY,#%b-.mU\&dHGf%@LGK[q_?b)2F5ihSXh`B5D[Jrik(co`oR=2mQ`_aA9i_BP9!&\-Z3$\Fq>TH4C9I_J4+(hR=cfqZXLIl0>TP0Q7tjQ&1oNX7oFF?%6WkZXBrb#2?b9DkLQ>fS=N%H'9%352dD@i7=I&,RfO>H5#%>ugGf_N)J7O\L.."gZ=k5KZ=L2BO((1J8LBf'bK90(TCq7Do#u26!%]`e;fY+q%'Uj\RuQ,'ZpZ4Ur6'WFfHj\r>od7&HDR+*>@9O_JF5qLOf<<,P`#Ta8=&FnM-M`SclAq%HZFC0KXE%2FIR:5(4T',@9%-H+3V[c1p-]\Lsn(J@;CThCQClWZ9UfV)+(NuWqikBJ7&H4F4EU+NT:6@GPCd>W=R,;IQ*;,d1`(4oKsGeW#BDHnM+]T!MlSkUFi%Q@c@.(c7l3[=.=olCJAU\kOR44!'7C.$E!3D9!sn1\$VB/M>mL">X4n8@MN2(ikb?+\;tBd(o91I-np]Ain$ZZsd4+]^k\gq=M"2%k:kQ0EaQ+hThcPF"<Q@O%MF;/P<m%Y6!Y57,JZ;b/<.&g8ccMfr9c1HKGOXXZo2.Te.?7<PSqnBThU'eK6d,JEH_e2M17Ip5'90G%5W;"`(Xefj_*OYBg.2SAKm3["Yech0%+,Rh+T^9K+I\]PZ!d#Q.@&7l)-Ydt5.pS``,RXmYUDe.C&p"$gaf$/pk!LDc/;,<lGf9U%CJWa*N_;F/ctl9DJ&!tY8j`H9M>+[#KF]Y0!7^FeDBG<EMcc-P&NeHfM+(U``I*6J52`"Q&dO.KU.br!Ja6ZNXLLV$lOd#DoJ14o%3BTU1/o8X<CPceWq1M3>:l.6$F:gluCP$('9*3r*'DI/I2B'ubotb)ac5D=1!@9IHBR#IH-k8:W2o@q,/AK&jOKMR+(#kPD+s*^i%^]ABTA/>h@6IRjQq[HD9!AGBtB]CR*'7g4.*/6CEGhd7lLE\A;;!T?>_DMU9*;I;MUQt'fg46!5RW?!nL#g+)%h.+"`?k^p&h!.*%$d=-2nqFLUe.8bq_Zj/'CbraY`"V_^OCb'gJ+7p#%ih4V-X0sl5m?d&l4c!\<WI1M?Ese?&*2`EPO3Z+Sdt>7>o^t-R=aZEJb^iZ%=*YQj9g2)SqM>O"$J+>']u7U!fQ:`(%3kd5n3&b;J>?l!-eT&F!Z@e9<Top$F<CX06&65S%LqKKcdN@>DHTf[E>S\Bi2)`P_^Ju&%(6Q%=1BH$Se0W:W;K/nX5rg'SF<@&/RYbVP5+!/)-Qu,#E2YC0%rU.@2TLIQKK2k]'eQS&d6[sH2Q=Ya0SlP;'Z@p:a@\_D+]p5!%"YUbO0-D[\f1aMO)W5BtoEB[XFV;aXK5q!K.1k;cGH^qE[%T9*!#-E98"AN=>EDL8-FBj^6\lHAPA(h:>]I90VZtrMYSakZBu,U*%!"D6eVIM".d-q0.LDEKq"&T)\7rJdVY\XQ1J<GQO"Dth=?kTN79*+kq7D^tCj*>%]J<fG;CaW+rC#Bst1@A><i#;]7blk:c(XXfk%!.tFT&.l'#8X2+6lAfi(a;0A`Ba;B/9CN^]m\(qWErtBP)\P#d*?d:m4Fq;V\7S"k0e<]k*meLAp40R#[>AgVGS,T)keZ((>6sCZ%bE)>%6)V\QaNg'dJ-\@BC'gS1j3.Qb4>;l,,TR^;1(T<0Iu9.LM[R*3%#GeI'cmYg;E-828"?F=Ql<km-Ps#[k\LF@;Qp18]bL>G%ZO.ffaIloC<@;sD=:l+^[/cV':fm]km"<goDIL(;d=C@3=J_C==9=:oKFkp)@0M6>NR/0FaU^Ys#PLqT'h8I7e::,h<PhS232i,n%KVuUT;su#7O:b[MSL%H9Tn]fmS!O;+$+X8*$u-U!!coC=;P?DC=TD")aC%_C`$8\1&D<R=lN2q\!_*#"+Ahj($6XkHK:kQ,,J"+H%L;`<s2"a9MJHpSRi"672i5bt/,cG+RG%6c""[1e18;`#RK<E8)k'GO3QP,LjK=A0Y$4e6lY?6W:iYRfs*jc#S+nZ3EG%eoa2$RdR%G\7XQ#S$lY@b!eYlPa*&pTi]`Mah^q]ICZ.'G17t+CVINCaUAIK%ss`Rc#d+.h79?@NR;L6I$h0d)$">JCY<G5pHQm&=T(SRY>B)%eKWS($nZGj?36Zk'W`V+_Hhd6<mCs-ZhW8("F'rKf4$I#[D?WPBZ8R1:K=+&</3>aBG#jj=FhQ$Wl9o\l=I90&M;NYZ_G05@%euL%BZgIA2dA;Pr4o_rfOY&()G^3^&9EqAa9S:ME4<Vo0`uQBA0-aIaWdrZ4C=)j`#@m";YBRIfu",K&K=r%3h7tCa'&2fZ;!jX,gJ8$%1kPEg15K[d"n3oVC3,49[&>0;KC'1+,/I:DR#.D37RG3jK2N=*22N)FcM(eX)@0qb`F0\#0!4n;/667)'@^YeN/"4K!/,7"Ku@g=%;U,A&O[-u^TP"H=0Iq/?UH&Uk(bTe'!1j7K@RZdJ_jL[9&V4^@J@jC1!D"CL/]?"H$[`IE+KN$-.ptpk)@;AVG'l=m+1Yls$4NRM%[Hti_1o$c^cZ/W1&DI[hHKmuDZ:Y$$6&##h+Dc:fKbc%T*UP0[6,dgAfR4DOE$8te!l5I#@KmT1qS3G#"(c8>%CRN7\faaLYWH=g%>$Jf=Sp&sE@1k.YZ;G=H'nT)4:P_`&\QHLsHD3f;Ys6S(@[C0[8B*%SJE_qc"U89:Tt"Ig)%<_eT._#cU#@8`*f%@^m%HCf:#:C6%&Y"jG5@SWH6b4"hZFI8pndXFdpo<M(Cf!AuLEIdJ#Mg%UD3#0O#nZLI/l%+b#9Lg7f5l1Hd&(glK,(1q6%I1NY%8uh,o%BoY&4$(%D#lO710H&Q6O8tX"KR/IGNdH!Rb0=K('K3+'/?j"4[%:'#pDD8"^]F,&;#@FfQo3tj1T+K=<pJ(qPHtR=LBPj+oAWOG5(.YrVurS%co+&cZk;9uMY>g0LVf4S\9nGCTg8ssKMqROT)kZMl7F@*8Ec<@<gou3!=&T]#=g'!(kONe\4Yg!!\3u4iIfZ$STPqE63mmKCiCA6%i5O?+8A]p:?f0IR,KI1TV*!sPP?@u?*(u*h67SpY+_kme/VelcGu.o\![`fmLqOC*P0f,K$JYj`+M,uCE:LYRCJp%B/dOWaG6kVZ%BX&!kM"oF6Sd/Ur@'m76"GB-s?DW`E#'_4M)Ibu?$`scd@!ojHohGOg#na1k`7e_:0^6h268a/:2dCbeaXnl:%3BYS2+=V'JbLK(%g_?fE2RWrIX2bu7e6'D:%m49ZeN<8RkIIj(@'_^8=??5'C;b?[@Ro5QMgHZd?#'P'(lRf[".6f9Z\4Q[_()fM;]R"5r(U9VW4n9,%iUJ!0%H%.UQF1Sb;%U7OL8=C*/ja*lPR9PIJX7Rf]1`,6>qEiI`W$N(n?`na:@^(_r\(]*Rd_e)ju^TrBP*pqV+c"A]H;]c;QNSH%B9+nN'GIajiO].CEt2=LnU$DocG?D%bL(Z^1qBpL_&?/KN9kcX21/TWm!$g2:]ALcLD*jgVK9T%;)4!l((N.i/Y0K3&_1:f#gIR<%!01^38-<5Cb0"r6lP9Q2`bhdWhaFhmZjh>F;-cSBkH_)17%f)Y$7mO0h*ING=bOF1\O-HZmRZYLpW4k5A8/u5Ftu$UIb@S8!'1d`%]Thdl5\KpOf`ToNL:Dc4TT"?H6n4leqE[bFaqbrpYf10p,_I_JOI;M2Ib8&>T"^r[\e@cV[_s'c/&kP)O'^R_VIKH#mNHk5%3/G.%=#`+jYDejZ6<nMXnO:--Emfc2MJZ"_2.A%S<k_=8$mW@FUGhnM(WNg9S5\9a>+8+7Ft#bpEm`oC8s%DMDf-.fq2E',jopp3b!*Uj%>YF*"2HU+P7ZBA5/1HB*Q/.O?a>^_-4k?m-WU9KA/.?G1&*/u?HfP8JTKsF5)c4,^?\)0@n::b"5dc.2/9jj=K8aUKa'@M5f.BBm%BFtj^]ntb72Yl,8WA3?*A+8^p/OJc6a#4>'>XDJ?<"!sZqd;&.H3mukgri-Y-'6V=G1sdGn2`.EZO/tq,<',iEp6Gn>hh[($e"8B%T@:d54Ys=:(0\>31G-9V4H"tY]+17i=cK.JCsRe(#^$eCCV]Vr@t:<")*7=l^(n&;,;4=*7D2B6gSG\C2TX-Fg`>IcJknV3h5;7e%1Iaq:G5u@\q&,*#Z_BAM.JMHqaQ1kX_C)N91GGVoZ%+"pGG1Z<b()i4o-=]rj/a?T;%'q$ZCdiU,nM5-QP:JH]G3a`4rsJ13;TB-%@DE?FFXMC2HPnon-Q;qCaig'aHFX?QK*1OPTuS(egLi0LD;V5Z&-A>7(C0,ALL$k".W/@1!N?iT2"ke[*TUPn[Af,g/h*rogpl`5%qP(bBCmk.:PIp.(1r^J4iB'%<HNCbWTEUrMNQM&!iWVSY!\'P-2?IiqpTVUFfO#.naOAcNfd2E#q=MCY,N4mg^;h#$9]1#G$=Yl9%Zn1c)7WC*4L'Ck*qmG["$bVs75M9S:#'kHdeWAM3.Z[n)+OZo50RFiqqS<H'ej>D:T&[Cc06E7d5;dfk_*41W82mB;Ynd%GI.9e\%a8Lr;gL8\aLOA!5#`Po]Wf<NXNI^u]?.p,TotnlnOokunWfLPKGk6G]Z,NCT%f:a+=)mI"nQtP_c>44YSIL?;R+XdR,Zc)CKB#Nf%A)!/n-"g3dDdZWqE6,mbHI:X2AW3br;'5;c2?T[hnpc3S*]Y(2T#6T6^?`^g@Z[QRd2#7eOD&(.,=%u_*JQlpT?(0fYaMn&-CKr]%*Pj]GrN#iYPA#lHA),O8.!ceUID@a>\hg(CcfE\3F\-#"%%%X-Oe0SZ0P-FU0D^P1NlD)ojWC?Z+Snl<dWqI2=crS0=Vm`lk@uD7%*i0W4]Lof5$(T%[fFQ*^AXXt=@=M/ur;.8?*rB@_8=s@D,8a,JZSF\c,/m":O]QN>Z4e$o&Q;:-)Qs0C<7fKB%7%n!cK8f%"d`7o%\oe#m,1rS\&)Fu?ZFb[_X6h]M5oZl(S?Wda]Bhd#0aH/pB+qD.0AXI[CFqe!@pbt2+W[+>h.?BcrPJmnBUhNN6ZjDq=TPplr>jhW%ZP+IEf4kXfkt]6G'6rkNb`60c"b+k%/TUi7aak+&RQRu`[cW.]0l^V<eJl@0f9\gTB/$IlJIGENs4dFZ,s.:Ma=lb,kSK[b%hL7p%Q2*C!j@\3EM/,JY`AX+m"u^c[+rZPO5`Y!q2r-Xf;Wf%D$r%p_[7`=$E8[ZnQ'E)P)&_iS).\_r)h0b_I,3CIgANr$fpHG!_6h[d%![Q-jj',d2MJ\$mV6"OcpZTmlGaIm%fWLUf3^$j*Y=jdPga0rd`W'apj5_RWd4bi4]"lgF1rQ`80o=u>V8\lO_#qOU,UBhU0f_WW%@Zr&NO[RhH4ES)jPP2YQ7msV:_t3@Zk*N0OU9f)Xq=4EDdc0?^E9L^p'"XsHd.Z0tgBT=e6G(D2Mu)(B8FYk'Jf-O>EP9M/]q4'^%eAhA$%c.9D@Q,*OI(_E@ZTEIEmJZqOllR:P<(fEqaFgSNJd5Lk8n*)SM!;!I!;^+gqQgb-(7Vc!U8\%iF;8ahhXeQbn6Xh,6dsAn%r[9>Ka'[C0.%#@Y(+482R!6`>gu0JU6`_iC+F:o#cnT<81:jEf3DosXPGSh3dnCHHiB`=2QN`MEe?mif.cr.\pArTQ1/rLKqNYd)%gYgtoji0`9eG@'8TJ3e+MSp!j3`p*t#TSBE6Dl6>.9l-FQY=e#7B5uLG/k0'U0'?Xk)k)!XAJTKe$cFpN`VYD>p=E-\Gb:UEM78,%$fA@&F$g&+j;fs%'69?^NTs6Ya)RbRk12Lc6o&*g$0/&:+5QIoP_7PXEOV'dfi@L2qX^(r^oPs76sE=dDMq6?FKajV',JH%Y)+26%Jb`f?OJ/(h[\T^^HSaJqqJpiqY_.SA?<ZirKZ,`^EUCNLgWu-`h;5mE/&^3BFlT=lqt;AR=.t/JDJJ9S_]Y"^,31:ecd4".(aA'Y%&SU";3AE2nO7%.TAq4s$*`kT[df,5f?t-p.WA-Y)&?rY@hqm7t?>gJgq*17G8(9OS:c*`]<h=3Cq8!L3?[qtPrAS)sqYBSeIK&m$%eZ\uAna4rsSmM4ohj]o1X0]P:IIe-!9tR[HE*,8ub#"Q`jOW&7R9g#?&XXe='X/d&%B?#@L@Ck2bR%-J:od^Hd8(V2;7],ML^]@n%BlVY.p;b`]E!tWTe=_4O,2ps(%ck9rVe.`7>"APh_nWt_oiH(GrLof$]sOK"rY._OGT1hel1\Z#LSu#D`$CedZmG\7%RTW3Dl<Af%kVg:OG[?1sZ1?:F?;k^)BUd<gU34)qk%ua_Q5;0>b^pX#`0KnI[YA8W%YV]Ka>17>hVZP(PsR4,O.-;\X%A[@q/>fj'eA&'8i,pR%?N.)FqG7.Uh7M:b:N(-cr:'R-f-h<ts5nK'oRnY$d#j+<(Tg78^?,gkO5%$*rhKK&!h0c3=dq$N[-=90(t_.B[kGM/H/TV.Bd3iM%DKDIh?R3-t\.A7R)%6WL)i03E*(3j-pA*i>DVN/:s.f632Vmb36gLKt^Md3AM&o`65l3VKh/6R`hVchj"I<9]0s*6]e>$BZ7jePt%Tt:L&#^Od^+"ASNXmTo\Zl=;d-ahVPO$?_D*e\_nns>a7\(d6&J#nM+rRYD*osXhjnWj!)U&JlAa6h4PnbpMST,um>GgjAfrq\kN%D1D9Te*FLCnG;1#YQ(BRl1V$Qc[P\6Ak9]4ir+XFrKWA/f!IC)J+rU#ZX6b?n(/YrHi*GM[d@n2BrbOG;#b#WF;?Ua?ubPL^05Pi%eC/=i3ZX_IdZJL%0Oh<!+CV^0r:?USa$rr9N^K:NOGX(,%B.Qa&@`)F:RfYOO!_A+89/D#*k>NfKsdTji,[K"mC.tHkJ;nGr!*Q#%*A5AEg%iDh/XA4>$D%Ao(>u`lfu+6L1Bb\p.D^O9JHpAo"%n^*_?Vh\'l;/-b>^tTfT5t80Xrmc;i0H_U&j2)Z%7^iAg9@khR6-h%:-+:GYi!Hbmc5<pIG3d6E!O["0\`t,ar[ri,4=?;#9P$&:<7R)\3;$CZ-eKbegJc68AGB*%r0a*UZckM<P_4+e>*Z("rWPbe>R2Z%/kD]GfssLU(':,jSl\d=#'*<4pB/j8EmMHDQQ;RgC`@^%#fJ#SSF9M_"O(BJdTW7d45\'2/toE@D4]ok&`9#c_Z>D%6#s7rGN!7B%K<Ab5e@j(aoI9o;k_Y[,d0$KeFV@X&67m%TN;.sb((!IBJqjRQ:%D%)[Ej3GX'2,b[`SclR=NX24(;9FA/J6u,PJ6AHe\*2&9)s*%+oAS(]6:9h@@IH=BK9Hk[_SPNm78i86_Z8F*"?C[n6uej=Epagf3B&i<QWJEniK`ZlRoej+Bs"(1'-;QdStFT#bmG#d^gj9IV_["%EYXi.H!c$P?9VR_-Q\)',4<^m&"m_D&CEYbLs"YJKYaBEk')Q.FB(+I]FcmU1"$PY(?:BmlaMio$OdYO?u7^UX;oZ1e-Nnrk7/P7%!K1r,5U_CWVg@7_V$D,XQ6Ueh<?)(,ltJWs_ad$sml@6Ua4/prEQGVeMCZo,\RX\ENt(Z$Q2e\PJA!27Ge,oQMA:16DZek+rSF<W%D1VC/[=dpFW2B'@o<fiNTjU'@E5&#fTQkC=V'E:*Bof)81`S?1_JgN4%UrbUisQ(3$lKlrJF/;G?PqR(Zc%ZYTbpf\N6'/qdUIpo%-R_iI20$F/E3M[Wr&KN)Wb+=M\^_%,<C$2U>9U]gpY+F1#p9Y]=<TCo-QN:U=(SX'@Zg@q<Z#=E<omeE_H`U3(m1*h*>lLI1Mq(G%;C&JN!_-D9>-!B\$E8.l-h\Q^Y@4GT`-1?$V?I$1m!Qd(EKTE$(qR[aJKZ^1$l)$sI.q?RnDi_>08=e-'dkRA,3k)[;QLO44,j[!%@>K(gKb)!49#FE/g,Z%/9LHdn828:E9"[$FoN*SH$J&[b(H-QZ0Q+6n$+4/@OdF='L97k7kocHal%[0.Qh2[6[TG#)p72)-PuE;N%9-s2tMoLY_A99'8\Tlpn)LG]+-FYH]YC\]/>-A/8b**]K"*l#QaNSa65'[lEWi]FT_:gkG5"PmFG%>be,Z4DmZ$a+p(:.F#2\[NG%N8u`2U^g9k&*.hR`8L!E9TV3^HmT7'(2q<B5O;lI0Bb\Pot-T0`SKc57-<7%M5<0ddKQRs!JJ=F#;JKU%hg22!3nTs)TICX3Ktup%edQ\?V?dK+WO?%,W$!ftdS>K1/u$/a3Jg-6][sY#l;KZ!*Ouso%Pj*Zb3h]J-Bq5e#R\!M0dF1s8t_iB3/QDNh)csdC0Qc)d:HJ0%<(3Oj!o7(Qi1uiMS3';=eL\Q]c[h!jP,e5o-n6a5!D@87I]L\>]!70KVO20ZH>QJb4"cjiCnq#^=>SW=?nQ;bkJWg^em>_+J@c>l%Bj@!SJc.W$@H4H47$goLZ:Rn^_.HmhOi"n60_N#.aKiVZ[]+WW&."uVLYSB:AM;G95fg/c_T2mP\`e!+6-UP!!%rlr0]17D)1#RC%'LiCWAPC(1[DR+(3='q)I=]2los5dB+[CW*ntYUY?J6ZK?CX%g3&W-rs)8K*4u\X+6M#OX;[(ASfeS0E&<f,N"B!'f:XM'e9GlYe%jD"SH87_jZ[UMCZn-nn7>[0em8J],?Q]aeJ$mE2,=Z4#C>/iNW6=?(:dB4+J9$#I(Jfb!XrU(Y87U3/U"?@>i@,iSa\Vs?+R]]Fh%MI&D,Z,do#'9R!Q*2JtZ&CKYdVi;ZPJuMmBYh1b8R8NP&#nJS#;9E%>[KTW=3c#kAmL,eA[dO2uikaB@5VaJ[/7:@G7PgS01T%[U%[j2l*&)=eLO=N4##2j#pUl#\EB@PhuGEfm5HH'UM/l%FDU%09VK<AZ8:1B1D;3f>45H;`TK9]h:aph4>):g>)^bPE698YH*3r'b@%XRT997N"%]<%oCKden&1@b(V@X3)mMR2(r'&>,qT%p%-\"\6A?;m$X:M0aqdJ:R`p^VNp`ZnJ:04#+a)nUX;049HMZ#C[a%$j`PU%(D)[aN!$P3`@`&?p-XDJ;48SIq`rd;bKcm")Z8klod@8SpH<;\5%@`#V$Eil(W97=cIs;l3!_oFU-*]%i&KM!c;9n:rc!MC2>^*H%Ym5^T9["Z/6R-\H:p=[h0NBHAne5sOC>Z"-j5JV+<C2iRL48b\hcP=]Y4@sWTF7#0MMOLW\kK`aC(Pa9GuKGOA_X:[:oqkeA`OE?%S1NnWC:oiQWnS.4F$bT^fgM\GJr2uX"XW:YV%M/>Td'UNbZm4t9pgLKPg=orGDN7V0X65#p9)#KDW@#dEW0F>NfN:?m7b[XiOZF*%,q<%)$q?k.";ZiTPSB1!6!=]h!_e56%/L=.jO$mrn"V?[_rKS.=b?bR=iAuIo>E/C.8a7YbnWR:9_j:cNB%bZGkf[[IqOcB]+mW8%8.-`/WNj<7'ZUAgb4MlSiaEE`?A7T!^*\O]QR6lbGkgIGal!oZp-qSKZ+qILP:H;>_*i+\Cnbs^Fi23u^.QG3ho;U`5[gh[ku@`i%d6^ms5Tq.O#8F8:f?$QomuN*f">XfF.c@E3g:f#UaIm73C5NXNgaf$;>EG[1S/7_gdG[0KCr`udc2<!KBTn>pBb(!t<!PjXM;bVS%gmi%4[M+"Ag*>H("mlHFQZsL`$5?^F(2dNV,0O;tJOLG"jr`]("\TGq#c9gV\pqQ-^PF`jC\]6*IduOh8LJf,-l-S^@S>.8d1E7Z%n\'hB^jm\@jrTVT_ik@O1kZW],AS,_Mp>c;M5?q4dlDdkN7J`e#`3T@cC2@bh'NX:=K4YhOA6O[;=Yk?;(9LEGAVM.JbhF,q,Da4%DOU=KL+pIRr<42'M8X905T!=X'5>4^&=K>jHX&FZej.$8"dR5B>Q@+Ip+M4&[?:.4A'$oDfRT`n$9hn\#1;80Z:[FlMnA]Q*2?u#%Yp66ED&89\W6E\?@1&fuGpX8p\\3#[bd0:E2(0r5GD>'g"Iq2m<:UXkR'r,Ulh!GM9FIqt%39^ab2YuKhpi=:%oOb4GMm'&AMssc%p>S?3<aeW,"[Y?uOCgKaE=h_Ej.F^tcZ6F_7W"Wj@?>o=bcg1MbLOP+fcJE:6+VgnU;1*LIJrs<=$Q`S*rP]s2t)6H_)@#&3K[%E%a'geiJ"^%3i-)U6ifoJ-"9Rro.g^tjUbN4j#=X%PXFagcEM2AMVpK=4pkV`dF7LO8^O_hFKcm+2$MSU[aAk$)juEL#2@%I,?4iIH%/e<nsgW*ema+e9JK7FAPeL1>k6#)L+MIiM#lHZp'!NV?FnkDP)NB+#hfh)Tg+F#-VQ<UQGb<Q7Ye.%#O^fSIDeR/kpWZl<R8;FNb%>QLP2"peo_0LEk1Zl"g5I9AtaO9NQn&,_$+?BmFl4&elqUs6>`oB/6<.dP'0"RZk0Bsho(^1e<0Ju)(1ELif^WYJZP\_\A>'KjrH%)cV7@]%!I$D*8ruFf3T=]eFHoenG)Ddl*^!Ruf(g91LOQC14Ub/.;O.s(!H^&grP8G08N+\hs$jH#nk@$:p^sJHEG=fUZ!aOe\-J%-m36]/SlEGl6M$&!i*G[knQIN,2*X@C1%VX)7*4V\3-Q=0Ml+-0%Vgt3n_=W?8*X,)>gX"$@nsCgl+/.Np:Yl:@>#_Ef+m4Z/e*4%*&0)d('_l(Jcr"[",%nTC!'X$!9f3:Um?:#:d/RumWf8.0m^AF]YY_cD]uYn8[/Cef&Z[K,jrK\N)4i.<+7lR10.Ifc66H:B[oEj%8/Xio7_kCVZa2?LfX\GLG,0:Lit,>_@:DLqBO4WUAmH[F]]s1hPWSkBH)(h&08(gSk85;0:ti@-aGNq'mdsdc`nR)mVpDMJ=ph\U%f^Wd:o:80I,4cAQUQ7M1LS/]$2bI:SCp-"(XVqdOVD8%Vj\Z^fXOY2R$2ciL<:n,<0e5_LW+31`:s;&?7O>VJL8$(%=2M,of&%'$%ZSg/p&Y#cMrZ\BDVDR\$'LqZ2P434omVXaD\=?lpO+'g-Usrh%gbWomdEN1\/uWMAbRXtp<DE'0`)uaj5@UA<A:C`jS(NJk$$0OD%*s_&u'`-Ole?@TBGn:@*`045nDPI8R=`'Ce#H<>nOa$(N/o9"bE*[!kK*=X1.S5A9N7#(BP/M#nh'>"?U(5_X8^*oK.t4`p6>iDB%WOuVT5))d$Wnd2\P$GZ,V)+;\S)_Dn815N)FI3gMN4ZF8qX@elo\#*J.(Je&dj!+t:\7CYfl^=WJ0%-nD2];d`57[=fY:.=AC=b@%qdP[[Dfp%pLm=5:%ML$b97pBCdUWI:7R76MA&In%=T6.k[edq\6P^+M(^M7a>6aZ6%(GAP/'U4(himStAdjX?:Wu,bLqsa)q;3Xe%4L4IbhM.Ed=O^>mmibk#W8p5N:lMi)+U`@C(l?-(`c3UAie]X<:dj->Lk);[h3_5+9%K2!"3.&c*D6c08qmp5c`G"9Bc>h:&6$TM%THB8c;R+6I+?duWka2b!/MU:6YR#B'ISo#B;2NM\5dCR@4*"e#2]lX=Y<iYL'U'^7jQ#GHddbt8RLaVMMH;NL&e34-'/X^7"+I7)%-6:"i9JRKA(p[6Y$tFD`jY>-V#t9,R#bon3K[>ihQ#j2n<f6"W*!4@p!L^:Z(iLi^Mm&s>!Tssl<sAD0ZcrO2]TPS)#a)C3TQ.r0%B//=>1^)<pOV+U$q(P]W`j?[l%VGeT9lDR!;_Z#I@!BZeJ?oaA7r4<uV*]uQ(Vs(&e:ZBW"DEP*dc<et*[NE=30[0]2Vi3)M.'gC%cEC.S9hBqh"j?&]E,LLW)t5PhLs+Ifl!ShP;Ib6>]7J3pe[(S3KMhX]Lb27Nl$$U`Feng(P:KaNMqt787$``>?D4-i]!NgCUqS%7%2Q*?3gEP$0q&YcbZXUIpK,"cD/)K_#Ta7"OTFMHd&P&p<8:bEA6#TD.<V7iF%!:47fSAgP,stLQ+!hR:N($/Tis"5[d+27ugn!lO%G'4,k$]Ir>Y`nZ)'Fb,M!T&Q0i7R4uj=(1;R.rdRBIn,&U*_:K];b!LP@[4m4HOdVIQR8/007!>CV4[a1#I-H&H-us0\Q)-)iOY2%(<`LK"A(Bs0ce8n<Up\i'gH+KN!ps("PZckRQgW]j+:*%W'[ZAB-Uq6`[VRFGK,0#ea0qSV0`5QGr\qe3KeNVgk1XLn2:soA!s:]%dj*2=7EFi/FX68MOE,;%=aQbBXVF2OCR8P#Z^*nij5q&XERcKE8+t%YF:c=5")0EZ\%^P=mO!Z@eRFA8^$OT>lGOhB"<t.$K8@LL%@?"&,n4S9[QI"$O6FEko!pOR6j]K_iU7;oji'_TKYQq3;j1VATL"'Z@]+QDlQ$Q64>96m0<o\AfWa&PVQ)-uQ=:n*\G!cTQZAT$i%F$"r4L$+E1`&!N8fNFY'%n8@3&E@i]aOVLA<Oshg--<#<5Y9Aih$%sI)%aa@PHd>'R3r36U?W3pDR^?2Jd8Vogmn%];#-2MGoVsN%C&KYbr#of8<:r]2QAZ0#3)sIS0F%UdW5A$c'M+q:#N^OL62V$Z8[2t%!2(T8A]b%Ar11;,aiGRj'S5aU$i-8RB0BiiQsOW>Tu:Do%obg)JJ=%$NiMJ!qK+qJIO^]@?XpVH@h'>lM@?X_0>G^bFK+`mO5jMrlbqKCAR95>87O*tYP!#tE9s/1BCW0(En'3;kfj%mD>iT6G%C^@Kg?j59$Bbf"gbpFG]!Z71L:ElF#jYQe&ZqcsK3'.3"RH;Y-<<otgI:QQY7Y\U]E8P9($*&9XW\hl`Xt8@;jaM#]_%8L@fOE'H%)"iXV=cE+[TSO?b@"h%h8s]fD<UWpVfUO6P-jTnERr;1FMVFo[--;KgHWM+O[Am*>biS>kklQ-'NXagFV#orl/X>Ib/:PU3.k@Oj%\6JQ\14*pq0k0!c_(;0f^dZe;U"MKE)Wc&lLmRU#^Cu@PNI)K.)R`qF@Ca#e+70uCj)ma%p210sPL%0LHXgGK3*-YV4tK/JU16O&%[qIB=Yld@tE)U(=7)!]79B,GD&C4^gb[VL.)*qg>W7XLp>4g(;k"hP$,hQ*dj9pJZ8daf^AJBb1.64B4*X6^1Ro5C>1u?;>/d-g!%!;&3iH"g(d%S(?;=&hpTCY.A5WhN<j<M<]R>2"Fl_7%HY</iWr`3=9TTre56Gp$UU]S]iT;EqGIUgk.tW\N"h2pYQC*_'-E9V\])%F<Mm@>"(L!2+_9Fl^4NBSRK/O&Q88Oarq><S![8LkeXTU?=@kZqi&UP!+O0QZ.n2ck_'IDL@IRTjMYT&JaCp%6h4s46F35sWt[`0%bM)2*UkfbVl33\$JInabo?RE`r-fo?@L,Ik5+;A0Ui_(Wh:niOn)(kSkHDW!p]ILbS^(s#Hi#*L9bsoRhWOJX_WkNn9bFfKU_e5$%'o'EBI&c7si1-P1N1Y]^.>dt@5Hkc8OMiI!BgGhk9aX@-lbH,30A1@^*-n+HL7W\kq]\f79M@)9)CO^W@:TYE+cotWg-u;-_9u^)%9\pIOFB';E5X<7Q=&]3(P#E!2#4[!`'sL2n>_Ep0YM;Nj1Bi[#.O7a)Eg^M]kt6;'m"J=^n]\V>UlHCc,CiB"pRJg^k"V$i8@2dD%_-M(*<?%WJ_J6\\jET+;a3]X.DMD`-9SH,uM^.Q4nfV0+NS>e2'JkruH*>\>Id@E$G/:Tn]B&%uH+PkQmrXNh4D+un$'/ns,mp2_%NgIE>3I?%_b&La..p!RTF.27j'5Yr?lgk:*N32aNZmFq?QAX98&W+>J8'G&5;^"FUDR\7R8o5-m-)tc'6$.n2mXk7l!JbdU/:o(c%O"B*M0+tNUotF_l/1ZF1?,Yt@(sh#RgNT69bkeV-KKFP3Ve$HDBn67=:t6_.7mU>SJUe-8JFWD;QBMbb7]4%a:?j,83EZ==UQZ7U%3PXq)5%le)R(]LU.V?/a%Y&-PR]?ep%GpcTCRFj?ZD8t!+=BAX";7.Bi].c".<8UoJOh2H=bEW3raeVHE0'lO?C8/6/J6%CMm-%?%GTeSs;MmgL7>,G<OCU@:hEoM9<"X-,bu&V56R/;[[Z;m^/u3Vl0u&h)d6<G@,e&daAKd3CZZ-_Z7\]P%`YFS_*$?u+%5h2Ylu`I?%Z,1"+TCr,]5-E1UZC(VUiQ4?3mC(bQYgp*E`F2frY)eU_hBBLBUf#X<N.Wk5PW7gs3i\RslYAXmaWgP/UdaFsVDq*"?\Bst[7eiA%Df;i)HC*8bF9k.g_YCGMRTMt>Ti#cgXNe=Zm#1BL<_?qh^bXlTJu]L:R_PNCZln'&,]fG>!u&_=X=7rG)1tc!1>rYp/uiOQ=-i6#%=gfC47mI[f>o%L>in-^cek,\WhC4q3KtbSI$]S&arQo`2L-iTso]AD.^')0j]rjt.?iZlrNfmiTd!;GZB%>OekY*0g>]Z/H7tR1'%/LP7nIUe5dBEAuP,eWg!V'4=!0,Q;V/`WNlLOf>8c6SY<-poOZ$?GosYll<44R:<](08o#iJM(g*4h!\;ojgKT!_\8g75_HGUnTl%\s`:]N$UbOcU1+R@m#Jb(aZUAGcUIs9k$d#eZ^3,nSr_@m+QY-bUoXQ>CV)EPGuKfIRUQM)LiME%f)Jn"`m_><PmK[&fn5ZQ9L)>%K1?A9YKnG#rgWMO?c[&m1+2C#Aq,Zm>[4,b[!1R6%XndVfk_Vi._P78"9"V/nmUIdXn8m.2OEloH>K,eo;W9oN&ikAdTJ-dBg\c.%8;W/Sn%9(g`)@a0(0I[mj>@i,VQNO`r>RiM6Br]LZrj`Ckl-9=<Taf[=<K:Tb:@S*A0&%19sj%&`+57YZ^Z$RBQb-LA+bqF@mp'B%("SVL@A-mKPijje"naQOkDc0=:@hK+,VM^ZFqlMiCj*mTJ1uP$SY[;X`?Xt&"Q)#U[smIEYJS:-^PcVX;:mM`K8jl^B;XmMV=*f?%h#YnQ8%X]<Y>h"d<KIm<r^XY\$N>ZTYU!C(CTcSu!Elu^UhBk7oL#QonZ3+6UlA\7l'B/bfm7)^SVkckQA#IY47[=+jJcHU&ab\%%Ot8-*%O^7h@&qG,barNP2t`Be5+^J'N(4#D17Ra#==)]&J7Q*>=Di,ePO4boWbE__D>ar![ugaQDL2mV5'PnF>=K$K'A*!-T)[SF%jaSLl`><(`'G+`mDbgnUN81=:>UC$0S/Y7pEM$bQc[!M<.e7rMb*CC;@m.#8UR)DS--LUoMnNM703R,3h!YD4I*NmBA"#CeC1#6W%"%a/HS`&bm[N&A3l&d6=ZF$WfS1!0_>>Lc#TTGQXWC5m"[326r?`B1"\('S!cGY37>f,7;VD[QG*48ZNbQYSb,b\=]@?o9=@Mg9B%WS8_&LO1@Y%>(&>$Y8Vqclc<,UHadW=B<)Pl&&^XY_.$kQj:VdWVC^!'WCM+#(H0P.glTt<?44cTJjH,Sm^nAPi9E`==63L*#;5#%o1DA%<qhGk?_3YfqJ3FK?9H-cEYMmk4XVeQDcFWKaPY875FiN=V7</FE3+T68k*X6MPW9o%\65P\lnEWCdB!E/l:&,\!Ui[XZl;q%;3k@2WQD/4e1CO7R:.:*#Dtb&9T2P^:.eTa+(K-u*(gM<?u;Ek?5^El<3*o3JVDbpVs^rA`;!aa='Bt#l(e#-SG^35HTQg`nls9J%`(]<Q4DoS8Cm't?o-(')$$mQn#lJr%3;BO"q?>>sai.WGI]kHDQRq_%Em6*ZIE#Gt0\]r>+b,uV:6?8bEK\)H:AL="]_FQcG8LHq%R-F\a.no;=c$KM&1p@eQ0_RQUr->g3"dV*MK%tsMU*KF"WhO>bPJ&YP8S@U##Uc;a*Y?L9YGd;onsChQ&M<5-E44Gm:Ur)CEs8?n%:<?*^8]cPq5$/"QF0'oq993`QD#dgKP]Y/Y,Y\%.4OT*PZ%R-YL't;f+ni7*H4jPp<FTOranr5;"AMWs"<PYN93Irg!Vn8Cr*RW2%s-^hA?eeln)kJ"WbB%!C%@_*L*/"cj:<>n`-C4<06CJPiLXg0s0QJiP>jH,1ck[%)MmbYu"&9`:MV6=V2AQ1[#ilOjE(Wke>;J1%%G@]g6Jr?/i^&Tu7cR`S\S6rr<CDEH?03+D;..+k.I<b_HX'`Sfp[mFbVj!_(7#j<jKiCBJEREE7P#3M[8mm2ZRW;eDVM_f>ESG]T%]^[A#0:e>fdW[\O/H(8-*H5`[7@4s]j5i8A66_"U;*lHT@?#toOWXNsYnq.kK3^p2*!1UD6f!SR2b`UqIOE:0BA7JA3XU_6TGSCY%P[eG";J*t><+;>-IE1c/WI,W$>2lu@WTkY(B5Ha46s@h-G:_ikp\27t0IM?u?ss?R,.j:MUZr9G(o^mmD-!]9'9$8Pi0l/hI^j#?%bCQ\``O_Trj[gc9]u>E`B`[0IH$%LqF>=5WiK$Et(!_hJBZStYhAI&m!4]P<!u1SW1KSn7;_#YKpmuU"+oOhLnd*#ZH1UCqZRYts%KGqK6r2a'./,>$HIHiFV7e*9"FrfmD18.=BPSmkM8;"r3"RPoo?.A1dK8Ng]hCi??%ik:s1+bi&-&Og"W><CU2o8BI`lrs@#tQ's%Yn15BEM(4gcH#-S(LL):Y(SL?S#Z:eW>QoZkk(:F^mDCH.4)$l&FD/.NMTo8$>18s%,H@IX#AlnV25n*dT`"o&2gogoY+K<l]]0d%dPe[Hm+1\o-M*uDHI4#S$e*iFAL6b)lQ]Sl`[aN!d4&A''QKkiW%4q/FF^3PZis,</jHM5N#-#7no@9h3_&q$cM:2RWkKXM6>Oka%66>Wc/8@Mhfb[%W;1$ha]*b#p91[VcP@kJ7ed0+.[Z;tnW+0XP]")K/;&pZp>rO@fPTGgnHR+fR!,AGjNc:7BrIms?:+&:]ii_dC%(=fL.%@(!ihG-n%Sqg<2H03oafY$LOlBtr-V\iGoj4b:i&<E`#'GJC1WeGoL-3R07%C@]U]?pkMhsPJ%")d^&fV">afk*Vo-cX1^%rdeBe81!rB)AmEi,M&#mon*u(iq\U8%pAI\"I^cS'JLT*h^S19/\HeT6oH9d8.*d/P&^3Fa2sdXW3YKmbp7J_DIG_fY[H&o_;g-4%Wh*:sn9MB&D=Ynm!bkL3<E@%ZR@"qnT=H#PJWn-'EjO7(hbMaqW"AfU$n7]/<ZPX6R?PZ(;/9fJ\_,Tqd:,]=X.4[O`ujL>]_[\+%qs5-&^>IbWH[54Hc[M9grSlY&]@Yq'I<b9KIt%4cjk&sWa;qQ1m.c(fQA=%Kp:ouQ["%LmGOs;4laLfis5DusIrfu2mKX[h0E,Lg%h!JbATAP+P*r]=>Vu=XXFHih$p?6)FB=!'a?2MP>D#a$D%JocVhYtF[^\mD@qZ]:ar5N4J5ZfD-A05of.M#=;beWY,(sg.5U\8=j%l0V8Tj0pG'fVX_1)!^K30QFS/jVl^"4&8+Noj`[>`q@YOQtI,sE0$a;0HPELpQ"cS`WNYB"FKo\erb"YbY0dc?t&,q++/"F!"Tq!%Z45E&dY\rt)S?:`M5G8WrmhRV3adc5++L7F""T&,8]o).i+N?`dLOoTkH,b_=X0k2<+nRbS&Lp-$qN[$0:a:q`s*F@<'TR9B#-B(%2NBk=hX`ce8C-T-Icn\U/m!<52IGl/OQC`i)m/CLROpaR^W.Kh?<T\S%GmVSHjdqQ!;V>7k^_Cg*+%DSCtNisT'h6d8IBNO3t/sO%K$)=h=1)nV5MToPbL6[HS(-m_>CHKga$X9<o`GAXn/S=r4VNGmbg+-J'*.WJBCiD\*pZHAnT*du)-7t*Sof$'VA@+,/^Wqpg['lu%lr8FL^'5:L&B-3(JQ>Y,]NbX/fZ%7Ul#M$^*+UU)AqJR3Hnqof@O++?ghW9d[W<EhK>j8&WNI%G:i?+TFJ0L]H0'S\("hT,:ci1@%.it$YC\@$q:1*%Mpp[Q;?jALHh/M)ppme64T6M7G3'[[Yk;qgHPgd(C6RPs,0K2MR!2_=XW/oDIS(Tb!@;?*[1Z<UZU;C?L;$WDB%F_EV1he'=mr6<6#?^oGu3st$kbdVtL'Y<dFNi`U-?J7(PV;ja\%#f?\,K1,t=g#X#Wa%jeN<ZULD.(%KrB@R<kO3RPgd.1QcMQo*%/.m-7e[D[F"'\gAn_7h]s6X9"<$@TKYUt[.F'cW1D@FqjQ4o[i5-\u?j%dL2`q'u;g6(4$q=Q4RIUZFJ1m$gE!unB-GFC*JJ%oE#%CJ26m;&ULmnu_BcLcUUC3J""M"#Ih3pDLCqgG(8gJT[';b>gh8aEaN]/5I3eDc4?rD"[V9SQf3)8WMbP8B/B_UK95o#WoKrAUb2t%?*>k2qGn?#6ZkE;"<]'>H*Y_Z'B??afl"b9D$/hi9%DR*$K6RrA\gUf9PcS4Hc7L3J&Pt9JEO'$dlHKN$!\;1DF2N@a"OW)<sDnq%D1]F%%sV"&DL@mi26l=$m>4M0QrkFWj%a)4NTVkqXrn0]:[;"PeT[?A%:hY@@_Ge%:8?neml(I+g6+YX8sS+=RP*Fsq3Jq0-a5F<%?oCd"IE#*Pm?e!Ym#pTa=(QA+o0rgaSi3h0UjerhlLT3])fRZ++G[_h;'#.O`JSc.W4]t[J-fXZk]Uos*]`kDi2`W;j`\/VM8]R[%T`u`n-o15(1H:Deq8cbT4%PnR";>SPpg,'g6P>$Vn;P]qj?sF;OX4Kohp&3r1_IC24!KdKX8`D/f?0s$@);#IN:\oTX!:A:P9sE3%EO3c1GonDcq`?)s/6=iCf@&?jEP3$)ib%g=_n;Q6N!*LXFMA7*h@7XB<fIr%Y!P=1\Vt\Y6<(=X;d(aOfF<SkXk9.nLOi^J\fpb<%`-DU7?$N]-,>+P/bQO^4du>N$lEh]U[lQ2tkLZgGau.eN4#'jK+AR^.l$%l!3psNS\Og0nYTpLAIYa@S\U(c#1`X4;NZ>ZU^%2h:%,\pQF<TGQi.307$I>MO'<u5BUp]\"WE8G<QR,`J8]F+Kq*HoF[MjL"+l9pq`HsgHmmrt4tFoHi"?<pd`k>c&/pp+_Tp]fKY%:+MG%`<U#(iOI2jK[Gh!>`):->HYglP(stc@!V-jft9B61Zm5GG<:7rA/MO'.W3(d)4m+9YW5G03huf<1V@Q3XZ*!"i*#Kk$jL7X/m!V]%OB(9S#Q#`D9G(BV]GZOSlq`m2-k7ApoGgi4!*CWB;=3,G04Xr;!*e@HWp7nuE,E$j).`!hXD.tXa^X)q^p_-+`C,>Xds;adJ]M3Y%q$Zuh?8VU8gIX'<P;NPf-O`S0p`ZUb^2@)>;s$6aCkm#7oCmAL'e$+<^R%"6"n>b*oYL\TkD).d\YrAsnrkZjE!@FhOW4r/D.r[r%RrBQS8ZkO"drOMg*lt3>jc;>6_kKNc.pgl1_jP+h/@f?=Z^k97a&N]."YEG>1hHC3T(B>;dhU&3%ZlIS"DYNd$Kre`WaUSQ0T's4%5b^;QZf3;FEROeLhCKM,G)ON%e[T=5"-kP^Qa7m=O%b$o?k<O>["aN-:Adp9A23>iV?`^YZll[]'ALSEc5Y_JfRj+0rkbQ`SZm8K%lEeF9]'GU0b8DB#3lLkg+WVD\1LY5;d><)JU.W*]hCP&'e#2>fn85k0GGW?J3;HFJkX+hR]3DMM5FB^1L95e,bjU>!10O3Ok80ig%o>$TE5e[2keJ,I_gLJZ;OQC<qN09([:);PjSsR$t[Bs_2#FB:UH^q:5-&p1l59,QndqP6m%f%fj;ZIs$:b4J[719[Xfu_ZDZ))Y-%kc5],@sIJA$qU!6V&Pec2#ZoJV`OO,03BN7=apgAA@W2P^[/XS%D1C_ibTOYJ,G1I=rn.oK'4?In><![F=d?Z&FWMO7YXfM+HO_P%@:?e0.aq;rENBg3Oh%Vg/?!S'leq/-1C\D4H*U6:=tt7]gnW.tnm7VdTG'X-;%RGofPN_n:-55kRu):.QY67^rl9jS0_#R7Ri!NI%G5;<\"4Xd8Jg8>WR0[7/Q,\f)m?0=Ml9qWYBeR;5RanB&egC1[eZ$>5N*BRseq#h4nh&sS%`$28e4F@YB,d@i'WdA&a<3u#><cRL%[TBlUO;/)K@Ld`;X'@t=&pYIphUJ3oS4Y+EC!!Ti?c<]CI*WN/Q,b#lS6#k-kOMA-@M];5Y[OK./&o1>p+D\Fi=0eL;CTX7kJV>#%[-I]F48\/=(jC?'m@_XYnSZm/(sjI[@/4LVHeP7=VKM7n8op>#i<d>Kl,!&[<C!Z-mYgEPf1Aq&0FJLnZJb7b_1IhkE@7MTN11+#%:7'qLJlV,\S'/8=F3%(4SO2Qke:KZN>G0j_U4q^XEH`ar:F?D9LEaI5.hp*dXKE+&I3DgB#JT1cQKP@e"\cE>1S*0=%#P#k>2Ojj%pVX]gg\eo6QFLllbat??d[^J5.bqAcI!h=Qce#X1LDRGe<hS(o/`@e#C)A+K3PCa_6,AOQLLJ.=U?A'K=,]<\7^(9B#D1hn.63`q%2P&RE46_"u_VgI2gb>57W:0;4L7c4%?@8K<Ph/RW_]'G0YhBS<HcufSm'0g^SHm.aC<MUJ]7J#iX0t:^%$C=*OYc`ZhIo3pis(7D%RA_#XDD[f1rc2Y@9NISFX?r_KQH'@+KcR)e!cX;?N:ud,oQknAXJ6PtX-.L4#!GK[R<'V&o#QbRVMB.R<)p+jM$\)4FKN$:0^Q5,%LUJ.=d.5YJ7lHp,e)dU0PEc@V]HCU-K1>UN2MJ8`*8*\A0-4^*[@QJ.03@+K3nq2!9XZ'MV1/%u_kLb#5Z(iok$[nfp8N,1`olX,%@ol[Plo<pkR00R8=shqOQ*3:iE)n9)>+pSF5#9D>.FI4`b=L@/%56!,j=];Eobt=K7\nbI(l2*"/c0"oqW]0),/]cWqpX-L0rkfZ%E_W.;HG;IiHhhDhVN6ldqke:,Z5uU':1_iXG.1jUg0nPV@)W0fd-k0A)L?)RS\#6IOlaJS#jKF0hh]<L!)&Ca!bnE1JSQhS5^ZgA%kf9OiMs#'L6HbN$q/!"M>pVloiG;RU0ls_iGbQGEMsGN8>*S'e#-X+^n\jh)Y)CgPh1+j>ne"5BM.nb$m*HNk!aN#'\,G-c@99lS%D#<?)+UEg.[XAHJE-3c?YH)@27%?ZtO#IF^eE?EuLa6qL3hEg*QrqL%LFb.c#/mNB&&fYFY:%f4ctcdGV%!Om+^KhkEgi63I,5Ki%\EF1`UKLQ=rms#9i_TRJlS"lZoATAoDkB5KI/2%Q5<do;IeW:/a4DE*rk89Tm?\od^A7R'_pe!3?bQIT8Gbunr$O`)`NT9]c2Rf^S.[p~>%AI9_PrivateDataEnd